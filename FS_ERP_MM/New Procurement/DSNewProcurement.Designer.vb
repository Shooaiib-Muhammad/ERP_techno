'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSNewProcurement"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSNewProcurement
    Inherits Global.System.Data.DataSet
    
    Private tabletbl_Pur_Demand_New As tbl_Pur_Demand_NewDataTable
    
    Private tabletbl_Pur_PartialReceiving_New As tbl_Pur_PartialReceiving_NewDataTable
    
    Private tabletbl_Inv_Dept As tbl_Inv_DeptDataTable
    
    Private tabletbl_Dept_Info As tbl_Dept_InfoDataTable
    
    Private tabletbl_Sec_Middle As tbl_Sec_MiddleDataTable
    
    Private tabletbl_Bill_Demand As tbl_Bill_DemandDataTable
    
    Private relationtbl_Pur_Demand_tbl_Pur_PartialReceiving As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_Pur_Demand_New")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pur_Demand_NewDataTable(ds.Tables("tbl_Pur_Demand_New")))
            End If
            If (Not (ds.Tables("tbl_Pur_PartialReceiving_New")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pur_PartialReceiving_NewDataTable(ds.Tables("tbl_Pur_PartialReceiving_New")))
            End If
            If (Not (ds.Tables("tbl_Inv_Dept")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_DeptDataTable(ds.Tables("tbl_Inv_Dept")))
            End If
            If (Not (ds.Tables("tbl_Dept_Info")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Dept_InfoDataTable(ds.Tables("tbl_Dept_Info")))
            End If
            If (Not (ds.Tables("tbl_Sec_Middle")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Sec_MiddleDataTable(ds.Tables("tbl_Sec_Middle")))
            End If
            If (Not (ds.Tables("tbl_Bill_Demand")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Bill_DemandDataTable(ds.Tables("tbl_Bill_Demand")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Pur_Demand_New() As tbl_Pur_Demand_NewDataTable
        Get
            Return Me.tabletbl_Pur_Demand_New
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Pur_PartialReceiving_New() As tbl_Pur_PartialReceiving_NewDataTable
        Get
            Return Me.tabletbl_Pur_PartialReceiving_New
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Inv_Dept() As tbl_Inv_DeptDataTable
        Get
            Return Me.tabletbl_Inv_Dept
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Dept_Info() As tbl_Dept_InfoDataTable
        Get
            Return Me.tabletbl_Dept_Info
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Sec_Middle() As tbl_Sec_MiddleDataTable
        Get
            Return Me.tabletbl_Sec_Middle
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Bill_Demand() As tbl_Bill_DemandDataTable
        Get
            Return Me.tabletbl_Bill_Demand
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSNewProcurement = CType(MyBase.Clone,DSNewProcurement)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tbl_Pur_Demand_New")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pur_Demand_NewDataTable(ds.Tables("tbl_Pur_Demand_New")))
            End If
            If (Not (ds.Tables("tbl_Pur_PartialReceiving_New")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Pur_PartialReceiving_NewDataTable(ds.Tables("tbl_Pur_PartialReceiving_New")))
            End If
            If (Not (ds.Tables("tbl_Inv_Dept")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_DeptDataTable(ds.Tables("tbl_Inv_Dept")))
            End If
            If (Not (ds.Tables("tbl_Dept_Info")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Dept_InfoDataTable(ds.Tables("tbl_Dept_Info")))
            End If
            If (Not (ds.Tables("tbl_Sec_Middle")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Sec_MiddleDataTable(ds.Tables("tbl_Sec_Middle")))
            End If
            If (Not (ds.Tables("tbl_Bill_Demand")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Bill_DemandDataTable(ds.Tables("tbl_Bill_Demand")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletbl_Pur_Demand_New = CType(MyBase.Tables("tbl_Pur_Demand_New"),tbl_Pur_Demand_NewDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Pur_Demand_New) Is Nothing) Then
                Me.tabletbl_Pur_Demand_New.InitVars
            End If
        End If
        Me.tabletbl_Pur_PartialReceiving_New = CType(MyBase.Tables("tbl_Pur_PartialReceiving_New"),tbl_Pur_PartialReceiving_NewDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Pur_PartialReceiving_New) Is Nothing) Then
                Me.tabletbl_Pur_PartialReceiving_New.InitVars
            End If
        End If
        Me.tabletbl_Inv_Dept = CType(MyBase.Tables("tbl_Inv_Dept"),tbl_Inv_DeptDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Inv_Dept) Is Nothing) Then
                Me.tabletbl_Inv_Dept.InitVars
            End If
        End If
        Me.tabletbl_Dept_Info = CType(MyBase.Tables("tbl_Dept_Info"),tbl_Dept_InfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Dept_Info) Is Nothing) Then
                Me.tabletbl_Dept_Info.InitVars
            End If
        End If
        Me.tabletbl_Sec_Middle = CType(MyBase.Tables("tbl_Sec_Middle"),tbl_Sec_MiddleDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Sec_Middle) Is Nothing) Then
                Me.tabletbl_Sec_Middle.InitVars
            End If
        End If
        Me.tabletbl_Bill_Demand = CType(MyBase.Tables("tbl_Bill_Demand"),tbl_Bill_DemandDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Bill_Demand) Is Nothing) Then
                Me.tabletbl_Bill_Demand.InitVars
            End If
        End If
        Me.relationtbl_Pur_Demand_tbl_Pur_PartialReceiving = Me.Relations("tbl_Pur_Demand_tbl_Pur_PartialReceiving")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSNewProcurement"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSNewProcurement.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletbl_Pur_Demand_New = New tbl_Pur_Demand_NewDataTable()
        MyBase.Tables.Add(Me.tabletbl_Pur_Demand_New)
        Me.tabletbl_Pur_PartialReceiving_New = New tbl_Pur_PartialReceiving_NewDataTable()
        MyBase.Tables.Add(Me.tabletbl_Pur_PartialReceiving_New)
        Me.tabletbl_Inv_Dept = New tbl_Inv_DeptDataTable()
        MyBase.Tables.Add(Me.tabletbl_Inv_Dept)
        Me.tabletbl_Dept_Info = New tbl_Dept_InfoDataTable()
        MyBase.Tables.Add(Me.tabletbl_Dept_Info)
        Me.tabletbl_Sec_Middle = New tbl_Sec_MiddleDataTable()
        MyBase.Tables.Add(Me.tabletbl_Sec_Middle)
        Me.tabletbl_Bill_Demand = New tbl_Bill_DemandDataTable()
        MyBase.Tables.Add(Me.tabletbl_Bill_Demand)
        Me.relationtbl_Pur_Demand_tbl_Pur_PartialReceiving = New Global.System.Data.DataRelation("tbl_Pur_Demand_tbl_Pur_PartialReceiving", New Global.System.Data.DataColumn() {Me.tabletbl_Pur_Demand_New.PDIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_Pur_PartialReceiving_New.PDIDColumn}, false)
        Me.Relations.Add(Me.relationtbl_Pur_Demand_tbl_Pur_PartialReceiving)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Pur_Demand_New() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Pur_PartialReceiving_New() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Inv_Dept() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Dept_Info() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Sec_Middle() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Bill_Demand() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSNewProcurement = New DSNewProcurement()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Pur_Demand_NewRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Pur_Demand_NewRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Pur_PartialReceiving_NewRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Pur_PartialReceiving_NewRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Inv_DeptRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Inv_DeptRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Dept_InfoRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Dept_InfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Sec_MiddleRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Sec_MiddleRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Bill_DemandRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Bill_DemandRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Pur_Demand_NewDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Pur_Demand_NewRow)
        
        Private columnPDID As Global.System.Data.DataColumn
        
        Private columnPDDate As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnPDQty As Global.System.Data.DataColumn
        
        Private columnNarration As Global.System.Data.DataColumn
        
        Private columnPOStatus As Global.System.Data.DataColumn
        
        Private columnPODate As Global.System.Data.DataColumn
        
        Private columnInProcessStatus As Global.System.Data.DataColumn
        
        Private columnInProcessDate As Global.System.Data.DataColumn
        
        Private columnCompStatus As Global.System.Data.DataColumn
        
        Private columnCompDate As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnLocalCustID As Global.System.Data.DataColumn
        
        Private columnVerificationStatus As Global.System.Data.DataColumn
        
        Private columnVerificationDate As Global.System.Data.DataColumn
        
        Private columnDocID As Global.System.Data.DataColumn
        
        Private columnAfterPurchaseVStatus As Global.System.Data.DataColumn
        
        Private columnAfterPurchaseVDate As Global.System.Data.DataColumn
        
        Private columnPurchaseStatus As Global.System.Data.DataColumn
        
        Private columnPurchaseDate As Global.System.Data.DataColumn
        
        Private columnPurchaseAmt As Global.System.Data.DataColumn
        
        Private columnGMNo As Global.System.Data.DataColumn
        
        Private columnBookingStatus As Global.System.Data.DataColumn
        
        Private columnBookingDueDate As Global.System.Data.DataColumn
        
        Private columnPurchaseDescription As Global.System.Data.DataColumn
        
        Private columnAmtEntryDate As Global.System.Data.DataColumn
        
        Private columnPartialRecStatus As Global.System.Data.DataColumn
        
        Private columnReceiveQty As Global.System.Data.DataColumn
        
        Private columnAvgUnitAmt As Global.System.Data.DataColumn
        
        Private columnVendorName As Global.System.Data.DataColumn
        
        Private columnDemandStatus As Global.System.Data.DataColumn
        
        Private columnOtherCharges As Global.System.Data.DataColumn
        
        Private columnSleepStatus As Global.System.Data.DataColumn
        
        Private columnSleepDate As Global.System.Data.DataColumn
        
        Private columnPendingStatus As Global.System.Data.DataColumn
        
        Private columnPendingDate As Global.System.Data.DataColumn
        
        Private columnOGStatus As Global.System.Data.DataColumn
        
        Private columnOGDate As Global.System.Data.DataColumn
        
        Private columnOrderGivenDesc As Global.System.Data.DataColumn
        
        Private columnDemandType As Global.System.Data.DataColumn
        
        Private columnDemandPeriority As Global.System.Data.DataColumn
        
        Private columnApprovedBy As Global.System.Data.DataColumn
        
        Private columnDemandPeriority1 As Global.System.Data.DataColumn
        
        Private columnDeptID As Global.System.Data.DataColumn
        
        Private columnIssuanceStatus As Global.System.Data.DataColumn
        
        Private columnIssueDate As Global.System.Data.DataColumn
        
        Private columnRecIssueDate As Global.System.Data.DataColumn
        
        Private columnIssueNarration As Global.System.Data.DataColumn
        
        Private columnBillNo As Global.System.Data.DataColumn
        
        Private columnReplQty As Global.System.Data.DataColumn
        
        Private columnRepStatus As Global.System.Data.DataColumn
        
        Private columnIRNo As Global.System.Data.DataColumn
        
        Private columnIssueDesc As Global.System.Data.DataColumn
        
        Private columnActStatus As Global.System.Data.DataColumn
        
        Private columnActRecDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Pur_Demand_New"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NarrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNarration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property POStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PODateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InProcessStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInProcessStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InProcessDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInProcessDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LocalCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VerificationStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerificationStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VerificationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerificationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DocIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AfterPurchaseVStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterPurchaseVStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AfterPurchaseVDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterPurchaseVDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GMNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingDueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingDueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AmtEntryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmtEntryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialRecStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialRecStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AvgUnitAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgUnitAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VendorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OtherChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SleepStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSleepStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SleepDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSleepDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PendingStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPendingStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PendingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPendingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OGStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOGStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OGDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOGDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OrderGivenDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderGivenDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandPeriorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandPeriority
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ApprovedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandPeriority1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandPeriority1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssuanceStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssuanceStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecIssueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecIssueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueNarrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueNarration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BillNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReplQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RepStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IRNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActRecDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActRecDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Pur_Demand_NewRow
            Get
                Return CType(Me.Rows(index),tbl_Pur_Demand_NewRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_Demand_NewRowChanging As tbl_Pur_Demand_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_Demand_NewRowChanged As tbl_Pur_Demand_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_Demand_NewRowDeleting As tbl_Pur_Demand_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_Demand_NewRowDeleted As tbl_Pur_Demand_NewRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Pur_Demand_NewRow(ByVal row As tbl_Pur_Demand_NewRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Pur_Demand_NewRow( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Boolean,  _
                    ByVal PODate As Date,  _
                    ByVal InProcessStatus As Boolean,  _
                    ByVal InProcessDate As Date,  _
                    ByVal CompStatus As Boolean,  _
                    ByVal CompDate As Date,  _
                    ByVal UOM As String,  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Boolean,  _
                    ByVal VerificationDate As Date,  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Boolean,  _
                    ByVal AfterPurchaseVDate As Date,  _
                    ByVal PurchaseStatus As Boolean,  _
                    ByVal PurchaseDate As Date,  _
                    ByVal PurchaseAmt As Decimal,  _
                    ByVal GMNo As Integer,  _
                    ByVal BookingStatus As Boolean,  _
                    ByVal BookingDueDate As Date,  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Date,  _
                    ByVal PartialRecStatus As Boolean,  _
                    ByVal ReceiveQty As Decimal,  _
                    ByVal AvgUnitAmt As Decimal,  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Decimal,  _
                    ByVal SleepStatus As Boolean,  _
                    ByVal SleepDate As Date,  _
                    ByVal PendingStatus As Boolean,  _
                    ByVal PendingDate As Date,  _
                    ByVal OGStatus As Boolean,  _
                    ByVal OGDate As Date,  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As Integer,  _
                    ByVal ApprovedBy As Integer,  _
                    ByVal DemandPeriority1 As String,  _
                    ByVal DeptID As Integer,  _
                    ByVal IssuanceStatus As Boolean,  _
                    ByVal IssueDate As Date,  _
                    ByVal RecIssueDate As Date,  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Decimal,  _
                    ByVal RepStatus As String,  _
                    ByVal IRNo As Integer,  _
                    ByVal IssueDesc As String,  _
                    ByVal ActStatus As Boolean,  _
                    ByVal ActRecDate As Date) As tbl_Pur_Demand_NewRow
            Dim rowtbl_Pur_Demand_NewRow As tbl_Pur_Demand_NewRow = CType(Me.NewRow,tbl_Pur_Demand_NewRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PDDate, Code, PDQty, Narration, POStatus, PODate, InProcessStatus, InProcessDate, CompStatus, CompDate, UOM, LocalCustID, VerificationStatus, VerificationDate, DocID, AfterPurchaseVStatus, AfterPurchaseVDate, PurchaseStatus, PurchaseDate, PurchaseAmt, GMNo, BookingStatus, BookingDueDate, PurchaseDescription, AmtEntryDate, PartialRecStatus, ReceiveQty, AvgUnitAmt, VendorName, DemandStatus, OtherCharges, SleepStatus, SleepDate, PendingStatus, PendingDate, OGStatus, OGDate, OrderGivenDesc, DemandType, DemandPeriority, ApprovedBy, DemandPeriority1, DeptID, IssuanceStatus, IssueDate, RecIssueDate, IssueNarration, BillNo, ReplQty, RepStatus, IRNo, IssueDesc, ActStatus, ActRecDate}
            rowtbl_Pur_Demand_NewRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Pur_Demand_NewRow)
            Return rowtbl_Pur_Demand_NewRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByPDID(ByVal PDID As Integer) As tbl_Pur_Demand_NewRow
            Return CType(Me.Rows.Find(New Object() {PDID}),tbl_Pur_Demand_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Pur_Demand_NewDataTable = CType(MyBase.Clone,tbl_Pur_Demand_NewDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Pur_Demand_NewDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPDID = MyBase.Columns("PDID")
            Me.columnPDDate = MyBase.Columns("PDDate")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnPDQty = MyBase.Columns("PDQty")
            Me.columnNarration = MyBase.Columns("Narration")
            Me.columnPOStatus = MyBase.Columns("POStatus")
            Me.columnPODate = MyBase.Columns("PODate")
            Me.columnInProcessStatus = MyBase.Columns("InProcessStatus")
            Me.columnInProcessDate = MyBase.Columns("InProcessDate")
            Me.columnCompStatus = MyBase.Columns("CompStatus")
            Me.columnCompDate = MyBase.Columns("CompDate")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnLocalCustID = MyBase.Columns("LocalCustID")
            Me.columnVerificationStatus = MyBase.Columns("VerificationStatus")
            Me.columnVerificationDate = MyBase.Columns("VerificationDate")
            Me.columnDocID = MyBase.Columns("DocID")
            Me.columnAfterPurchaseVStatus = MyBase.Columns("AfterPurchaseVStatus")
            Me.columnAfterPurchaseVDate = MyBase.Columns("AfterPurchaseVDate")
            Me.columnPurchaseStatus = MyBase.Columns("PurchaseStatus")
            Me.columnPurchaseDate = MyBase.Columns("PurchaseDate")
            Me.columnPurchaseAmt = MyBase.Columns("PurchaseAmt")
            Me.columnGMNo = MyBase.Columns("GMNo")
            Me.columnBookingStatus = MyBase.Columns("BookingStatus")
            Me.columnBookingDueDate = MyBase.Columns("BookingDueDate")
            Me.columnPurchaseDescription = MyBase.Columns("PurchaseDescription")
            Me.columnAmtEntryDate = MyBase.Columns("AmtEntryDate")
            Me.columnPartialRecStatus = MyBase.Columns("PartialRecStatus")
            Me.columnReceiveQty = MyBase.Columns("ReceiveQty")
            Me.columnAvgUnitAmt = MyBase.Columns("AvgUnitAmt")
            Me.columnVendorName = MyBase.Columns("VendorName")
            Me.columnDemandStatus = MyBase.Columns("DemandStatus")
            Me.columnOtherCharges = MyBase.Columns("OtherCharges")
            Me.columnSleepStatus = MyBase.Columns("SleepStatus")
            Me.columnSleepDate = MyBase.Columns("SleepDate")
            Me.columnPendingStatus = MyBase.Columns("PendingStatus")
            Me.columnPendingDate = MyBase.Columns("PendingDate")
            Me.columnOGStatus = MyBase.Columns("OGStatus")
            Me.columnOGDate = MyBase.Columns("OGDate")
            Me.columnOrderGivenDesc = MyBase.Columns("OrderGivenDesc")
            Me.columnDemandType = MyBase.Columns("DemandType")
            Me.columnDemandPeriority = MyBase.Columns("DemandPeriority")
            Me.columnApprovedBy = MyBase.Columns("ApprovedBy")
            Me.columnDemandPeriority1 = MyBase.Columns("DemandPeriority1")
            Me.columnDeptID = MyBase.Columns("DeptID")
            Me.columnIssuanceStatus = MyBase.Columns("IssuanceStatus")
            Me.columnIssueDate = MyBase.Columns("IssueDate")
            Me.columnRecIssueDate = MyBase.Columns("RecIssueDate")
            Me.columnIssueNarration = MyBase.Columns("IssueNarration")
            Me.columnBillNo = MyBase.Columns("BillNo")
            Me.columnReplQty = MyBase.Columns("ReplQty")
            Me.columnRepStatus = MyBase.Columns("RepStatus")
            Me.columnIRNo = MyBase.Columns("IRNo")
            Me.columnIssueDesc = MyBase.Columns("IssueDesc")
            Me.columnActStatus = MyBase.Columns("ActStatus")
            Me.columnActRecDate = MyBase.Columns("ActRecDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPDID = New Global.System.Data.DataColumn("PDID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDID)
            Me.columnPDDate = New Global.System.Data.DataColumn("PDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDDate)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnPDQty = New Global.System.Data.DataColumn("PDQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDQty)
            Me.columnNarration = New Global.System.Data.DataColumn("Narration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNarration)
            Me.columnPOStatus = New Global.System.Data.DataColumn("POStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOStatus)
            Me.columnPODate = New Global.System.Data.DataColumn("PODate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODate)
            Me.columnInProcessStatus = New Global.System.Data.DataColumn("InProcessStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInProcessStatus)
            Me.columnInProcessDate = New Global.System.Data.DataColumn("InProcessDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInProcessDate)
            Me.columnCompStatus = New Global.System.Data.DataColumn("CompStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStatus)
            Me.columnCompDate = New Global.System.Data.DataColumn("CompDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompDate)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnLocalCustID = New Global.System.Data.DataColumn("LocalCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalCustID)
            Me.columnVerificationStatus = New Global.System.Data.DataColumn("VerificationStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerificationStatus)
            Me.columnVerificationDate = New Global.System.Data.DataColumn("VerificationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerificationDate)
            Me.columnDocID = New Global.System.Data.DataColumn("DocID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocID)
            Me.columnAfterPurchaseVStatus = New Global.System.Data.DataColumn("AfterPurchaseVStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterPurchaseVStatus)
            Me.columnAfterPurchaseVDate = New Global.System.Data.DataColumn("AfterPurchaseVDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterPurchaseVDate)
            Me.columnPurchaseStatus = New Global.System.Data.DataColumn("PurchaseStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseStatus)
            Me.columnPurchaseDate = New Global.System.Data.DataColumn("PurchaseDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseDate)
            Me.columnPurchaseAmt = New Global.System.Data.DataColumn("PurchaseAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseAmt)
            Me.columnGMNo = New Global.System.Data.DataColumn("GMNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMNo)
            Me.columnBookingStatus = New Global.System.Data.DataColumn("BookingStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingStatus)
            Me.columnBookingDueDate = New Global.System.Data.DataColumn("BookingDueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingDueDate)
            Me.columnPurchaseDescription = New Global.System.Data.DataColumn("PurchaseDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseDescription)
            Me.columnAmtEntryDate = New Global.System.Data.DataColumn("AmtEntryDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmtEntryDate)
            Me.columnPartialRecStatus = New Global.System.Data.DataColumn("PartialRecStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialRecStatus)
            Me.columnReceiveQty = New Global.System.Data.DataColumn("ReceiveQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQty)
            Me.columnAvgUnitAmt = New Global.System.Data.DataColumn("AvgUnitAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgUnitAmt)
            Me.columnVendorName = New Global.System.Data.DataColumn("VendorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendorName)
            Me.columnDemandStatus = New Global.System.Data.DataColumn("DemandStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandStatus)
            Me.columnOtherCharges = New Global.System.Data.DataColumn("OtherCharges", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherCharges)
            Me.columnSleepStatus = New Global.System.Data.DataColumn("SleepStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSleepStatus)
            Me.columnSleepDate = New Global.System.Data.DataColumn("SleepDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSleepDate)
            Me.columnPendingStatus = New Global.System.Data.DataColumn("PendingStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPendingStatus)
            Me.columnPendingDate = New Global.System.Data.DataColumn("PendingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPendingDate)
            Me.columnOGStatus = New Global.System.Data.DataColumn("OGStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOGStatus)
            Me.columnOGDate = New Global.System.Data.DataColumn("OGDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOGDate)
            Me.columnOrderGivenDesc = New Global.System.Data.DataColumn("OrderGivenDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderGivenDesc)
            Me.columnDemandType = New Global.System.Data.DataColumn("DemandType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandType)
            Me.columnDemandPeriority = New Global.System.Data.DataColumn("DemandPeriority", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandPeriority)
            Me.columnApprovedBy = New Global.System.Data.DataColumn("ApprovedBy", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedBy)
            Me.columnDemandPeriority1 = New Global.System.Data.DataColumn("DemandPeriority1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandPeriority1)
            Me.columnDeptID = New Global.System.Data.DataColumn("DeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptID)
            Me.columnIssuanceStatus = New Global.System.Data.DataColumn("IssuanceStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssuanceStatus)
            Me.columnIssueDate = New Global.System.Data.DataColumn("IssueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueDate)
            Me.columnRecIssueDate = New Global.System.Data.DataColumn("RecIssueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecIssueDate)
            Me.columnIssueNarration = New Global.System.Data.DataColumn("IssueNarration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueNarration)
            Me.columnBillNo = New Global.System.Data.DataColumn("BillNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillNo)
            Me.columnReplQty = New Global.System.Data.DataColumn("ReplQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplQty)
            Me.columnRepStatus = New Global.System.Data.DataColumn("RepStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepStatus)
            Me.columnIRNo = New Global.System.Data.DataColumn("IRNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRNo)
            Me.columnIssueDesc = New Global.System.Data.DataColumn("IssueDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueDesc)
            Me.columnActStatus = New Global.System.Data.DataColumn("ActStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActStatus)
            Me.columnActRecDate = New Global.System.Data.DataColumn("ActRecDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActRecDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPDID}, true))
            Me.columnPDID.AutoIncrement = true
            Me.columnPDID.AllowDBNull = false
            Me.columnPDID.ReadOnly = true
            Me.columnPDID.Unique = true
            Me.columnPDDate.AllowDBNull = false
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 15
            Me.columnPDQty.AllowDBNull = false
            Me.columnNarration.MaxLength = 10
            Me.columnUOM.AllowDBNull = false
            Me.columnUOM.MaxLength = 50
            Me.columnLocalCustID.AllowDBNull = false
            Me.columnDocID.MaxLength = 50
            Me.columnPurchaseDescription.MaxLength = 250
            Me.columnVendorName.MaxLength = 500
            Me.columnDemandStatus.MaxLength = 50
            Me.columnOrderGivenDesc.MaxLength = 250
            Me.columnDemandType.MaxLength = 50
            Me.columnDemandPeriority1.Caption = "DemandPeriority"
            Me.columnDemandPeriority1.MaxLength = 50
            Me.columnIssueNarration.MaxLength = 1450
            Me.columnBillNo.MaxLength = 50
            Me.columnRepStatus.MaxLength = 50
            Me.columnIssueDesc.MaxLength = 1050
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Pur_Demand_NewRow() As tbl_Pur_Demand_NewRow
            Return CType(Me.NewRow,tbl_Pur_Demand_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Pur_Demand_NewRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Pur_Demand_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Pur_Demand_NewRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_Demand_NewRowChanged(Me, New tbl_Pur_Demand_NewRowChangeEvent(CType(e.Row,tbl_Pur_Demand_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Pur_Demand_NewRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_Demand_NewRowChanging(Me, New tbl_Pur_Demand_NewRowChangeEvent(CType(e.Row,tbl_Pur_Demand_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Pur_Demand_NewRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_Demand_NewRowDeleted(Me, New tbl_Pur_Demand_NewRowChangeEvent(CType(e.Row,tbl_Pur_Demand_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Pur_Demand_NewRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_Demand_NewRowDeleting(Me, New tbl_Pur_Demand_NewRowChangeEvent(CType(e.Row,tbl_Pur_Demand_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Pur_Demand_NewRow(ByVal row As tbl_Pur_Demand_NewRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Pur_Demand_NewDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Pur_PartialReceiving_NewDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Pur_PartialReceiving_NewRow)
        
        Private columnPDID As Global.System.Data.DataColumn
        
        Private columnPRID As Global.System.Data.DataColumn
        
        Private columnPartialQty As Global.System.Data.DataColumn
        
        Private columnPatialRecDate As Global.System.Data.DataColumn
        
        Private columnPartialUnitPrice As Global.System.Data.DataColumn
        
        Private columnPartialAmt As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnPartialBillingVerification As Global.System.Data.DataColumn
        
        Private columnVerificationDate As Global.System.Data.DataColumn
        
        Private columnPartialPOStatus As Global.System.Data.DataColumn
        
        Private columnPartialPODate As Global.System.Data.DataColumn
        
        Private columnPartialAmtEntryDate As Global.System.Data.DataColumn
        
        Private columnCashCredit As Global.System.Data.DataColumn
        
        Private columnVendorName As Global.System.Data.DataColumn
        
        Private columnOtherCharges As Global.System.Data.DataColumn
        
        Private columnBillNo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Pur_PartialReceiving_New"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PRIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PatialRecDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatialRecDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialUnitPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialUnitPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialBillingVerificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialBillingVerification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VerificationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerificationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialPOStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialPOStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialPODateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialPODate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialAmtEntryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialAmtEntryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CashCreditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashCredit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VendorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OtherChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BillNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Pur_PartialReceiving_NewRow
            Get
                Return CType(Me.Rows(index),tbl_Pur_PartialReceiving_NewRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_PartialReceiving_NewRowChanging As tbl_Pur_PartialReceiving_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_PartialReceiving_NewRowChanged As tbl_Pur_PartialReceiving_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_PartialReceiving_NewRowDeleting As tbl_Pur_PartialReceiving_NewRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Pur_PartialReceiving_NewRowDeleted As tbl_Pur_PartialReceiving_NewRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Pur_PartialReceiving_NewRow(ByVal row As tbl_Pur_PartialReceiving_NewRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Pur_PartialReceiving_NewRow(ByVal parenttbl_Pur_Demand_NewRowBytbl_Pur_Demand_tbl_Pur_PartialReceiving As tbl_Pur_Demand_NewRow, ByVal PartialQty As Decimal, ByVal PatialRecDate As Date, ByVal PartialUnitPrice As Decimal, ByVal PartialAmt As Decimal, ByVal Remarks As String, ByVal PartialBillingVerification As Boolean, ByVal VerificationDate As Date, ByVal PartialPOStatus As Boolean, ByVal PartialPODate As Date, ByVal PartialAmtEntryDate As Date, ByVal CashCredit As String, ByVal VendorName As String, ByVal OtherCharges As Decimal, ByVal BillNo As String) As tbl_Pur_PartialReceiving_NewRow
            Dim rowtbl_Pur_PartialReceiving_NewRow As tbl_Pur_PartialReceiving_NewRow = CType(Me.NewRow,tbl_Pur_PartialReceiving_NewRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, PartialQty, PatialRecDate, PartialUnitPrice, PartialAmt, Remarks, PartialBillingVerification, VerificationDate, PartialPOStatus, PartialPODate, PartialAmtEntryDate, CashCredit, VendorName, OtherCharges, BillNo}
            If (Not (parenttbl_Pur_Demand_NewRowBytbl_Pur_Demand_tbl_Pur_PartialReceiving) Is Nothing) Then
                columnValuesArray(0) = parenttbl_Pur_Demand_NewRowBytbl_Pur_Demand_tbl_Pur_PartialReceiving(0)
            End If
            rowtbl_Pur_PartialReceiving_NewRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Pur_PartialReceiving_NewRow)
            Return rowtbl_Pur_PartialReceiving_NewRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByPRID(ByVal PRID As Integer) As tbl_Pur_PartialReceiving_NewRow
            Return CType(Me.Rows.Find(New Object() {PRID}),tbl_Pur_PartialReceiving_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Pur_PartialReceiving_NewDataTable = CType(MyBase.Clone,tbl_Pur_PartialReceiving_NewDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Pur_PartialReceiving_NewDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPDID = MyBase.Columns("PDID")
            Me.columnPRID = MyBase.Columns("PRID")
            Me.columnPartialQty = MyBase.Columns("PartialQty")
            Me.columnPatialRecDate = MyBase.Columns("PatialRecDate")
            Me.columnPartialUnitPrice = MyBase.Columns("PartialUnitPrice")
            Me.columnPartialAmt = MyBase.Columns("PartialAmt")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnPartialBillingVerification = MyBase.Columns("PartialBillingVerification")
            Me.columnVerificationDate = MyBase.Columns("VerificationDate")
            Me.columnPartialPOStatus = MyBase.Columns("PartialPOStatus")
            Me.columnPartialPODate = MyBase.Columns("PartialPODate")
            Me.columnPartialAmtEntryDate = MyBase.Columns("PartialAmtEntryDate")
            Me.columnCashCredit = MyBase.Columns("CashCredit")
            Me.columnVendorName = MyBase.Columns("VendorName")
            Me.columnOtherCharges = MyBase.Columns("OtherCharges")
            Me.columnBillNo = MyBase.Columns("BillNo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPDID = New Global.System.Data.DataColumn("PDID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDID)
            Me.columnPRID = New Global.System.Data.DataColumn("PRID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRID)
            Me.columnPartialQty = New Global.System.Data.DataColumn("PartialQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialQty)
            Me.columnPatialRecDate = New Global.System.Data.DataColumn("PatialRecDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatialRecDate)
            Me.columnPartialUnitPrice = New Global.System.Data.DataColumn("PartialUnitPrice", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialUnitPrice)
            Me.columnPartialAmt = New Global.System.Data.DataColumn("PartialAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialAmt)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnPartialBillingVerification = New Global.System.Data.DataColumn("PartialBillingVerification", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialBillingVerification)
            Me.columnVerificationDate = New Global.System.Data.DataColumn("VerificationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerificationDate)
            Me.columnPartialPOStatus = New Global.System.Data.DataColumn("PartialPOStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialPOStatus)
            Me.columnPartialPODate = New Global.System.Data.DataColumn("PartialPODate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialPODate)
            Me.columnPartialAmtEntryDate = New Global.System.Data.DataColumn("PartialAmtEntryDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialAmtEntryDate)
            Me.columnCashCredit = New Global.System.Data.DataColumn("CashCredit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashCredit)
            Me.columnVendorName = New Global.System.Data.DataColumn("VendorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendorName)
            Me.columnOtherCharges = New Global.System.Data.DataColumn("OtherCharges", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherCharges)
            Me.columnBillNo = New Global.System.Data.DataColumn("BillNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillNo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPRID}, true))
            Me.columnPDID.AllowDBNull = false
            Me.columnPRID.AutoIncrement = true
            Me.columnPRID.AllowDBNull = false
            Me.columnPRID.ReadOnly = true
            Me.columnPRID.Unique = true
            Me.columnPartialQty.AllowDBNull = false
            Me.columnPatialRecDate.AllowDBNull = false
            Me.columnRemarks.MaxLength = 100
            Me.columnCashCredit.MaxLength = 50
            Me.columnVendorName.MaxLength = 50
            Me.columnBillNo.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Pur_PartialReceiving_NewRow() As tbl_Pur_PartialReceiving_NewRow
            Return CType(Me.NewRow,tbl_Pur_PartialReceiving_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Pur_PartialReceiving_NewRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Pur_PartialReceiving_NewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Pur_PartialReceiving_NewRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_PartialReceiving_NewRowChanged(Me, New tbl_Pur_PartialReceiving_NewRowChangeEvent(CType(e.Row,tbl_Pur_PartialReceiving_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Pur_PartialReceiving_NewRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_PartialReceiving_NewRowChanging(Me, New tbl_Pur_PartialReceiving_NewRowChangeEvent(CType(e.Row,tbl_Pur_PartialReceiving_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Pur_PartialReceiving_NewRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_PartialReceiving_NewRowDeleted(Me, New tbl_Pur_PartialReceiving_NewRowChangeEvent(CType(e.Row,tbl_Pur_PartialReceiving_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Pur_PartialReceiving_NewRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Pur_PartialReceiving_NewRowDeleting(Me, New tbl_Pur_PartialReceiving_NewRowChangeEvent(CType(e.Row,tbl_Pur_PartialReceiving_NewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Pur_PartialReceiving_NewRow(ByVal row As tbl_Pur_PartialReceiving_NewRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Pur_PartialReceiving_NewDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Inv_DeptDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Inv_DeptRow)
        
        Private columnDeptID As Global.System.Data.DataColumn
        
        Private columnDeptName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Inv_Dept"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Inv_DeptRow
            Get
                Return CType(Me.Rows(index),tbl_Inv_DeptRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Inv_DeptRowChanging As tbl_Inv_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Inv_DeptRowChanged As tbl_Inv_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Inv_DeptRowDeleting As tbl_Inv_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Inv_DeptRowDeleted As tbl_Inv_DeptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Inv_DeptRow(ByVal row As tbl_Inv_DeptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Inv_DeptRow(ByVal DeptName As String) As tbl_Inv_DeptRow
            Dim rowtbl_Inv_DeptRow As tbl_Inv_DeptRow = CType(Me.NewRow,tbl_Inv_DeptRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DeptName}
            rowtbl_Inv_DeptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Inv_DeptRow)
            Return rowtbl_Inv_DeptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByDeptID(ByVal DeptID As Integer) As tbl_Inv_DeptRow
            Return CType(Me.Rows.Find(New Object() {DeptID}),tbl_Inv_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Inv_DeptDataTable = CType(MyBase.Clone,tbl_Inv_DeptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Inv_DeptDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDeptID = MyBase.Columns("DeptID")
            Me.columnDeptName = MyBase.Columns("DeptName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDeptID = New Global.System.Data.DataColumn("DeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptID)
            Me.columnDeptName = New Global.System.Data.DataColumn("DeptName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDeptID}, true))
            Me.columnDeptID.AutoIncrement = true
            Me.columnDeptID.AutoIncrementSeed = -1
            Me.columnDeptID.AutoIncrementStep = -1
            Me.columnDeptID.AllowDBNull = false
            Me.columnDeptID.ReadOnly = true
            Me.columnDeptID.Unique = true
            Me.columnDeptName.AllowDBNull = false
            Me.columnDeptName.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Inv_DeptRow() As tbl_Inv_DeptRow
            Return CType(Me.NewRow,tbl_Inv_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Inv_DeptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Inv_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Inv_DeptRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_DeptRowChanged(Me, New tbl_Inv_DeptRowChangeEvent(CType(e.Row,tbl_Inv_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Inv_DeptRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_DeptRowChanging(Me, New tbl_Inv_DeptRowChangeEvent(CType(e.Row,tbl_Inv_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Inv_DeptRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_DeptRowDeleted(Me, New tbl_Inv_DeptRowChangeEvent(CType(e.Row,tbl_Inv_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Inv_DeptRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_DeptRowDeleting(Me, New tbl_Inv_DeptRowChangeEvent(CType(e.Row,tbl_Inv_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Inv_DeptRow(ByVal row As tbl_Inv_DeptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Inv_DeptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Dept_InfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Dept_InfoRow)
        
        Private columnDeptID As Global.System.Data.DataColumn
        
        Private columnDeptName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Dept_Info"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Dept_InfoRow
            Get
                Return CType(Me.Rows(index),tbl_Dept_InfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Dept_InfoRowChanging As tbl_Dept_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Dept_InfoRowChanged As tbl_Dept_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Dept_InfoRowDeleting As tbl_Dept_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Dept_InfoRowDeleted As tbl_Dept_InfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Dept_InfoRow(ByVal row As tbl_Dept_InfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Dept_InfoRow(ByVal DeptName As String) As tbl_Dept_InfoRow
            Dim rowtbl_Dept_InfoRow As tbl_Dept_InfoRow = CType(Me.NewRow,tbl_Dept_InfoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DeptName}
            rowtbl_Dept_InfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Dept_InfoRow)
            Return rowtbl_Dept_InfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByDeptID(ByVal DeptID As Integer) As tbl_Dept_InfoRow
            Return CType(Me.Rows.Find(New Object() {DeptID}),tbl_Dept_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Dept_InfoDataTable = CType(MyBase.Clone,tbl_Dept_InfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Dept_InfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDeptID = MyBase.Columns("DeptID")
            Me.columnDeptName = MyBase.Columns("DeptName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDeptID = New Global.System.Data.DataColumn("DeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptID)
            Me.columnDeptName = New Global.System.Data.DataColumn("DeptName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDeptID}, true))
            Me.columnDeptID.AutoIncrement = true
            Me.columnDeptID.AutoIncrementSeed = -1
            Me.columnDeptID.AutoIncrementStep = -1
            Me.columnDeptID.AllowDBNull = false
            Me.columnDeptID.ReadOnly = true
            Me.columnDeptID.Unique = true
            Me.columnDeptName.AllowDBNull = false
            Me.columnDeptName.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Dept_InfoRow() As tbl_Dept_InfoRow
            Return CType(Me.NewRow,tbl_Dept_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Dept_InfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Dept_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Dept_InfoRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Dept_InfoRowChanged(Me, New tbl_Dept_InfoRowChangeEvent(CType(e.Row,tbl_Dept_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Dept_InfoRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Dept_InfoRowChanging(Me, New tbl_Dept_InfoRowChangeEvent(CType(e.Row,tbl_Dept_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Dept_InfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Dept_InfoRowDeleted(Me, New tbl_Dept_InfoRowChangeEvent(CType(e.Row,tbl_Dept_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Dept_InfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Dept_InfoRowDeleting(Me, New tbl_Dept_InfoRowChangeEvent(CType(e.Row,tbl_Dept_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Dept_InfoRow(ByVal row As tbl_Dept_InfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Dept_InfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Sec_MiddleDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Sec_MiddleRow)
        
        Private columnMiddleSerial As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Sec_Middle"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MiddleSerialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleSerial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Sec_MiddleRow
            Get
                Return CType(Me.Rows(index),tbl_Sec_MiddleRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Sec_MiddleRowChanging As tbl_Sec_MiddleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Sec_MiddleRowChanged As tbl_Sec_MiddleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Sec_MiddleRowDeleting As tbl_Sec_MiddleRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Sec_MiddleRowDeleted As tbl_Sec_MiddleRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Sec_MiddleRow(ByVal row As tbl_Sec_MiddleRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Sec_MiddleRow() As tbl_Sec_MiddleRow
            Dim rowtbl_Sec_MiddleRow As tbl_Sec_MiddleRow = CType(Me.NewRow,tbl_Sec_MiddleRow)
            Dim columnValuesArray() As Object = New Object() {Nothing}
            rowtbl_Sec_MiddleRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Sec_MiddleRow)
            Return rowtbl_Sec_MiddleRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByMiddleSerial(ByVal MiddleSerial As Integer) As tbl_Sec_MiddleRow
            Return CType(Me.Rows.Find(New Object() {MiddleSerial}),tbl_Sec_MiddleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Sec_MiddleDataTable = CType(MyBase.Clone,tbl_Sec_MiddleDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Sec_MiddleDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMiddleSerial = MyBase.Columns("MiddleSerial")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMiddleSerial = New Global.System.Data.DataColumn("MiddleSerial", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleSerial)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMiddleSerial}, true))
            Me.columnMiddleSerial.AutoIncrement = true
            Me.columnMiddleSerial.AutoIncrementSeed = -1
            Me.columnMiddleSerial.AutoIncrementStep = -1
            Me.columnMiddleSerial.AllowDBNull = false
            Me.columnMiddleSerial.ReadOnly = true
            Me.columnMiddleSerial.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Sec_MiddleRow() As tbl_Sec_MiddleRow
            Return CType(Me.NewRow,tbl_Sec_MiddleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Sec_MiddleRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Sec_MiddleRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Sec_MiddleRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Sec_MiddleRowChanged(Me, New tbl_Sec_MiddleRowChangeEvent(CType(e.Row,tbl_Sec_MiddleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Sec_MiddleRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Sec_MiddleRowChanging(Me, New tbl_Sec_MiddleRowChangeEvent(CType(e.Row,tbl_Sec_MiddleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Sec_MiddleRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Sec_MiddleRowDeleted(Me, New tbl_Sec_MiddleRowChangeEvent(CType(e.Row,tbl_Sec_MiddleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Sec_MiddleRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Sec_MiddleRowDeleting(Me, New tbl_Sec_MiddleRowChangeEvent(CType(e.Row,tbl_Sec_MiddleRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Sec_MiddleRow(ByVal row As tbl_Sec_MiddleRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Sec_MiddleDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Bill_DemandDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Bill_DemandRow)
        
        Private columnPDID As Global.System.Data.DataColumn
        
        Private columnPDDate As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnPDQty As Global.System.Data.DataColumn
        
        Private columnNarration As Global.System.Data.DataColumn
        
        Private columnPOStatus As Global.System.Data.DataColumn
        
        Private columnPODate As Global.System.Data.DataColumn
        
        Private columnInProcessStatus As Global.System.Data.DataColumn
        
        Private columnInProcessDate As Global.System.Data.DataColumn
        
        Private columnCompStatus As Global.System.Data.DataColumn
        
        Private columnCompDate As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnLocalCustID As Global.System.Data.DataColumn
        
        Private columnVerificationStatus As Global.System.Data.DataColumn
        
        Private columnVerificationDate As Global.System.Data.DataColumn
        
        Private columnDocID As Global.System.Data.DataColumn
        
        Private columnAfterPurchaseVStatus As Global.System.Data.DataColumn
        
        Private columnAfterPurchaseVDate As Global.System.Data.DataColumn
        
        Private columnPurchaseStatus As Global.System.Data.DataColumn
        
        Private columnPurchaseDate As Global.System.Data.DataColumn
        
        Private columnPurchaseAmt As Global.System.Data.DataColumn
        
        Private columnGMNo As Global.System.Data.DataColumn
        
        Private columnBookingStatus As Global.System.Data.DataColumn
        
        Private columnBookingDueDate As Global.System.Data.DataColumn
        
        Private columnPurchaseDescription As Global.System.Data.DataColumn
        
        Private columnAmtEntryDate As Global.System.Data.DataColumn
        
        Private columnPartialRecStatus As Global.System.Data.DataColumn
        
        Private columnReceiveQty As Global.System.Data.DataColumn
        
        Private columnAvgUnitAmt As Global.System.Data.DataColumn
        
        Private columnVendorName As Global.System.Data.DataColumn
        
        Private columnDemandStatus As Global.System.Data.DataColumn
        
        Private columnOtherCharges As Global.System.Data.DataColumn
        
        Private columnSleepStatus As Global.System.Data.DataColumn
        
        Private columnSleepDate As Global.System.Data.DataColumn
        
        Private columnPendingStatus As Global.System.Data.DataColumn
        
        Private columnPendingDate As Global.System.Data.DataColumn
        
        Private columnOGStatus As Global.System.Data.DataColumn
        
        Private columnOGDate As Global.System.Data.DataColumn
        
        Private columnOrderGivenDesc As Global.System.Data.DataColumn
        
        Private columnDemandType As Global.System.Data.DataColumn
        
        Private columnDemandPeriority As Global.System.Data.DataColumn
        
        Private columnApprovedBy As Global.System.Data.DataColumn
        
        Private columnDemandPeriority1 As Global.System.Data.DataColumn
        
        Private columnIRNo As Global.System.Data.DataColumn
        
        Private columnLastEditDate As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        Private columnIssuanceStatus As Global.System.Data.DataColumn
        
        Private columnIssueDate As Global.System.Data.DataColumn
        
        Private columnRecIssueDate As Global.System.Data.DataColumn
        
        Private columnIssueNarration As Global.System.Data.DataColumn
        
        Private columnBillNo As Global.System.Data.DataColumn
        
        Private columnReplQty As Global.System.Data.DataColumn
        
        Private columnRepStatus As Global.System.Data.DataColumn
        
        Private columnDeptID As Global.System.Data.DataColumn
        
        Private columnActStatus As Global.System.Data.DataColumn
        
        Private columnActRecDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Bill_Demand"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PDQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NarrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNarration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property POStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PODateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InProcessStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInProcessStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property InProcessDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInProcessDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LocalCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VerificationStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerificationStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VerificationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVerificationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DocIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AfterPurchaseVStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterPurchaseVStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AfterPurchaseVDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAfterPurchaseVDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GMNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BookingDueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingDueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PurchaseDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AmtEntryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmtEntryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PartialRecStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartialRecStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReceiveQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiveQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AvgUnitAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAvgUnitAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VendorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVendorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OtherChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherCharges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SleepStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSleepStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SleepDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSleepDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PendingStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPendingStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PendingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPendingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OGStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOGStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OGDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOGDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OrderGivenDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderGivenDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandPeriorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandPeriority
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ApprovedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DemandPeriority1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandPeriority1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IRNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LastEditDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastEditDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssuanceStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssuanceStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RecIssueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecIssueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IssueNarrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssueNarration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BillNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReplQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RepStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRepStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ActRecDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActRecDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Bill_DemandRow
            Get
                Return CType(Me.Rows(index),tbl_Bill_DemandRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Bill_DemandRowChanging As tbl_Bill_DemandRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Bill_DemandRowChanged As tbl_Bill_DemandRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Bill_DemandRowDeleting As tbl_Bill_DemandRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Bill_DemandRowDeleted As tbl_Bill_DemandRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Bill_DemandRow(ByVal row As tbl_Bill_DemandRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Bill_DemandRow( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Boolean,  _
                    ByVal PODate As Date,  _
                    ByVal InProcessStatus As Boolean,  _
                    ByVal InProcessDate As Date,  _
                    ByVal CompStatus As Boolean,  _
                    ByVal CompDate As Date,  _
                    ByVal UOM As String,  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Boolean,  _
                    ByVal VerificationDate As Date,  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Boolean,  _
                    ByVal AfterPurchaseVDate As Date,  _
                    ByVal PurchaseStatus As Boolean,  _
                    ByVal PurchaseDate As Date,  _
                    ByVal PurchaseAmt As Decimal,  _
                    ByVal GMNo As Integer,  _
                    ByVal BookingStatus As Boolean,  _
                    ByVal BookingDueDate As Date,  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Date,  _
                    ByVal PartialRecStatus As Boolean,  _
                    ByVal ReceiveQty As Decimal,  _
                    ByVal AvgUnitAmt As Decimal,  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Decimal,  _
                    ByVal SleepStatus As Boolean,  _
                    ByVal SleepDate As Date,  _
                    ByVal PendingStatus As Boolean,  _
                    ByVal PendingDate As Date,  _
                    ByVal OGStatus As Boolean,  _
                    ByVal OGDate As Date,  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As Integer,  _
                    ByVal ApprovedBy As Integer,  _
                    ByVal DemandPeriority1 As String,  _
                    ByVal IRNo As Integer,  _
                    ByVal LastEditDate As Date,  _
                    ByVal CreationDate As Date,  _
                    ByVal IssuanceStatus As Boolean,  _
                    ByVal IssueDate As Date,  _
                    ByVal RecIssueDate As Date,  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Decimal,  _
                    ByVal RepStatus As String,  _
                    ByVal DeptID As Integer,  _
                    ByVal ActStatus As Boolean,  _
                    ByVal ActRecDate As Date) As tbl_Bill_DemandRow
            Dim rowtbl_Bill_DemandRow As tbl_Bill_DemandRow = CType(Me.NewRow,tbl_Bill_DemandRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PDDate, Code, PDQty, Narration, POStatus, PODate, InProcessStatus, InProcessDate, CompStatus, CompDate, UOM, LocalCustID, VerificationStatus, VerificationDate, DocID, AfterPurchaseVStatus, AfterPurchaseVDate, PurchaseStatus, PurchaseDate, PurchaseAmt, GMNo, BookingStatus, BookingDueDate, PurchaseDescription, AmtEntryDate, PartialRecStatus, ReceiveQty, AvgUnitAmt, VendorName, DemandStatus, OtherCharges, SleepStatus, SleepDate, PendingStatus, PendingDate, OGStatus, OGDate, OrderGivenDesc, DemandType, DemandPeriority, ApprovedBy, DemandPeriority1, IRNo, LastEditDate, CreationDate, IssuanceStatus, IssueDate, RecIssueDate, IssueNarration, BillNo, ReplQty, RepStatus, DeptID, ActStatus, ActRecDate}
            rowtbl_Bill_DemandRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Bill_DemandRow)
            Return rowtbl_Bill_DemandRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByPDID(ByVal PDID As Integer) As tbl_Bill_DemandRow
            Return CType(Me.Rows.Find(New Object() {PDID}),tbl_Bill_DemandRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Bill_DemandDataTable = CType(MyBase.Clone,tbl_Bill_DemandDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Bill_DemandDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPDID = MyBase.Columns("PDID")
            Me.columnPDDate = MyBase.Columns("PDDate")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnPDQty = MyBase.Columns("PDQty")
            Me.columnNarration = MyBase.Columns("Narration")
            Me.columnPOStatus = MyBase.Columns("POStatus")
            Me.columnPODate = MyBase.Columns("PODate")
            Me.columnInProcessStatus = MyBase.Columns("InProcessStatus")
            Me.columnInProcessDate = MyBase.Columns("InProcessDate")
            Me.columnCompStatus = MyBase.Columns("CompStatus")
            Me.columnCompDate = MyBase.Columns("CompDate")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnLocalCustID = MyBase.Columns("LocalCustID")
            Me.columnVerificationStatus = MyBase.Columns("VerificationStatus")
            Me.columnVerificationDate = MyBase.Columns("VerificationDate")
            Me.columnDocID = MyBase.Columns("DocID")
            Me.columnAfterPurchaseVStatus = MyBase.Columns("AfterPurchaseVStatus")
            Me.columnAfterPurchaseVDate = MyBase.Columns("AfterPurchaseVDate")
            Me.columnPurchaseStatus = MyBase.Columns("PurchaseStatus")
            Me.columnPurchaseDate = MyBase.Columns("PurchaseDate")
            Me.columnPurchaseAmt = MyBase.Columns("PurchaseAmt")
            Me.columnGMNo = MyBase.Columns("GMNo")
            Me.columnBookingStatus = MyBase.Columns("BookingStatus")
            Me.columnBookingDueDate = MyBase.Columns("BookingDueDate")
            Me.columnPurchaseDescription = MyBase.Columns("PurchaseDescription")
            Me.columnAmtEntryDate = MyBase.Columns("AmtEntryDate")
            Me.columnPartialRecStatus = MyBase.Columns("PartialRecStatus")
            Me.columnReceiveQty = MyBase.Columns("ReceiveQty")
            Me.columnAvgUnitAmt = MyBase.Columns("AvgUnitAmt")
            Me.columnVendorName = MyBase.Columns("VendorName")
            Me.columnDemandStatus = MyBase.Columns("DemandStatus")
            Me.columnOtherCharges = MyBase.Columns("OtherCharges")
            Me.columnSleepStatus = MyBase.Columns("SleepStatus")
            Me.columnSleepDate = MyBase.Columns("SleepDate")
            Me.columnPendingStatus = MyBase.Columns("PendingStatus")
            Me.columnPendingDate = MyBase.Columns("PendingDate")
            Me.columnOGStatus = MyBase.Columns("OGStatus")
            Me.columnOGDate = MyBase.Columns("OGDate")
            Me.columnOrderGivenDesc = MyBase.Columns("OrderGivenDesc")
            Me.columnDemandType = MyBase.Columns("DemandType")
            Me.columnDemandPeriority = MyBase.Columns("DemandPeriority")
            Me.columnApprovedBy = MyBase.Columns("ApprovedBy")
            Me.columnDemandPeriority1 = MyBase.Columns("DemandPeriority1")
            Me.columnIRNo = MyBase.Columns("IRNo")
            Me.columnLastEditDate = MyBase.Columns("LastEditDate")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
            Me.columnIssuanceStatus = MyBase.Columns("IssuanceStatus")
            Me.columnIssueDate = MyBase.Columns("IssueDate")
            Me.columnRecIssueDate = MyBase.Columns("RecIssueDate")
            Me.columnIssueNarration = MyBase.Columns("IssueNarration")
            Me.columnBillNo = MyBase.Columns("BillNo")
            Me.columnReplQty = MyBase.Columns("ReplQty")
            Me.columnRepStatus = MyBase.Columns("RepStatus")
            Me.columnDeptID = MyBase.Columns("DeptID")
            Me.columnActStatus = MyBase.Columns("ActStatus")
            Me.columnActRecDate = MyBase.Columns("ActRecDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPDID = New Global.System.Data.DataColumn("PDID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDID)
            Me.columnPDDate = New Global.System.Data.DataColumn("PDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDDate)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnPDQty = New Global.System.Data.DataColumn("PDQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDQty)
            Me.columnNarration = New Global.System.Data.DataColumn("Narration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNarration)
            Me.columnPOStatus = New Global.System.Data.DataColumn("POStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOStatus)
            Me.columnPODate = New Global.System.Data.DataColumn("PODate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODate)
            Me.columnInProcessStatus = New Global.System.Data.DataColumn("InProcessStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInProcessStatus)
            Me.columnInProcessDate = New Global.System.Data.DataColumn("InProcessDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInProcessDate)
            Me.columnCompStatus = New Global.System.Data.DataColumn("CompStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompStatus)
            Me.columnCompDate = New Global.System.Data.DataColumn("CompDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompDate)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnLocalCustID = New Global.System.Data.DataColumn("LocalCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalCustID)
            Me.columnVerificationStatus = New Global.System.Data.DataColumn("VerificationStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerificationStatus)
            Me.columnVerificationDate = New Global.System.Data.DataColumn("VerificationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVerificationDate)
            Me.columnDocID = New Global.System.Data.DataColumn("DocID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocID)
            Me.columnAfterPurchaseVStatus = New Global.System.Data.DataColumn("AfterPurchaseVStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterPurchaseVStatus)
            Me.columnAfterPurchaseVDate = New Global.System.Data.DataColumn("AfterPurchaseVDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAfterPurchaseVDate)
            Me.columnPurchaseStatus = New Global.System.Data.DataColumn("PurchaseStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseStatus)
            Me.columnPurchaseDate = New Global.System.Data.DataColumn("PurchaseDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseDate)
            Me.columnPurchaseAmt = New Global.System.Data.DataColumn("PurchaseAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseAmt)
            Me.columnGMNo = New Global.System.Data.DataColumn("GMNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMNo)
            Me.columnBookingStatus = New Global.System.Data.DataColumn("BookingStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingStatus)
            Me.columnBookingDueDate = New Global.System.Data.DataColumn("BookingDueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingDueDate)
            Me.columnPurchaseDescription = New Global.System.Data.DataColumn("PurchaseDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseDescription)
            Me.columnAmtEntryDate = New Global.System.Data.DataColumn("AmtEntryDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmtEntryDate)
            Me.columnPartialRecStatus = New Global.System.Data.DataColumn("PartialRecStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartialRecStatus)
            Me.columnReceiveQty = New Global.System.Data.DataColumn("ReceiveQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiveQty)
            Me.columnAvgUnitAmt = New Global.System.Data.DataColumn("AvgUnitAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAvgUnitAmt)
            Me.columnVendorName = New Global.System.Data.DataColumn("VendorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVendorName)
            Me.columnDemandStatus = New Global.System.Data.DataColumn("DemandStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandStatus)
            Me.columnOtherCharges = New Global.System.Data.DataColumn("OtherCharges", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherCharges)
            Me.columnSleepStatus = New Global.System.Data.DataColumn("SleepStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSleepStatus)
            Me.columnSleepDate = New Global.System.Data.DataColumn("SleepDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSleepDate)
            Me.columnPendingStatus = New Global.System.Data.DataColumn("PendingStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPendingStatus)
            Me.columnPendingDate = New Global.System.Data.DataColumn("PendingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPendingDate)
            Me.columnOGStatus = New Global.System.Data.DataColumn("OGStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOGStatus)
            Me.columnOGDate = New Global.System.Data.DataColumn("OGDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOGDate)
            Me.columnOrderGivenDesc = New Global.System.Data.DataColumn("OrderGivenDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderGivenDesc)
            Me.columnDemandType = New Global.System.Data.DataColumn("DemandType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandType)
            Me.columnDemandPeriority = New Global.System.Data.DataColumn("DemandPeriority", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandPeriority)
            Me.columnApprovedBy = New Global.System.Data.DataColumn("ApprovedBy", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedBy)
            Me.columnDemandPeriority1 = New Global.System.Data.DataColumn("DemandPeriority1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandPeriority1)
            Me.columnIRNo = New Global.System.Data.DataColumn("IRNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRNo)
            Me.columnLastEditDate = New Global.System.Data.DataColumn("LastEditDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastEditDate)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnIssuanceStatus = New Global.System.Data.DataColumn("IssuanceStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssuanceStatus)
            Me.columnIssueDate = New Global.System.Data.DataColumn("IssueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueDate)
            Me.columnRecIssueDate = New Global.System.Data.DataColumn("RecIssueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecIssueDate)
            Me.columnIssueNarration = New Global.System.Data.DataColumn("IssueNarration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssueNarration)
            Me.columnBillNo = New Global.System.Data.DataColumn("BillNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillNo)
            Me.columnReplQty = New Global.System.Data.DataColumn("ReplQty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplQty)
            Me.columnRepStatus = New Global.System.Data.DataColumn("RepStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRepStatus)
            Me.columnDeptID = New Global.System.Data.DataColumn("DeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptID)
            Me.columnActStatus = New Global.System.Data.DataColumn("ActStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActStatus)
            Me.columnActRecDate = New Global.System.Data.DataColumn("ActRecDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActRecDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPDID}, true))
            Me.columnPDID.AutoIncrement = true
            Me.columnPDID.AllowDBNull = false
            Me.columnPDID.ReadOnly = true
            Me.columnPDID.Unique = true
            Me.columnPDDate.AllowDBNull = false
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 15
            Me.columnPDQty.AllowDBNull = false
            Me.columnNarration.MaxLength = 10
            Me.columnUOM.AllowDBNull = false
            Me.columnUOM.MaxLength = 50
            Me.columnLocalCustID.AllowDBNull = false
            Me.columnDocID.AllowDBNull = false
            Me.columnDocID.MaxLength = 50
            Me.columnPurchaseDescription.MaxLength = 250
            Me.columnVendorName.MaxLength = 500
            Me.columnDemandStatus.AllowDBNull = false
            Me.columnDemandStatus.MaxLength = 50
            Me.columnOrderGivenDesc.MaxLength = 250
            Me.columnDemandType.MaxLength = 50
            Me.columnDemandPeriority1.Caption = "DemandPeriority"
            Me.columnDemandPeriority1.MaxLength = 50
            Me.columnIssueNarration.MaxLength = 1450
            Me.columnBillNo.MaxLength = 50
            Me.columnRepStatus.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Bill_DemandRow() As tbl_Bill_DemandRow
            Return CType(Me.NewRow,tbl_Bill_DemandRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Bill_DemandRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Bill_DemandRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Bill_DemandRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Bill_DemandRowChanged(Me, New tbl_Bill_DemandRowChangeEvent(CType(e.Row,tbl_Bill_DemandRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Bill_DemandRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Bill_DemandRowChanging(Me, New tbl_Bill_DemandRowChangeEvent(CType(e.Row,tbl_Bill_DemandRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Bill_DemandRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Bill_DemandRowDeleted(Me, New tbl_Bill_DemandRowChangeEvent(CType(e.Row,tbl_Bill_DemandRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Bill_DemandRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Bill_DemandRowDeleting(Me, New tbl_Bill_DemandRowChangeEvent(CType(e.Row,tbl_Bill_DemandRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Bill_DemandRow(ByVal row As tbl_Bill_DemandRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewProcurement = New DSNewProcurement()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Bill_DemandDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Pur_Demand_NewRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Pur_Demand_New As tbl_Pur_Demand_NewDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Pur_Demand_New = CType(Me.Table,tbl_Pur_Demand_NewDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.PDIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDDate() As Date
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.PDDateColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.CodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDQty() As Decimal
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.PDQtyColumn),Decimal)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PDQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Narration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.NarrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Narration' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.NarrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property POStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.POStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.POStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PODate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PODateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PODateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InProcessStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.InProcessStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InProcessStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.InProcessStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InProcessDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.InProcessDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InProcessDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.InProcessDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.CompStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.CompStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.CompDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.CompDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UOM() As String
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.UOMColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LocalCustID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pur_Demand_New.LocalCustIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.LocalCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VerificationStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.VerificationStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VerificationStatus' in table 'tbl_Pur_Demand_New' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.VerificationStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VerificationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.VerificationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VerificationDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.VerificationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DocID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DocIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocID' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DocIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AfterPurchaseVStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterPurchaseVStatus' in table 'tbl_Pur_Demand_New' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AfterPurchaseVDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterPurchaseVDate' in table 'tbl_Pur_Demand_New' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PurchaseStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PurchaseStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PurchaseDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PurchaseDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PurchaseAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseAmt' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PurchaseAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GMNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.GMNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMNo' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.GMNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.BookingStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.BookingStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingDueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.BookingDueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingDueDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.BookingDueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PurchaseDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseDescription' in table 'tbl_Pur_Demand_New' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PurchaseDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AmtEntryDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.AmtEntryDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmtEntryDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.AmtEntryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialRecStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PartialRecStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialRecStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PartialRecStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.ReceiveQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQty' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.ReceiveQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AvgUnitAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.AvgUnitAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AvgUnitAmt' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.AvgUnitAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VendorName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.VendorNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VendorName' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.VendorNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DemandStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DemandStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OtherCharges() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.OtherChargesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherCharges' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.OtherChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SleepStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.SleepStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SleepStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.SleepStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SleepDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.SleepDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SleepDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.SleepDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PendingStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PendingStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PendingStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PendingStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PendingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.PendingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PendingDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.PendingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OGStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.OGStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OGStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.OGStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OGDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.OGDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OGDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.OGDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OrderGivenDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.OrderGivenDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderGivenDesc' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.OrderGivenDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DemandTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandType' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DemandTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandPeriority() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DemandPeriorityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandPeriority' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DemandPeriorityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ApprovedBy() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.ApprovedByColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedBy' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.ApprovedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandPeriority1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DemandPeriority1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandPeriority1' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DemandPeriority1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.DeptIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeptID' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.DeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssuanceStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.IssuanceStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssuanceStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.IssuanceStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.IssueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.IssueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecIssueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.RecIssueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecIssueDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.RecIssueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueNarration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.IssueNarrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueNarration' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.IssueNarrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BillNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.BillNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillNo' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.BillNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReplQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.ReplQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplQty' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.ReplQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RepStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.RepStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RepStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.RepStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IRNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.IRNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRNo' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.IRNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.IssueDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueDesc' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.IssueDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.ActStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActStatus' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.ActStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActRecDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_Demand_New.ActRecDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActRecDate' in table 'tbl_Pur_Demand_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_Demand_New.ActRecDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNarrationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.NarrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNarrationNull()
            Me(Me.tabletbl_Pur_Demand_New.NarrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPOStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.POStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPOStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.POStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPODateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PODateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPODateNull()
            Me(Me.tabletbl_Pur_Demand_New.PODateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInProcessStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.InProcessStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInProcessStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.InProcessStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInProcessDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.InProcessDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInProcessDateNull()
            Me(Me.tabletbl_Pur_Demand_New.InProcessDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.CompStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.CompStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.CompDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompDateNull()
            Me(Me.tabletbl_Pur_Demand_New.CompDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVerificationStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.VerificationStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVerificationStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.VerificationStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVerificationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.VerificationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVerificationDateNull()
            Me(Me.tabletbl_Pur_Demand_New.VerificationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDocIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DocIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDocIDNull()
            Me(Me.tabletbl_Pur_Demand_New.DocIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAfterPurchaseVStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.AfterPurchaseVStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAfterPurchaseVStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAfterPurchaseVDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.AfterPurchaseVDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAfterPurchaseVDateNull()
            Me(Me.tabletbl_Pur_Demand_New.AfterPurchaseVDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PurchaseStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.PurchaseStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PurchaseDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseDateNull()
            Me(Me.tabletbl_Pur_Demand_New.PurchaseDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseAmtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PurchaseAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseAmtNull()
            Me(Me.tabletbl_Pur_Demand_New.PurchaseAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGMNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.GMNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGMNoNull()
            Me(Me.tabletbl_Pur_Demand_New.GMNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.BookingStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.BookingStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingDueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.BookingDueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingDueDateNull()
            Me(Me.tabletbl_Pur_Demand_New.BookingDueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseDescriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PurchaseDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseDescriptionNull()
            Me(Me.tabletbl_Pur_Demand_New.PurchaseDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAmtEntryDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.AmtEntryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAmtEntryDateNull()
            Me(Me.tabletbl_Pur_Demand_New.AmtEntryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialRecStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PartialRecStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialRecStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.PartialRecStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReceiveQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.ReceiveQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReceiveQtyNull()
            Me(Me.tabletbl_Pur_Demand_New.ReceiveQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAvgUnitAmtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.AvgUnitAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAvgUnitAmtNull()
            Me(Me.tabletbl_Pur_Demand_New.AvgUnitAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVendorNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.VendorNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVendorNameNull()
            Me(Me.tabletbl_Pur_Demand_New.VendorNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DemandStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.DemandStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOtherChargesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.OtherChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOtherChargesNull()
            Me(Me.tabletbl_Pur_Demand_New.OtherChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSleepStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.SleepStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSleepStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.SleepStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSleepDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.SleepDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSleepDateNull()
            Me(Me.tabletbl_Pur_Demand_New.SleepDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPendingStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PendingStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPendingStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.PendingStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPendingDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.PendingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPendingDateNull()
            Me(Me.tabletbl_Pur_Demand_New.PendingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOGStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.OGStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOGStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.OGStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOGDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.OGDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOGDateNull()
            Me(Me.tabletbl_Pur_Demand_New.OGDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOrderGivenDescNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.OrderGivenDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOrderGivenDescNull()
            Me(Me.tabletbl_Pur_Demand_New.OrderGivenDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandTypeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DemandTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandTypeNull()
            Me(Me.tabletbl_Pur_Demand_New.DemandTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandPeriorityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DemandPeriorityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandPeriorityNull()
            Me(Me.tabletbl_Pur_Demand_New.DemandPeriorityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsApprovedByNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.ApprovedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetApprovedByNull()
            Me(Me.tabletbl_Pur_Demand_New.ApprovedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandPeriority1Null() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DemandPeriority1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandPeriority1Null()
            Me(Me.tabletbl_Pur_Demand_New.DemandPeriority1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDeptIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.DeptIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDeptIDNull()
            Me(Me.tabletbl_Pur_Demand_New.DeptIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssuanceStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.IssuanceStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssuanceStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.IssuanceStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.IssueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssueDateNull()
            Me(Me.tabletbl_Pur_Demand_New.IssueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRecIssueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.RecIssueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRecIssueDateNull()
            Me(Me.tabletbl_Pur_Demand_New.RecIssueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssueNarrationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.IssueNarrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssueNarrationNull()
            Me(Me.tabletbl_Pur_Demand_New.IssueNarrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBillNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.BillNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBillNoNull()
            Me(Me.tabletbl_Pur_Demand_New.BillNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReplQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.ReplQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReplQtyNull()
            Me(Me.tabletbl_Pur_Demand_New.ReplQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRepStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.RepStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRepStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.RepStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIRNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.IRNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIRNoNull()
            Me(Me.tabletbl_Pur_Demand_New.IRNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssueDescNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.IssueDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssueDescNull()
            Me(Me.tabletbl_Pur_Demand_New.IssueDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.ActStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActStatusNull()
            Me(Me.tabletbl_Pur_Demand_New.ActStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActRecDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_Demand_New.ActRecDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActRecDateNull()
            Me(Me.tabletbl_Pur_Demand_New.ActRecDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettbl_Pur_PartialReceiving_NewRows() As tbl_Pur_PartialReceiving_NewRow()
            If (Me.Table.ChildRelations("tbl_Pur_Demand_tbl_Pur_PartialReceiving") Is Nothing) Then
                Return New tbl_Pur_PartialReceiving_NewRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tbl_Pur_Demand_tbl_Pur_PartialReceiving")),tbl_Pur_PartialReceiving_NewRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Pur_PartialReceiving_NewRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Pur_PartialReceiving_New As tbl_Pur_PartialReceiving_NewDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Pur_PartialReceiving_New = CType(Me.Table,tbl_Pur_PartialReceiving_NewDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PDIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PRID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PRIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PRIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialQty() As Decimal
            Get
                Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialQtyColumn),Decimal)
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PatialRecDate() As Date
            Get
                Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PatialRecDateColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PatialRecDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialUnitPrice() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialUnitPriceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialUnitPrice' in table 'tbl_Pur_PartialReceiving_New' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialUnitPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialAmt' in table 'tbl_Pur_PartialReceiving_New' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'tbl_Pur_PartialReceiving_New' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialBillingVerification() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialBillingVerificationColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialBillingVerification' in table 'tbl_Pur_PartialReceiv"& _ 
                            "ing_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialBillingVerificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VerificationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.VerificationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VerificationDate' in table 'tbl_Pur_PartialReceiving_New' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.VerificationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialPOStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPOStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialPOStatus' in table 'tbl_Pur_PartialReceiving_New' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPOStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialPODate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPODateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialPODate' in table 'tbl_Pur_PartialReceiving_New' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPODateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialAmtEntryDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtEntryDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialAmtEntryDate' in table 'tbl_Pur_PartialReceiving_New"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtEntryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CashCredit() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.CashCreditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashCredit' in table 'tbl_Pur_PartialReceiving_New' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.CashCreditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VendorName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.VendorNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VendorName' in table 'tbl_Pur_PartialReceiving_New' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.VendorNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OtherCharges() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.OtherChargesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherCharges' in table 'tbl_Pur_PartialReceiving_New' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.OtherChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BillNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Pur_PartialReceiving_New.BillNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillNo' in table 'tbl_Pur_PartialReceiving_New' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Pur_PartialReceiving_New.BillNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tbl_Pur_DemandRow() As tbl_Pur_Demand_NewRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tbl_Pur_Demand_tbl_Pur_PartialReceiving")),tbl_Pur_Demand_NewRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tbl_Pur_Demand_tbl_Pur_PartialReceiving"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialUnitPriceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialUnitPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialUnitPriceNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialUnitPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialAmtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialAmtNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialBillingVerificationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialBillingVerificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialBillingVerificationNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialBillingVerificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVerificationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.VerificationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVerificationDateNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.VerificationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialPOStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialPOStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialPOStatusNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPOStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialPODateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialPODateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialPODateNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialPODateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialAmtEntryDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtEntryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialAmtEntryDateNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.PartialAmtEntryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCashCreditNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.CashCreditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCashCreditNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.CashCreditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVendorNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.VendorNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVendorNameNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.VendorNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOtherChargesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.OtherChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOtherChargesNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.OtherChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBillNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Pur_PartialReceiving_New.BillNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBillNoNull()
            Me(Me.tabletbl_Pur_PartialReceiving_New.BillNoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Inv_DeptRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Inv_Dept As tbl_Inv_DeptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Inv_Dept = CType(Me.Table,tbl_Inv_DeptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Inv_Dept.DeptIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Inv_Dept.DeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptName() As String
            Get
                Return CType(Me(Me.tabletbl_Inv_Dept.DeptNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Inv_Dept.DeptNameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Dept_InfoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Dept_Info As tbl_Dept_InfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Dept_Info = CType(Me.Table,tbl_Dept_InfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Dept_Info.DeptIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Dept_Info.DeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptName() As String
            Get
                Return CType(Me(Me.tabletbl_Dept_Info.DeptNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Dept_Info.DeptNameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Sec_MiddleRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Sec_Middle As tbl_Sec_MiddleDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Sec_Middle = CType(Me.Table,tbl_Sec_MiddleDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MiddleSerial() As Integer
            Get
                Return CType(Me(Me.tabletbl_Sec_Middle.MiddleSerialColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Sec_Middle.MiddleSerialColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Bill_DemandRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Bill_Demand As tbl_Bill_DemandDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Bill_Demand = CType(Me.Table,tbl_Bill_DemandDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.PDIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDDate() As Date
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.PDDateColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.CodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PDQty() As Decimal
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.PDQtyColumn),Decimal)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PDQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Narration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.NarrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Narration' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.NarrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property POStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.POStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.POStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PODate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PODateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PODateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InProcessStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.InProcessStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InProcessStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.InProcessStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property InProcessDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.InProcessDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InProcessDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.InProcessDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.CompStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.CompStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.CompDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.CompDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UOM() As String
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.UOMColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LocalCustID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.LocalCustIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.LocalCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VerificationStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.VerificationStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VerificationStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.VerificationStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VerificationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.VerificationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VerificationDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.VerificationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DocID() As String
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.DocIDColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DocIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AfterPurchaseVStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.AfterPurchaseVStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterPurchaseVStatus' in table 'tbl_Bill_Demand' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.AfterPurchaseVStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AfterPurchaseVDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.AfterPurchaseVDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AfterPurchaseVDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.AfterPurchaseVDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PurchaseStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PurchaseStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PurchaseDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PurchaseDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PurchaseAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseAmt' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PurchaseAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property GMNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.GMNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMNo' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.GMNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.BookingStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.BookingStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BookingDueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.BookingDueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingDueDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.BookingDueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PurchaseDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PurchaseDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseDescription' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PurchaseDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AmtEntryDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.AmtEntryDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmtEntryDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.AmtEntryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PartialRecStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PartialRecStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartialRecStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PartialRecStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReceiveQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.ReceiveQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiveQty' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.ReceiveQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AvgUnitAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.AvgUnitAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AvgUnitAmt' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.AvgUnitAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property VendorName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.VendorNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VendorName' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.VendorNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandStatus() As String
            Get
                Return CType(Me(Me.tabletbl_Bill_Demand.DemandStatusColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DemandStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OtherCharges() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.OtherChargesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherCharges' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.OtherChargesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SleepStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.SleepStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SleepStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.SleepStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SleepDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.SleepDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SleepDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.SleepDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PendingStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PendingStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PendingStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PendingStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PendingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.PendingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PendingDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.PendingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OGStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.OGStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OGStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.OGStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OGDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.OGDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OGDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.OGDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OrderGivenDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.OrderGivenDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderGivenDesc' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.OrderGivenDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.DemandTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandType' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DemandTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandPeriority() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.DemandPeriorityColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandPeriority' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DemandPeriorityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ApprovedBy() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.ApprovedByColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedBy' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.ApprovedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DemandPeriority1() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.DemandPeriority1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandPeriority1' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DemandPeriority1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IRNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.IRNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRNo' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.IRNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LastEditDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.LastEditDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastEditDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.LastEditDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreationDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssuanceStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.IssuanceStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssuanceStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.IssuanceStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.IssueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.IssueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RecIssueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.RecIssueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecIssueDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.RecIssueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IssueNarration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.IssueNarrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IssueNarration' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.IssueNarrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BillNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.BillNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillNo' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.BillNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReplQty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.ReplQtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplQty' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.ReplQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RepStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.RepStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RepStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.RepStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.DeptIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeptID' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.DeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.ActStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActStatus' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.ActStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ActRecDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Bill_Demand.ActRecDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActRecDate' in table 'tbl_Bill_Demand' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Bill_Demand.ActRecDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNarrationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.NarrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNarrationNull()
            Me(Me.tabletbl_Bill_Demand.NarrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPOStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.POStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPOStatusNull()
            Me(Me.tabletbl_Bill_Demand.POStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPODateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PODateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPODateNull()
            Me(Me.tabletbl_Bill_Demand.PODateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInProcessStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.InProcessStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInProcessStatusNull()
            Me(Me.tabletbl_Bill_Demand.InProcessStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsInProcessDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.InProcessDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetInProcessDateNull()
            Me(Me.tabletbl_Bill_Demand.InProcessDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.CompStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompStatusNull()
            Me(Me.tabletbl_Bill_Demand.CompStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.CompDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompDateNull()
            Me(Me.tabletbl_Bill_Demand.CompDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVerificationStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.VerificationStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVerificationStatusNull()
            Me(Me.tabletbl_Bill_Demand.VerificationStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVerificationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.VerificationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVerificationDateNull()
            Me(Me.tabletbl_Bill_Demand.VerificationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAfterPurchaseVStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.AfterPurchaseVStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAfterPurchaseVStatusNull()
            Me(Me.tabletbl_Bill_Demand.AfterPurchaseVStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAfterPurchaseVDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.AfterPurchaseVDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAfterPurchaseVDateNull()
            Me(Me.tabletbl_Bill_Demand.AfterPurchaseVDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PurchaseStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseStatusNull()
            Me(Me.tabletbl_Bill_Demand.PurchaseStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PurchaseDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseDateNull()
            Me(Me.tabletbl_Bill_Demand.PurchaseDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseAmtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PurchaseAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseAmtNull()
            Me(Me.tabletbl_Bill_Demand.PurchaseAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGMNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.GMNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGMNoNull()
            Me(Me.tabletbl_Bill_Demand.GMNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.BookingStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingStatusNull()
            Me(Me.tabletbl_Bill_Demand.BookingStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBookingDueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.BookingDueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBookingDueDateNull()
            Me(Me.tabletbl_Bill_Demand.BookingDueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPurchaseDescriptionNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PurchaseDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPurchaseDescriptionNull()
            Me(Me.tabletbl_Bill_Demand.PurchaseDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAmtEntryDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.AmtEntryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAmtEntryDateNull()
            Me(Me.tabletbl_Bill_Demand.AmtEntryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPartialRecStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PartialRecStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPartialRecStatusNull()
            Me(Me.tabletbl_Bill_Demand.PartialRecStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReceiveQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.ReceiveQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReceiveQtyNull()
            Me(Me.tabletbl_Bill_Demand.ReceiveQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAvgUnitAmtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.AvgUnitAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAvgUnitAmtNull()
            Me(Me.tabletbl_Bill_Demand.AvgUnitAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVendorNameNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.VendorNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVendorNameNull()
            Me(Me.tabletbl_Bill_Demand.VendorNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOtherChargesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.OtherChargesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOtherChargesNull()
            Me(Me.tabletbl_Bill_Demand.OtherChargesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSleepStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.SleepStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSleepStatusNull()
            Me(Me.tabletbl_Bill_Demand.SleepStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSleepDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.SleepDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSleepDateNull()
            Me(Me.tabletbl_Bill_Demand.SleepDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPendingStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PendingStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPendingStatusNull()
            Me(Me.tabletbl_Bill_Demand.PendingStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPendingDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.PendingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPendingDateNull()
            Me(Me.tabletbl_Bill_Demand.PendingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOGStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.OGStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOGStatusNull()
            Me(Me.tabletbl_Bill_Demand.OGStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOGDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.OGDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOGDateNull()
            Me(Me.tabletbl_Bill_Demand.OGDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsOrderGivenDescNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.OrderGivenDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetOrderGivenDescNull()
            Me(Me.tabletbl_Bill_Demand.OrderGivenDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandTypeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.DemandTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandTypeNull()
            Me(Me.tabletbl_Bill_Demand.DemandTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandPeriorityNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.DemandPeriorityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandPeriorityNull()
            Me(Me.tabletbl_Bill_Demand.DemandPeriorityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsApprovedByNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.ApprovedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetApprovedByNull()
            Me(Me.tabletbl_Bill_Demand.ApprovedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDemandPeriority1Null() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.DemandPeriority1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDemandPeriority1Null()
            Me(Me.tabletbl_Bill_Demand.DemandPeriority1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIRNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.IRNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIRNoNull()
            Me(Me.tabletbl_Bill_Demand.IRNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLastEditDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.LastEditDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLastEditDateNull()
            Me(Me.tabletbl_Bill_Demand.LastEditDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabletbl_Bill_Demand.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssuanceStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.IssuanceStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssuanceStatusNull()
            Me(Me.tabletbl_Bill_Demand.IssuanceStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.IssueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssueDateNull()
            Me(Me.tabletbl_Bill_Demand.IssueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRecIssueDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.RecIssueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRecIssueDateNull()
            Me(Me.tabletbl_Bill_Demand.RecIssueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIssueNarrationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.IssueNarrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIssueNarrationNull()
            Me(Me.tabletbl_Bill_Demand.IssueNarrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBillNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.BillNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBillNoNull()
            Me(Me.tabletbl_Bill_Demand.BillNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReplQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.ReplQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReplQtyNull()
            Me(Me.tabletbl_Bill_Demand.ReplQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRepStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.RepStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRepStatusNull()
            Me(Me.tabletbl_Bill_Demand.RepStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDeptIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.DeptIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDeptIDNull()
            Me(Me.tabletbl_Bill_Demand.DeptIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.ActStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActStatusNull()
            Me(Me.tabletbl_Bill_Demand.ActStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsActRecDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Bill_Demand.ActRecDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetActRecDateNull()
            Me(Me.tabletbl_Bill_Demand.ActRecDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Pur_Demand_NewRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Pur_Demand_NewRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Pur_Demand_NewRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Pur_Demand_NewRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Pur_PartialReceiving_NewRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Pur_PartialReceiving_NewRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Pur_PartialReceiving_NewRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Pur_PartialReceiving_NewRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Inv_DeptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Inv_DeptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Inv_DeptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Inv_DeptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Dept_InfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Dept_InfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Dept_InfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Dept_InfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Sec_MiddleRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Sec_MiddleRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Sec_MiddleRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Sec_MiddleRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Bill_DemandRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Bill_DemandRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Bill_DemandRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Bill_DemandRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSNewProcurementTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Pur_Demand_NewTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Pur_Demand_New"
            tableMapping.ColumnMappings.Add("PDID", "PDID")
            tableMapping.ColumnMappings.Add("PDDate", "PDDate")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("PDQty", "PDQty")
            tableMapping.ColumnMappings.Add("Narration", "Narration")
            tableMapping.ColumnMappings.Add("POStatus", "POStatus")
            tableMapping.ColumnMappings.Add("PODate", "PODate")
            tableMapping.ColumnMappings.Add("InProcessStatus", "InProcessStatus")
            tableMapping.ColumnMappings.Add("InProcessDate", "InProcessDate")
            tableMapping.ColumnMappings.Add("CompStatus", "CompStatus")
            tableMapping.ColumnMappings.Add("CompDate", "CompDate")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("LocalCustID", "LocalCustID")
            tableMapping.ColumnMappings.Add("VerificationStatus", "VerificationStatus")
            tableMapping.ColumnMappings.Add("VerificationDate", "VerificationDate")
            tableMapping.ColumnMappings.Add("DocID", "DocID")
            tableMapping.ColumnMappings.Add("AfterPurchaseVStatus", "AfterPurchaseVStatus")
            tableMapping.ColumnMappings.Add("AfterPurchaseVDate", "AfterPurchaseVDate")
            tableMapping.ColumnMappings.Add("PurchaseStatus", "PurchaseStatus")
            tableMapping.ColumnMappings.Add("PurchaseDate", "PurchaseDate")
            tableMapping.ColumnMappings.Add("PurchaseAmt", "PurchaseAmt")
            tableMapping.ColumnMappings.Add("GMNo", "GMNo")
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus")
            tableMapping.ColumnMappings.Add("BookingDueDate", "BookingDueDate")
            tableMapping.ColumnMappings.Add("PurchaseDescription", "PurchaseDescription")
            tableMapping.ColumnMappings.Add("AmtEntryDate", "AmtEntryDate")
            tableMapping.ColumnMappings.Add("PartialRecStatus", "PartialRecStatus")
            tableMapping.ColumnMappings.Add("ReceiveQty", "ReceiveQty")
            tableMapping.ColumnMappings.Add("AvgUnitAmt", "AvgUnitAmt")
            tableMapping.ColumnMappings.Add("VendorName", "VendorName")
            tableMapping.ColumnMappings.Add("DemandStatus", "DemandStatus")
            tableMapping.ColumnMappings.Add("OtherCharges", "OtherCharges")
            tableMapping.ColumnMappings.Add("SleepStatus", "SleepStatus")
            tableMapping.ColumnMappings.Add("SleepDate", "SleepDate")
            tableMapping.ColumnMappings.Add("PendingStatus", "PendingStatus")
            tableMapping.ColumnMappings.Add("PendingDate", "PendingDate")
            tableMapping.ColumnMappings.Add("OGStatus", "OGStatus")
            tableMapping.ColumnMappings.Add("OGDate", "OGDate")
            tableMapping.ColumnMappings.Add("OrderGivenDesc", "OrderGivenDesc")
            tableMapping.ColumnMappings.Add("DemandType", "DemandType")
            tableMapping.ColumnMappings.Add("ApprovedBy", "ApprovedBy")
            tableMapping.ColumnMappings.Add("DemandPeriority", "DemandPeriority1")
            tableMapping.ColumnMappings.Add("DeptID", "DeptID")
            tableMapping.ColumnMappings.Add("IssuanceStatus", "IssuanceStatus")
            tableMapping.ColumnMappings.Add("IssueDate", "IssueDate")
            tableMapping.ColumnMappings.Add("RecIssueDate", "RecIssueDate")
            tableMapping.ColumnMappings.Add("IssueNarration", "IssueNarration")
            tableMapping.ColumnMappings.Add("BillNo", "BillNo")
            tableMapping.ColumnMappings.Add("ReplQty", "ReplQty")
            tableMapping.ColumnMappings.Add("RepStatus", "RepStatus")
            tableMapping.ColumnMappings.Add("IRNo", "IRNo")
            tableMapping.ColumnMappings.Add("IssueDesc", "IssueDesc")
            tableMapping.ColumnMappings.Add("ActStatus", "ActStatus")
            tableMapping.ColumnMappings.Add("ActRecDate", "ActRecDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Pur_Demand] WHERE (([PDID] = ?) AND ([PDDate] = ?) AND ([Code] ="& _ 
                " ?) AND ([PDQty] = ?) AND ([UOM] = ?) AND ((? = 1 AND [Narration] IS NULL) OR (["& _ 
                "Narration] = ?)) AND ((? = 1 AND [POStatus] IS NULL) OR ([POStatus] = ?)) AND (("& _ 
                "? = 1 AND [PODate] IS NULL) OR ([PODate] = ?)) AND ((? = 1 AND [InProcessStatus]"& _ 
                " IS NULL) OR ([InProcessStatus] = ?)) AND ((? = 1 AND [InProcessDate] IS NULL) O"& _ 
                "R ([InProcessDate] = ?)) AND ((? = 1 AND [CompStatus] IS NULL) OR ([CompStatus] "& _ 
                "= ?)) AND ((? = 1 AND [CompDate] IS NULL) OR ([CompDate] = ?)) AND ([LocalCustID"& _ 
                "] = ?) AND ((? = 1 AND [VerificationStatus] IS NULL) OR ([VerificationStatus] = "& _ 
                "?)) AND ((? = 1 AND [VerificationDate] IS NULL) OR ([VerificationDate] = ?)) AND"& _ 
                " ((? = 1 AND [DocID] IS NULL) OR ([DocID] = ?)) AND ((? = 1 AND [AfterPurchaseVS"& _ 
                "tatus] IS NULL) OR ([AfterPurchaseVStatus] = ?)) AND ((? = 1 AND [AfterPurchaseV"& _ 
                "Date] IS NULL) OR ([AfterPurchaseVDate] = ?)) AND ((? = 1 AND [PurchaseStatus] I"& _ 
                "S NULL) OR ([PurchaseStatus] = ?)) AND ((? = 1 AND [PurchaseDate] IS NULL) OR (["& _ 
                "PurchaseDate] = ?)) AND ((? = 1 AND [PurchaseAmt] IS NULL) OR ([PurchaseAmt] = ?"& _ 
                ")) AND ((? = 1 AND [GMNo] IS NULL) OR ([GMNo] = ?)) AND ((? = 1 AND [BookingStat"& _ 
                "us] IS NULL) OR ([BookingStatus] = ?)) AND ((? = 1 AND [BookingDueDate] IS NULL)"& _ 
                " OR ([BookingDueDate] = ?)) AND ((? = 1 AND [PurchaseDescription] IS NULL) OR (["& _ 
                "PurchaseDescription] = ?)) AND ((? = 1 AND [AmtEntryDate] IS NULL) OR ([AmtEntry"& _ 
                "Date] = ?)) AND ((? = 1 AND [PartialRecStatus] IS NULL) OR ([PartialRecStatus] ="& _ 
                " ?)) AND ((? = 1 AND [ReceiveQty] IS NULL) OR ([ReceiveQty] = ?)) AND ((? = 1 AN"& _ 
                "D [AvgUnitAmt] IS NULL) OR ([AvgUnitAmt] = ?)) AND ((? = 1 AND [VendorName] IS N"& _ 
                "ULL) OR ([VendorName] = ?)) AND ((? = 1 AND [DemandStatus] IS NULL) OR ([DemandS"& _ 
                "tatus] = ?)) AND ((? = 1 AND [OtherCharges] IS NULL) OR ([OtherCharges] = ?)) AN"& _ 
                "D ((? = 1 AND [SleepStatus] IS NULL) OR ([SleepStatus] = ?)) AND ((? = 1 AND [Sl"& _ 
                "eepDate] IS NULL) OR ([SleepDate] = ?)) AND ((? = 1 AND [PendingStatus] IS NULL)"& _ 
                " OR ([PendingStatus] = ?)) AND ((? = 1 AND [PendingDate] IS NULL) OR ([PendingDa"& _ 
                "te] = ?)) AND ((? = 1 AND [OGStatus] IS NULL) OR ([OGStatus] = ?)) AND ((? = 1 A"& _ 
                "ND [OGDate] IS NULL) OR ([OGDate] = ?)) AND ((? = 1 AND [OrderGivenDesc] IS NULL"& _ 
                ") OR ([OrderGivenDesc] = ?)) AND ((? = 1 AND [DemandType] IS NULL) OR ([DemandTy"& _ 
                "pe] = ?)) AND ((? = 1 AND [DemandPeriority] IS NULL) OR ([DemandPeriority] = ?))"& _ 
                " AND ((? = 1 AND [ApprovedBy] IS NULL) OR ([ApprovedBy] = ?)) AND ((? = 1 AND [D"& _ 
                "eptID] IS NULL) OR ([DeptID] = ?)) AND ((? = 1 AND [IssuanceStatus] IS NULL) OR "& _ 
                "([IssuanceStatus] = ?)) AND ((? = 1 AND [IssueDate] IS NULL) OR ([IssueDate] = ?"& _ 
                ")) AND ((? = 1 AND [RecIssueDate] IS NULL) OR ([RecIssueDate] = ?)) AND ((? = 1 "& _ 
                "AND [IssueNarration] IS NULL) OR ([IssueNarration] = ?)) AND ((? = 1 AND [BillNo"& _ 
                "] IS NULL) OR ([BillNo] = ?)) AND ((? = 1 AND [ReplQty] IS NULL) OR ([ReplQty] ="& _ 
                " ?)) AND ((? = 1 AND [RepStatus] IS NULL) OR ([RepStatus] = ?)) AND ((? = 1 AND "& _ 
                "[IRNo] IS NULL) OR ([IRNo] = ?)) AND ((? = 1 AND [IssueDesc] IS NULL) OR ([Issue"& _ 
                "Desc] = ?)) AND ((? = 1 AND [ActStatus] IS NULL) OR ([ActStatus] = ?)) AND ((? ="& _ 
                " 1 AND [ActRecDate] IS NULL) OR ([ActRecDate] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Narration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DocID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingDueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReceiveQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandPeriority", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueNarration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReplQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActRecDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Pur_Demand] ([PDDate], [Code], [PDQty], [UOM], [Narration], [POS"& _ 
                "tatus], [PODate], [InProcessStatus], [InProcessDate], [CompStatus], [CompDate], "& _ 
                "[LocalCustID], [VerificationStatus], [VerificationDate], [DocID], [AfterPurchase"& _ 
                "VStatus], [AfterPurchaseVDate], [PurchaseStatus], [PurchaseDate], [PurchaseAmt],"& _ 
                " [GMNo], [BookingStatus], [BookingDueDate], [PurchaseDescription], [AmtEntryDate"& _ 
                "], [PartialRecStatus], [ReceiveQty], [AvgUnitAmt], [VendorName], [DemandStatus],"& _ 
                " [OtherCharges], [SleepStatus], [SleepDate], [PendingStatus], [PendingDate], [OG"& _ 
                "Status], [OGDate], [OrderGivenDesc], [DemandType], [DemandPeriority], [ApprovedB"& _ 
                "y], [DeptID], [IssuanceStatus], [IssueDate], [RecIssueDate], [IssueNarration], ["& _ 
                "BillNo], [ReplQty], [RepStatus], [IRNo], [IssueDesc], [ActStatus], [ActRecDate])"& _ 
                " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Pur_Demand] SET [PDDate] = ?, [Code] = ?, [PDQty] = ?, [UOM] = ?, [Na"& _ 
                "rration] = ?, [POStatus] = ?, [PODate] = ?, [InProcessStatus] = ?, [InProcessDat"& _ 
                "e] = ?, [CompStatus] = ?, [CompDate] = ?, [LocalCustID] = ?, [VerificationStatus"& _ 
                "] = ?, [VerificationDate] = ?, [DocID] = ?, [AfterPurchaseVStatus] = ?, [AfterPu"& _ 
                "rchaseVDate] = ?, [PurchaseStatus] = ?, [PurchaseDate] = ?, [PurchaseAmt] = ?, ["& _ 
                "GMNo] = ?, [BookingStatus] = ?, [BookingDueDate] = ?, [PurchaseDescription] = ?,"& _ 
                " [AmtEntryDate] = ?, [PartialRecStatus] = ?, [ReceiveQty] = ?, [AvgUnitAmt] = ?,"& _ 
                " [VendorName] = ?, [DemandStatus] = ?, [OtherCharges] = ?, [SleepStatus] = ?, [S"& _ 
                "leepDate] = ?, [PendingStatus] = ?, [PendingDate] = ?, [OGStatus] = ?, [OGDate] "& _ 
                "= ?, [OrderGivenDesc] = ?, [DemandType] = ?, [DemandPeriority] = ?, [ApprovedBy]"& _ 
                " = ?, [DeptID] = ?, [IssuanceStatus] = ?, [IssueDate] = ?, [RecIssueDate] = ?, ["& _ 
                "IssueNarration] = ?, [BillNo] = ?, [ReplQty] = ?, [RepStatus] = ?, [IRNo] = ?, ["& _ 
                "IssueDesc] = ?, [ActStatus] = ?, [ActRecDate] = ? WHERE (([PDID] = ?) AND ([PDDa"& _ 
                "te] = ?) AND ([Code] = ?) AND ([PDQty] = ?) AND ([UOM] = ?) AND ((? = 1 AND [Nar"& _ 
                "ration] IS NULL) OR ([Narration] = ?)) AND ((? = 1 AND [POStatus] IS NULL) OR (["& _ 
                "POStatus] = ?)) AND ((? = 1 AND [PODate] IS NULL) OR ([PODate] = ?)) AND ((? = 1"& _ 
                " AND [InProcessStatus] IS NULL) OR ([InProcessStatus] = ?)) AND ((? = 1 AND [InP"& _ 
                "rocessDate] IS NULL) OR ([InProcessDate] = ?)) AND ((? = 1 AND [CompStatus] IS N"& _ 
                "ULL) OR ([CompStatus] = ?)) AND ((? = 1 AND [CompDate] IS NULL) OR ([CompDate] ="& _ 
                " ?)) AND ([LocalCustID] = ?) AND ((? = 1 AND [VerificationStatus] IS NULL) OR (["& _ 
                "VerificationStatus] = ?)) AND ((? = 1 AND [VerificationDate] IS NULL) OR ([Verif"& _ 
                "icationDate] = ?)) AND ((? = 1 AND [DocID] IS NULL) OR ([DocID] = ?)) AND ((? = "& _ 
                "1 AND [AfterPurchaseVStatus] IS NULL) OR ([AfterPurchaseVStatus] = ?)) AND ((? ="& _ 
                " 1 AND [AfterPurchaseVDate] IS NULL) OR ([AfterPurchaseVDate] = ?)) AND ((? = 1 "& _ 
                "AND [PurchaseStatus] IS NULL) OR ([PurchaseStatus] = ?)) AND ((? = 1 AND [Purcha"& _ 
                "seDate] IS NULL) OR ([PurchaseDate] = ?)) AND ((? = 1 AND [PurchaseAmt] IS NULL)"& _ 
                " OR ([PurchaseAmt] = ?)) AND ((? = 1 AND [GMNo] IS NULL) OR ([GMNo] = ?)) AND (("& _ 
                "? = 1 AND [BookingStatus] IS NULL) OR ([BookingStatus] = ?)) AND ((? = 1 AND [Bo"& _ 
                "okingDueDate] IS NULL) OR ([BookingDueDate] = ?)) AND ((? = 1 AND [PurchaseDescr"& _ 
                "iption] IS NULL) OR ([PurchaseDescription] = ?)) AND ((? = 1 AND [AmtEntryDate] "& _ 
                "IS NULL) OR ([AmtEntryDate] = ?)) AND ((? = 1 AND [PartialRecStatus] IS NULL) OR"& _ 
                " ([PartialRecStatus] = ?)) AND ((? = 1 AND [ReceiveQty] IS NULL) OR ([ReceiveQty"& _ 
                "] = ?)) AND ((? = 1 AND [AvgUnitAmt] IS NULL) OR ([AvgUnitAmt] = ?)) AND ((? = 1"& _ 
                " AND [VendorName] IS NULL) OR ([VendorName] = ?)) AND ((? = 1 AND [DemandStatus]"& _ 
                " IS NULL) OR ([DemandStatus] = ?)) AND ((? = 1 AND [OtherCharges] IS NULL) OR (["& _ 
                "OtherCharges] = ?)) AND ((? = 1 AND [SleepStatus] IS NULL) OR ([SleepStatus] = ?"& _ 
                ")) AND ((? = 1 AND [SleepDate] IS NULL) OR ([SleepDate] = ?)) AND ((? = 1 AND [P"& _ 
                "endingStatus] IS NULL) OR ([PendingStatus] = ?)) AND ((? = 1 AND [PendingDate] I"& _ 
                "S NULL) OR ([PendingDate] = ?)) AND ((? = 1 AND [OGStatus] IS NULL) OR ([OGStatu"& _ 
                "s] = ?)) AND ((? = 1 AND [OGDate] IS NULL) OR ([OGDate] = ?)) AND ((? = 1 AND [O"& _ 
                "rderGivenDesc] IS NULL) OR ([OrderGivenDesc] = ?)) AND ((? = 1 AND [DemandType] "& _ 
                "IS NULL) OR ([DemandType] = ?)) AND ((? = 1 AND [DemandPeriority] IS NULL) OR (["& _ 
                "DemandPeriority] = ?)) AND ((? = 1 AND [ApprovedBy] IS NULL) OR ([ApprovedBy] = "& _ 
                "?)) AND ((? = 1 AND [DeptID] IS NULL) OR ([DeptID] = ?)) AND ((? = 1 AND [Issuan"& _ 
                "ceStatus] IS NULL) OR ([IssuanceStatus] = ?)) AND ((? = 1 AND [IssueDate] IS NUL"& _ 
                "L) OR ([IssueDate] = ?)) AND ((? = 1 AND [RecIssueDate] IS NULL) OR ([RecIssueDa"& _ 
                "te] = ?)) AND ((? = 1 AND [IssueNarration] IS NULL) OR ([IssueNarration] = ?)) A"& _ 
                "ND ((? = 1 AND [BillNo] IS NULL) OR ([BillNo] = ?)) AND ((? = 1 AND [ReplQty] IS"& _ 
                " NULL) OR ([ReplQty] = ?)) AND ((? = 1 AND [RepStatus] IS NULL) OR ([RepStatus] "& _ 
                "= ?)) AND ((? = 1 AND [IRNo] IS NULL) OR ([IRNo] = ?)) AND ((? = 1 AND [IssueDes"& _ 
                "c] IS NULL) OR ([IssueDesc] = ?)) AND ((? = 1 AND [ActStatus] IS NULL) OR ([ActS"& _ 
                "tatus] = ?)) AND ((? = 1 AND [ActRecDate] IS NULL) OR ([ActRecDate] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Narration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DocID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingDueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReceiveQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandPeriority", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueNarration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReplQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActRecDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(29) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PDID, PDDate, Code, PDQty, UOM, Narration, POStatus, PODate, InProc"& _ 
                "essStatus, InProcessDate, CompStatus, CompDate, LocalCustID, VerificationStatus,"& _ 
                " VerificationDate, DocID, AfterPurchaseVStatus, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         After"& _ 
                "PurchaseVDate, PurchaseStatus, PurchaseDate, PurchaseAmt, GMNo, BookingStatus, B"& _ 
                "ookingDueDate, PurchaseDescription, AmtEntryDate, PartialRecStatus, ReceiveQty, "& _ 
                "AvgUnitAmt, VendorName, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DemandStatus, OtherCharges, S"& _ 
                "leepStatus, SleepDate, PendingStatus, PendingDate, OGStatus, OGDate, OrderGivenD"& _ 
                "esc, DemandType, DemandPeriority, ApprovedBy, DeptID, IssuanceStatus, IssueDate,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RecIssueDate, IssueNarration, BillNo, ReplQty, RepSt"& _ 
                "atus, IRNo, IssueDesc, ActStatus, ActRecDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pur_Demand"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, Am"& _ 
                "tEntryDate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code,"& _ 
                " CompDate, CompStatus, DemandPeriority, DemandStatus, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " DemandType, DeptID, DocID, GMNo, IRNo, InProcessDate, InProcessStatus, Issuance"& _ 
                "Status, IssueDate, IssueDesc, IssueNarration, LocalCustID, Narration, OGDate, OG"& _ 
                "Status, OrderGivenDesc, OtherCharges, PDDate, PDID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         P"& _ 
                "DQty, PODate, POStatus, PartialRecStatus, PendingDate, PendingStatus, PurchaseAm"& _ 
                "t, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssueDate, ReceiveQty, "& _ 
                "RepStatus, ReplQty, SleepDate, SleepStatus, UOM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Vend"& _ 
                "orName, VerificationDate, VerificationStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE        (PDDate BETWEEN ? AND ?) AND (DemandStatus IN ('Active', 'Order Given"& _ 
                "')) AND (VerificationStatus = 1) AND (isnull(CompStatus, 0) = 0)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (DemandStatus IN "& _ 
                "('Active', 'Order Given')) AND (VerificationStatus = 1) AND (Code = ?) AND (isnu"& _ 
                "ll(CompStatus, 0) = 0)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (Code = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (LocalCustID = ?)"& _ 
                ""
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?) AND (Code = ?)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (GMNo = ?)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?) AND (AfterPurchaseVStatus = 1)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (Code = ?) AND (A"& _ 
                "fterPurchaseVStatus = 1)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (LocalCustID = ?)"& _ 
                " AND (AfterPurchaseVStatus = 1)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?) AND (Code = ?) AND (AfterPurchaseVStatus = 1)"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (GMNo = ?) AND (A"& _ 
                "fterPurchaseVStatus = 1)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (DemandStatus IN "& _ 
                "('Active', 'Order Given')) AND (VerificationStatus = 1) AND (LocalCustID = ?) AN"& _ 
                "D (isnull(CompStatus, 0) = 0)"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (DemandStatus IN "& _ 
                "('Active', 'Order Given')) AND (VerificationStatus = 1) AND (PDDate BETWEEN ? AN"& _ 
                "D ?) AND (Code = ?) AND (isnull(CompStatus, 0) = 0)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (DemandStatus IN "& _ 
                "('Active', 'Order Given')) AND (VerificationStatus = 1) AND (GMNo = ?) AND (isnu"& _ 
                "ll(CompStatus, 0) = 0)"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?) AND (VerificationStatus = 1) AND (isnull(CompStatus, 0) = 0)"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(17) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (Code = ?) AND (i"& _ 
                "snull(CompStatus, 0) = 0) AND (VerificationStatus = 1)"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (isnull(CompStatu"& _ 
                "s, 0) = 0) AND (VerificationStatus = 1) AND (LocalCustID = ?)"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PDDate BETWEEN ?"& _ 
                " AND ?) AND (VerificationStatus = 1) AND (isnull(CompStatus, 0) = 0) AND (Code ="& _ 
                " ?)"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(20) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (VerificationStat"& _ 
                "us = 1) AND (GMNo = ?) AND (isnull(CompStatus, 0) = 0)"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurchaseVSt"& _ 
                "atus IS NULL) AND (PurchaseStatus = 1) AND (DemandStatus = 'Active') AND (GMNo ="& _ 
                " ?) AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "SELECT     OGStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (GMNo = ?) AND (PDID "& _ 
                "= ?)"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(23).Connection = Me.Connection
            Me._commandCollection(23).CommandText = "SELECT     PendingStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (GMNo = ?) AND ("& _ 
                "PDID = ?)"
            Me._commandCollection(23).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(24).Connection = Me.Connection
            Me._commandCollection(24).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              POStatus = ?, PODate = ?, InProcessSta"& _ 
                "tus = ?, CompStatus = ?, CompDate = ?, AfterPurchaseVStatus = ?, AfterPurchaseVD"& _ 
                "ate = ?, PurchaseStatus = ?,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       PurchaseDate = ?, PurchaseA"& _ 
                "mt = ?, PurchaseDescription = ?, AmtEntryDate = ?, PartialRecStatus = ?, Receive"& _ 
                "Qty = ?, AvgUnitAmt = ?, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      VendorName = ?, OtherCharges = "& _ 
                "?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(24).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(25) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(25).Connection = Me.Connection
            Me._commandCollection(25).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              CompStatus = ?, CompDate = ?, InProces"& _ 
                "sStatus = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(25).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(26) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(26).Connection = Me.Connection
            Me._commandCollection(26).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              PurchaseAmt = ?, AmtEntryDate = ?, Avg"& _ 
                "UnitAmt = ?, ReceiveQty = ?, OtherCharges = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(26).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(27) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(27).Connection = Me.Connection
            Me._commandCollection(27).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              ReceiveQty = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(27).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(28) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(28).Connection = Me.Connection
            Me._commandCollection(28).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMNo, "& _ 
                "IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueDesc, Issu"& _ 
                "eNarration, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, OtherCharg"& _ 
                "es, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, Pendin"& _ 
                "gStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, RecIssu"& _ 
                "eDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, VendorName, "& _ 
                "VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (PurchaseStatus ="& _ 
                " 1) AND (POStatus IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NUL"& _ 
                "L OR SleepStatus = 0) AND (VendorName LIKE ? + '%')"
            Me._commandCollection(28).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(28).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(29) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(29).Connection = Me.Connection
            Me._commandCollection(29).CommandText = "SELECT     COUNT(PDID) AS MyCount"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID ="& _ 
                " ?)"
            Me._commandCollection(29).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(29).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy10(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy17(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy11(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy18(ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy12(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy19(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy13(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy20(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy14(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy21(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy15(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy22(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy16(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy23(ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy17(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy24(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy18(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy25(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy19(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy26(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy3(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy3(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy4(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy4(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy5(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy12(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy6(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy13(ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy7(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy14(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy8(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy15(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy9(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy16(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOVerificationBilling_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(21)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy55(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(21)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function VendorName_FillBy45(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable, ByVal VendorName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(28)
            If (VendorName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VendorName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy601(ByVal VendorName As String) As DSNewProcurement.tbl_Pur_Demand_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(28)
            If (VendorName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VendorName,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable = New DSNewProcurement.tbl_Pur_Demand_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Pur_Demand_NewDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Pur_Demand_New")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PDDate As Date,  _
                    ByVal Original_Code As String,  _
                    ByVal Original_PDQty As Decimal,  _
                    ByVal Original_UOM As String,  _
                    ByVal Original_Narration As String,  _
                    ByVal Original_POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CompDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_LocalCustID As Integer,  _
                    ByVal Original_VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DocID As String,  _
                    ByVal Original_AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseDescription As String,  _
                    ByVal Original_AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_DemandStatus As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OGDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OrderGivenDesc As String,  _
                    ByVal Original_DemandType As String,  _
                    ByVal Original_DemandPeriority As String,  _
                    ByVal Original_ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssueNarration As String,  _
                    ByVal Original_BillNo As String,  _
                    ByVal Original_ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RepStatus As String,  _
                    ByVal Original_IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IssueDesc As String,  _
                    ByVal Original_ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PDID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PDDate,Date)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Code,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PDQty,Decimal)
            If (Original_UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UOM")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UOM,String)
            End If
            If (Original_Narration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Narration,String)
            End If
            If (Original_POStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_POStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_PODate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PODate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_InProcessDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CompStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CompStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CompDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CompDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_LocalCustID,Integer)
            If (Original_VerificationStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_DocID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_DocID,String)
            End If
            If (Original_AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_PurchaseDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseAmt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_GMNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_GMNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_BookingStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingDueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_BookingDueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_PurchaseDescription,String)
            End If
            If (Original_AmtEntryDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_AmtEntryDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialRecStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_AvgUnitAmt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_VendorName,String)
            End If
            If (Original_DemandStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_DemandStatus,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_SleepStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_SleepDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_PendingStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_PendingDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_OGStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_OGStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_OGDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_OGDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_OrderGivenDesc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_OrderGivenDesc,String)
            End If
            If (Original_DemandType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_DemandType,String)
            End If
            If (Original_DemandPeriority Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_DemandPeriority,String)
            End If
            If (Original_ApprovedBy.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_ApprovedBy.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_DeptID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_DeptID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_IssuanceStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_IssueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_RecIssueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_RecIssueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueNarration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_IssueNarration,String)
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_BillNo,String)
            End If
            If (Original_ReplQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_ReplQty.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_RepStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_RepStatus,String)
            End If
            If (Original_IRNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_IRNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDesc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_IssueDesc,String)
            End If
            If (Original_ActStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_ActStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_ActRecDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_ActRecDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal UOM As String,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal OGDate As Global.System.Nullable(Of Date),  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As String,  _
                    ByVal ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal RepStatus As String,  _
                    ByVal IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal IssueDesc As String,  _
                    ByVal ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PDDate,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Code,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PDQty,Decimal)
            If (UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UOM")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UOM,String)
            End If
            If (Narration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Narration,String)
            End If
            If (POStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(POStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PODate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (InProcessDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(InProcessDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CompStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CompDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(LocalCustID,Integer)
            If (VerificationStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DocID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DocID,String)
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PurchaseDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GMNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BookingStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BookingStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BookingDueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(BookingDueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(AmtEntryDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(VendorName,String)
            End If
            If (DemandStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DemandStatus,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SleepStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(SleepStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SleepDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(SleepDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PendingStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PendingStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PendingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PendingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (OGStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(OGStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (OGDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(OGDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (OrderGivenDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(OrderGivenDesc,String)
            End If
            If (DemandType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DemandType,String)
            End If
            If (DemandPeriority Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(DemandPeriority,String)
            End If
            If (ApprovedBy.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ApprovedBy.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DeptID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(DeptID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (IssuanceStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IssueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(IssueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (RecIssueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(RecIssueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IssueNarration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(IssueNarration,String)
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(BillNo,String)
            End If
            If (ReplQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(ReplQty.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (RepStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RepStatus,String)
            End If
            If (IRNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(IRNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IssueDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(IssueDesc,String)
            End If
            If (ActStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(ActStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ActRecDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(ActRecDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal UOM As String,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal OGDate As Global.System.Nullable(Of Date),  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As String,  _
                    ByVal ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal RepStatus As String,  _
                    ByVal IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal IssueDesc As String,  _
                    ByVal ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ActRecDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PDDate As Date,  _
                    ByVal Original_Code As String,  _
                    ByVal Original_PDQty As Decimal,  _
                    ByVal Original_UOM As String,  _
                    ByVal Original_Narration As String,  _
                    ByVal Original_POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CompDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_LocalCustID As Integer,  _
                    ByVal Original_VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DocID As String,  _
                    ByVal Original_AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseDescription As String,  _
                    ByVal Original_AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_DemandStatus As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OGDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OrderGivenDesc As String,  _
                    ByVal Original_DemandType As String,  _
                    ByVal Original_DemandPeriority As String,  _
                    ByVal Original_ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssueNarration As String,  _
                    ByVal Original_BillNo As String,  _
                    ByVal Original_ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RepStatus As String,  _
                    ByVal Original_IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IssueDesc As String,  _
                    ByVal Original_ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PDDate,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PDQty,Decimal)
            If (UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UOM,String)
            End If
            If (Narration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Narration,String)
            End If
            If (POStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(POStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (InProcessDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(InProcessDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CompStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CompDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(LocalCustID,Integer)
            If (VerificationStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DocID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DocID,String)
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PurchaseDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GMNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BookingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BookingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BookingDueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(BookingDueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(AmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(VendorName,String)
            End If
            If (DemandStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DemandStatus,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SleepStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(SleepStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SleepDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(SleepDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PendingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PendingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PendingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(PendingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (OGStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(OGStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (OGDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(OGDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (OrderGivenDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(OrderGivenDesc,String)
            End If
            If (DemandType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DemandType,String)
            End If
            If (DemandPeriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(DemandPeriority,String)
            End If
            If (ApprovedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ApprovedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(DeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (IssuanceStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(IssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (RecIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(RecIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IssueNarration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(IssueNarration,String)
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(BillNo,String)
            End If
            If (ReplQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(ReplQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (RepStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(RepStatus,String)
            End If
            If (IRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(IRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IssueDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(IssueDesc,String)
            End If
            If (ActStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(ActStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ActRecDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(ActRecDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_PDID,Integer)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_PDDate,Date)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_PDQty,Decimal)
            If (Original_UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_UOM,String)
            End If
            If (Original_Narration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Narration,String)
            End If
            If (Original_POStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_POStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_PODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_PODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_InProcessDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_CompStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_CompStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_CompDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_CompDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_LocalCustID,Integer)
            If (Original_VerificationStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_DocID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_DocID,String)
            End If
            If (Original_AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_PurchaseDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_GMNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_GMNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_BookingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingDueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_BookingDueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_PurchaseDescription,String)
            End If
            If (Original_AmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_AmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialRecStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_AvgUnitAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_VendorName,String)
            End If
            If (Original_DemandStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_DemandStatus,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_SleepStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_SleepDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_PendingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_PendingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_OGStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_OGStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_OGDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_OGDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_OrderGivenDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_OrderGivenDesc,String)
            End If
            If (Original_DemandType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_DemandType,String)
            End If
            If (Original_DemandPeriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_DemandPeriority,String)
            End If
            If (Original_ApprovedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_ApprovedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_DeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_DeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_IssuanceStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_IssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_RecIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_RecIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueNarration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_IssueNarration,String)
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_BillNo,String)
            End If
            If (Original_ReplQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_ReplQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_RepStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_RepStatus,String)
            End If
            If (Original_IRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_IRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_IssueDesc,String)
            End If
            If (Original_ActStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_ActStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_ActRecDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_ActRecDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function OGStatus(ByVal GMNo As Global.System.Nullable(Of Integer), ByVal PDID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(22)
            If (GMNo.HasValue = true) Then
                command.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PendingStatus(ByVal GMNo As Global.System.Nullable(Of Integer), ByVal PDID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(23)
            If (GMNo.HasValue = true) Then
                command.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function ResetDemandValues( _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(24)
            If (POStatus.HasValue = true) Then
                command.Parameters(0).Value = CType(POStatus.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                command.Parameters(1).Value = CType(PODate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(InProcessStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                command.Parameters(3).Value = CType(CompStatus.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                command.Parameters(4).Value = CType(CompDate.Value,Date)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                command.Parameters(5).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                command.Parameters(6).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                command.Parameters(7).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                command.Parameters(8).Value = CType(PurchaseDate.Value,Date)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                command.Parameters(9).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                command.Parameters(11).Value = CType(AmtEntryDate.Value,Date)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                command.Parameters(12).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(13).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                command.Parameters(14).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(VendorName,String)
            End If
            If (OtherCharges.HasValue = true) Then
                command.Parameters(16).Value = CType(OtherCharges.Value,Decimal)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            command.Parameters(17).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateCompStatus(ByVal CompStatus As Global.System.Nullable(Of Boolean), ByVal CompDate As Global.System.Nullable(Of Date), ByVal InProcessStatus As Global.System.Nullable(Of Boolean), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(25)
            If (CompStatus.HasValue = true) Then
                command.Parameters(0).Value = CType(CompStatus.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                command.Parameters(1).Value = CType(CompDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(InProcessStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            command.Parameters(3).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePurchaseAmt(ByVal PurchaseAmt As Global.System.Nullable(Of Decimal), ByVal AmtEntryDate As Global.System.Nullable(Of Date), ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal), ByVal ReceiveQty As Global.System.Nullable(Of Decimal), ByVal OtherCharges As Global.System.Nullable(Of Decimal), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(26)
            If (PurchaseAmt.HasValue = true) Then
                command.Parameters(0).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (AmtEntryDate.HasValue = true) Then
                command.Parameters(1).Value = CType(AmtEntryDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                command.Parameters(2).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(3).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (OtherCharges.HasValue = true) Then
                command.Parameters(4).Value = CType(OtherCharges.Value,Decimal)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            command.Parameters(5).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateReceivingQty(ByVal ReceiveQty As Global.System.Nullable(Of Decimal), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(27)
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(0).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function VerifyPDID(ByVal PDID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(29)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Pur_PartialReceiving_NewTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Pur_PartialReceiving_New"
            tableMapping.ColumnMappings.Add("PDID", "PDID")
            tableMapping.ColumnMappings.Add("PRID", "PRID")
            tableMapping.ColumnMappings.Add("PartialQty", "PartialQty")
            tableMapping.ColumnMappings.Add("PatialRecDate", "PatialRecDate")
            tableMapping.ColumnMappings.Add("PartialUnitPrice", "PartialUnitPrice")
            tableMapping.ColumnMappings.Add("PartialAmt", "PartialAmt")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("PartialBillingVerification", "PartialBillingVerification")
            tableMapping.ColumnMappings.Add("VerificationDate", "VerificationDate")
            tableMapping.ColumnMappings.Add("PartialPOStatus", "PartialPOStatus")
            tableMapping.ColumnMappings.Add("PartialPODate", "PartialPODate")
            tableMapping.ColumnMappings.Add("PartialAmtEntryDate", "PartialAmtEntryDate")
            tableMapping.ColumnMappings.Add("CashCredit", "CashCredit")
            tableMapping.ColumnMappings.Add("VendorName", "VendorName")
            tableMapping.ColumnMappings.Add("OtherCharges", "OtherCharges")
            tableMapping.ColumnMappings.Add("BillNo", "BillNo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Pur_PartialReceiving] WHERE (([PDID] = ?) AND ([PRID] = ?) AND ("& _ 
                "[PartialQty] = ?) AND ([PatialRecDate] = ?) AND ((? = 1 AND [PartialUnitPrice] I"& _ 
                "S NULL) OR ([PartialUnitPrice] = ?)) AND ((? = 1 AND [PartialAmt] IS NULL) OR (["& _ 
                "PartialAmt] = ?)) AND ((? = 1 AND [Remarks] IS NULL) OR ([Remarks] = ?)) AND ((?"& _ 
                " = 1 AND [PartialBillingVerification] IS NULL) OR ([PartialBillingVerification] "& _ 
                "= ?)) AND ((? = 1 AND [VerificationDate] IS NULL) OR ([VerificationDate] = ?)) A"& _ 
                "ND ((? = 1 AND [PartialPOStatus] IS NULL) OR ([PartialPOStatus] = ?)) AND ((? = "& _ 
                "1 AND [PartialPODate] IS NULL) OR ([PartialPODate] = ?)) AND ((? = 1 AND [Partia"& _ 
                "lAmtEntryDate] IS NULL) OR ([PartialAmtEntryDate] = ?)) AND ((? = 1 AND [CashCre"& _ 
                "dit] IS NULL) OR ([CashCredit] = ?)) AND ((? = 1 AND [VendorName] IS NULL) OR (["& _ 
                "VendorName] = ?)) AND ((? = 1 AND [OtherCharges] IS NULL) OR ([OtherCharges] = ?"& _ 
                ")) AND ((? = 1 AND [BillNo] IS NULL) OR ([BillNo] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PRID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PatialRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PatialRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialPOStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialPOStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialPODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialPODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CashCredit", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CashCredit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Pur_PartialReceiving] ([PDID], [PartialQty], [PatialRecDate], [P"& _ 
                "artialUnitPrice], [PartialAmt], [Remarks], [PartialBillingVerification], [Verifi"& _ 
                "cationDate], [PartialPOStatus], [PartialPODate], [PartialAmtEntryDate], [CashCre"& _ 
                "dit], [VendorName], [OtherCharges], [BillNo]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PatialRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PatialRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialPOStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialPODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CashCredit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Pur_PartialReceiving] SET [PDID] = ?, [PartialQty] = ?, [PatialRecDat"& _ 
                "e] = ?, [PartialUnitPrice] = ?, [PartialAmt] = ?, [Remarks] = ?, [PartialBilling"& _ 
                "Verification] = ?, [VerificationDate] = ?, [PartialPOStatus] = ?, [PartialPODate"& _ 
                "] = ?, [PartialAmtEntryDate] = ?, [CashCredit] = ?, [VendorName] = ?, [OtherChar"& _ 
                "ges] = ?, [BillNo] = ? WHERE (([PDID] = ?) AND ([PRID] = ?) AND ([PartialQty] = "& _ 
                "?) AND ([PatialRecDate] = ?) AND ((? = 1 AND [PartialUnitPrice] IS NULL) OR ([Pa"& _ 
                "rtialUnitPrice] = ?)) AND ((? = 1 AND [PartialAmt] IS NULL) OR ([PartialAmt] = ?"& _ 
                ")) AND ((? = 1 AND [Remarks] IS NULL) OR ([Remarks] = ?)) AND ((? = 1 AND [Parti"& _ 
                "alBillingVerification] IS NULL) OR ([PartialBillingVerification] = ?)) AND ((? ="& _ 
                " 1 AND [VerificationDate] IS NULL) OR ([VerificationDate] = ?)) AND ((? = 1 AND "& _ 
                "[PartialPOStatus] IS NULL) OR ([PartialPOStatus] = ?)) AND ((? = 1 AND [PartialP"& _ 
                "ODate] IS NULL) OR ([PartialPODate] = ?)) AND ((? = 1 AND [PartialAmtEntryDate] "& _ 
                "IS NULL) OR ([PartialAmtEntryDate] = ?)) AND ((? = 1 AND [CashCredit] IS NULL) O"& _ 
                "R ([CashCredit] = ?)) AND ((? = 1 AND [VendorName] IS NULL) OR ([VendorName] = ?"& _ 
                ")) AND ((? = 1 AND [OtherCharges] IS NULL) OR ([OtherCharges] = ?)) AND ((? = 1 "& _ 
                "AND [BillNo] IS NULL) OR ([BillNo] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PatialRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PatialRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Remarks", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialPOStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialPODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CashCredit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PRID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PRID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PatialRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PatialRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialUnitPrice", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "PartialUnitPrice", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PartialAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Remarks", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Remarks", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Remarks", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialBillingVerification", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialBillingVerification", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialPOStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialPOStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPOStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialPODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialPODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialPODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialAmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialAmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CashCredit", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CashCredit", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CashCredit", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PDID, PRID, PartialQty, PatialRecDate, PartialUnitPrice, PartialAmt"& _ 
                ", Remarks, PartialBillingVerification, VerificationDate, PartialPOStatus, Partia"& _ 
                "lPODate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PartialAmtEntryDate, CashCredit, VendorName,"& _ 
                " OtherCharges, BillNo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Pur_PartialReceiving"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     AVG(OtherCharges) AS AvgOtherCharges"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_PartialRece"& _ 
                "iving"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY PDID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING      (PDID = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "DELETE FROM tbl_Pur_PartialReceiving"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT BillNo, CashCredit, OtherCharges, PDID, PRID, PartialAmt, PartialAmtEntryD"& _ 
                "ate, PartialBillingVerification, PartialPODate, PartialPOStatus, PartialQty, Par"& _ 
                "tialUnitPrice, PatialRecDate, Remarks, VendorName, VerificationDate FROM tbl_Pur"& _ 
                "_PartialReceiving WHERE (PDID = ?) AND (PartialBillingVerification IS NULL)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT     SUM(PartialAmt) AS PartialAmtSum"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_PartialReceivin"& _ 
                "g"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY PDID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING      (PDID = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     SUM(PartialQty) AS PartialSum"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_PartialReceiving"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "GROUP BY PDID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING      (PDID = ?)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable = New DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable, ByVal PDID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal PDID As Integer) As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable = New DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Pur_PartialReceiving_NewDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Pur_PartialReceiving_New")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PRID As Integer,  _
                    ByVal Original_PartialQty As Decimal,  _
                    ByVal Original_PatialRecDate As Date,  _
                    ByVal Original_PartialUnitPrice As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PartialAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_PartialBillingVerification As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialPOStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PartialPODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialAmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CashCredit As String,  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BillNo As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PDID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PRID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PartialQty,Decimal)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PatialRecDate,Date)
            If (Original_PartialUnitPrice.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PartialUnitPrice.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialAmt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PartialAmt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_Remarks,String)
            End If
            If (Original_PartialBillingVerification.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PartialBillingVerification.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialPOStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_PartialPOStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialPODate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_PartialPODate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialAmtEntryDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_PartialAmtEntryDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CashCredit Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CashCredit,String)
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_VendorName,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_BillNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal PDID As Integer, ByVal PartialQty As Decimal, ByVal PatialRecDate As Date, ByVal PartialUnitPrice As Global.System.Nullable(Of Decimal), ByVal PartialAmt As Global.System.Nullable(Of Decimal), ByVal Remarks As String, ByVal PartialBillingVerification As Global.System.Nullable(Of Boolean), ByVal VerificationDate As Global.System.Nullable(Of Date), ByVal PartialPOStatus As Global.System.Nullable(Of Boolean), ByVal PartialPODate As Global.System.Nullable(Of Date), ByVal PartialAmtEntryDate As Global.System.Nullable(Of Date), ByVal CashCredit As String, ByVal VendorName As String, ByVal OtherCharges As Global.System.Nullable(Of Decimal), ByVal BillNo As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PDID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(PartialQty,Decimal)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PatialRecDate,Date)
            If (PartialUnitPrice.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PartialUnitPrice.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PartialAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PartialAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Remarks,String)
            End If
            If (PartialBillingVerification.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PartialBillingVerification.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PartialPOStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PartialPOStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PartialPODate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PartialPODate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PartialAmtEntryDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PartialAmtEntryDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CashCredit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CashCredit,String)
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(VendorName,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BillNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PDID As Integer,  _
                    ByVal PartialQty As Decimal,  _
                    ByVal PatialRecDate As Date,  _
                    ByVal PartialUnitPrice As Global.System.Nullable(Of Decimal),  _
                    ByVal PartialAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Remarks As String,  _
                    ByVal PartialBillingVerification As Global.System.Nullable(Of Boolean),  _
                    ByVal VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialPOStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PartialPODate As Global.System.Nullable(Of Date),  _
                    ByVal PartialAmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal CashCredit As String,  _
                    ByVal VendorName As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal BillNo As String,  _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PRID As Integer,  _
                    ByVal Original_PartialQty As Decimal,  _
                    ByVal Original_PatialRecDate As Date,  _
                    ByVal Original_PartialUnitPrice As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PartialAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Remarks As String,  _
                    ByVal Original_PartialBillingVerification As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialPOStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PartialPODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialAmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CashCredit As String,  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BillNo As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PDID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PartialQty,Decimal)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PatialRecDate,Date)
            If (PartialUnitPrice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PartialUnitPrice.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PartialAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PartialAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Remarks,String)
            End If
            If (PartialBillingVerification.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PartialBillingVerification.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PartialPOStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PartialPOStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PartialPODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PartialPODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PartialAmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PartialAmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CashCredit Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CashCredit,String)
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(VendorName,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(BillNo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_PDID,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_PRID,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PartialQty,Decimal)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_PatialRecDate,Date)
            If (Original_PartialUnitPrice.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_PartialUnitPrice.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_PartialAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_Remarks Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_Remarks,String)
            End If
            If (Original_PartialBillingVerification.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_PartialBillingVerification.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialPOStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_PartialPOStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialPODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_PartialPODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialAmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_PartialAmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_CashCredit Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CashCredit,String)
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_VendorName,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_BillNo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function AvgCharges(ByVal PDID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeletePartialReceivings(ByVal PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PartialAmtSum(ByVal PDID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(4)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PartialSum(ByVal PDID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(5)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Inv_DeptTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Inv_Dept"
            tableMapping.ColumnMappings.Add("DeptID", "DeptID")
            tableMapping.ColumnMappings.Add("DeptName", "DeptName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Inv_LocalCust] WHERE (([LocalCustID] = ?) AND ([CustName] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Inv_LocalCust] ([CustName]) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Inv_LocalCust] SET [CustName] = ? WHERE (([LocalCustID] = ?) AND ([Cu"& _ 
                "stName] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LocalCustID as DeptID, CustName as DeptName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_In"& _ 
                "v_LocalCust"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Inv_DeptDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Inv_DeptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Inv_DeptDataTable = New DSNewProcurement.tbl_Inv_DeptDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Inv_DeptDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Inv_Dept")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DeptID As Integer, ByVal Original_DeptName As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DeptName As String) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DeptName As String, ByVal Original_DeptID As Integer, ByVal Original_DeptName As String) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_DeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Dept_InfoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Dept_Info"
            tableMapping.ColumnMappings.Add("DeptID", "DeptID")
            tableMapping.ColumnMappings.Add("DeptName", "DeptName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Inv_LocalCust] WHERE (([LocalCustID] = ?) AND ([CustName] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Inv_LocalCust] ([CustName]) VALUES (?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Inv_LocalCust] SET [CustName] = ? WHERE (([LocalCustID] = ?) AND ([Cu"& _ 
                "stName] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LocalCustID AS DeptID, CustName AS DeptName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_In"& _ 
                "v_LocalCust"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Dept_InfoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Dept_InfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Dept_InfoDataTable = New DSNewProcurement.tbl_Dept_InfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Dept_InfoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Dept_Info")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DeptID As Integer, ByVal Original_DeptName As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DeptName As String) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DeptName As String, ByVal Original_DeptID As Integer, ByVal Original_DeptName As String) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_DeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_DeptName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Sec_MiddleTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Sec_Middle"
            tableMapping.ColumnMappings.Add("MiddleSerial", "MiddleSerial")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Sec_Middle] WHERE (([MiddleSerial] = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MiddleSerial", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleSerial", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Sec_Middle] WHERE (([MiddleSerial] = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MiddleSerial", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MiddleSerial", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        MiddleSerial"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Sec_Middle"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY MiddleSerial"& _ 
                " DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Sec_MiddleDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Sec_MiddleDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Sec_MiddleDataTable = New DSNewProcurement.tbl_Sec_MiddleDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Sec_MiddleDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Sec_Middle")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_MiddleSerial As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_MiddleSerial,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_MiddleSerial As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Original_MiddleSerial,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Bill_DemandTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Bill_Demand"
            tableMapping.ColumnMappings.Add("PDID", "PDID")
            tableMapping.ColumnMappings.Add("PDDate", "PDDate")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("PDQty", "PDQty")
            tableMapping.ColumnMappings.Add("Narration", "Narration")
            tableMapping.ColumnMappings.Add("POStatus", "POStatus")
            tableMapping.ColumnMappings.Add("PODate", "PODate")
            tableMapping.ColumnMappings.Add("InProcessStatus", "InProcessStatus")
            tableMapping.ColumnMappings.Add("InProcessDate", "InProcessDate")
            tableMapping.ColumnMappings.Add("CompStatus", "CompStatus")
            tableMapping.ColumnMappings.Add("CompDate", "CompDate")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("LocalCustID", "LocalCustID")
            tableMapping.ColumnMappings.Add("VerificationStatus", "VerificationStatus")
            tableMapping.ColumnMappings.Add("VerificationDate", "VerificationDate")
            tableMapping.ColumnMappings.Add("DocID", "DocID")
            tableMapping.ColumnMappings.Add("AfterPurchaseVStatus", "AfterPurchaseVStatus")
            tableMapping.ColumnMappings.Add("AfterPurchaseVDate", "AfterPurchaseVDate")
            tableMapping.ColumnMappings.Add("PurchaseStatus", "PurchaseStatus")
            tableMapping.ColumnMappings.Add("PurchaseDate", "PurchaseDate")
            tableMapping.ColumnMappings.Add("PurchaseAmt", "PurchaseAmt")
            tableMapping.ColumnMappings.Add("GMNo", "GMNo")
            tableMapping.ColumnMappings.Add("BookingStatus", "BookingStatus")
            tableMapping.ColumnMappings.Add("BookingDueDate", "BookingDueDate")
            tableMapping.ColumnMappings.Add("PurchaseDescription", "PurchaseDescription")
            tableMapping.ColumnMappings.Add("AmtEntryDate", "AmtEntryDate")
            tableMapping.ColumnMappings.Add("PartialRecStatus", "PartialRecStatus")
            tableMapping.ColumnMappings.Add("ReceiveQty", "ReceiveQty")
            tableMapping.ColumnMappings.Add("AvgUnitAmt", "AvgUnitAmt")
            tableMapping.ColumnMappings.Add("VendorName", "VendorName")
            tableMapping.ColumnMappings.Add("DemandStatus", "DemandStatus")
            tableMapping.ColumnMappings.Add("OtherCharges", "OtherCharges")
            tableMapping.ColumnMappings.Add("SleepStatus", "SleepStatus")
            tableMapping.ColumnMappings.Add("SleepDate", "SleepDate")
            tableMapping.ColumnMappings.Add("PendingStatus", "PendingStatus")
            tableMapping.ColumnMappings.Add("PendingDate", "PendingDate")
            tableMapping.ColumnMappings.Add("OGStatus", "OGStatus")
            tableMapping.ColumnMappings.Add("OGDate", "OGDate")
            tableMapping.ColumnMappings.Add("OrderGivenDesc", "OrderGivenDesc")
            tableMapping.ColumnMappings.Add("DemandType", "DemandType")
            tableMapping.ColumnMappings.Add("ApprovedBy", "ApprovedBy")
            tableMapping.ColumnMappings.Add("DemandPeriority", "DemandPeriority1")
            tableMapping.ColumnMappings.Add("IRNo", "IRNo")
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate")
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate")
            tableMapping.ColumnMappings.Add("IssuanceStatus", "IssuanceStatus")
            tableMapping.ColumnMappings.Add("IssueDate", "IssueDate")
            tableMapping.ColumnMappings.Add("RecIssueDate", "RecIssueDate")
            tableMapping.ColumnMappings.Add("IssueNarration", "IssueNarration")
            tableMapping.ColumnMappings.Add("BillNo", "BillNo")
            tableMapping.ColumnMappings.Add("ReplQty", "ReplQty")
            tableMapping.ColumnMappings.Add("RepStatus", "RepStatus")
            tableMapping.ColumnMappings.Add("DeptID", "DeptID")
            tableMapping.ColumnMappings.Add("ActStatus", "ActStatus")
            tableMapping.ColumnMappings.Add("ActRecDate", "ActRecDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Pur_Demand] WHERE (([PDID] = ?) AND ([PDDate] = ?) AND ([Code] ="& _ 
                " ?) AND ([PDQty] = ?) AND ([UOM] = ?) AND ((? = 1 AND [Narration] IS NULL) OR (["& _ 
                "Narration] = ?)) AND ((? = 1 AND [POStatus] IS NULL) OR ([POStatus] = ?)) AND (("& _ 
                "? = 1 AND [PODate] IS NULL) OR ([PODate] = ?)) AND ((? = 1 AND [InProcessStatus]"& _ 
                " IS NULL) OR ([InProcessStatus] = ?)) AND ((? = 1 AND [InProcessDate] IS NULL) O"& _ 
                "R ([InProcessDate] = ?)) AND ((? = 1 AND [CompStatus] IS NULL) OR ([CompStatus] "& _ 
                "= ?)) AND ((? = 1 AND [CompDate] IS NULL) OR ([CompDate] = ?)) AND ([LocalCustID"& _ 
                "] = ?) AND ((? = 1 AND [VerificationStatus] IS NULL) OR ([VerificationStatus] = "& _ 
                "?)) AND ((? = 1 AND [VerificationDate] IS NULL) OR ([VerificationDate] = ?)) AND"& _ 
                " ([DocID] = ?) AND ((? = 1 AND [AfterPurchaseVStatus] IS NULL) OR ([AfterPurchas"& _ 
                "eVStatus] = ?)) AND ((? = 1 AND [AfterPurchaseVDate] IS NULL) OR ([AfterPurchase"& _ 
                "VDate] = ?)) AND ((? = 1 AND [PurchaseStatus] IS NULL) OR ([PurchaseStatus] = ?)"& _ 
                ") AND ((? = 1 AND [PurchaseDate] IS NULL) OR ([PurchaseDate] = ?)) AND ((? = 1 A"& _ 
                "ND [PurchaseAmt] IS NULL) OR ([PurchaseAmt] = ?)) AND ((? = 1 AND [GMNo] IS NULL"& _ 
                ") OR ([GMNo] = ?)) AND ((? = 1 AND [BookingStatus] IS NULL) OR ([BookingStatus] "& _ 
                "= ?)) AND ((? = 1 AND [BookingDueDate] IS NULL) OR ([BookingDueDate] = ?)) AND ("& _ 
                "(? = 1 AND [PurchaseDescription] IS NULL) OR ([PurchaseDescription] = ?)) AND (("& _ 
                "? = 1 AND [AmtEntryDate] IS NULL) OR ([AmtEntryDate] = ?)) AND ((? = 1 AND [Part"& _ 
                "ialRecStatus] IS NULL) OR ([PartialRecStatus] = ?)) AND ((? = 1 AND [ReceiveQty]"& _ 
                " IS NULL) OR ([ReceiveQty] = ?)) AND ((? = 1 AND [AvgUnitAmt] IS NULL) OR ([AvgU"& _ 
                "nitAmt] = ?)) AND ((? = 1 AND [VendorName] IS NULL) OR ([VendorName] = ?)) AND ("& _ 
                "[DemandStatus] = ?) AND ((? = 1 AND [OtherCharges] IS NULL) OR ([OtherCharges] ="& _ 
                " ?)) AND ((? = 1 AND [SleepStatus] IS NULL) OR ([SleepStatus] = ?)) AND ((? = 1 "& _ 
                "AND [SleepDate] IS NULL) OR ([SleepDate] = ?)) AND ((? = 1 AND [PendingStatus] I"& _ 
                "S NULL) OR ([PendingStatus] = ?)) AND ((? = 1 AND [PendingDate] IS NULL) OR ([Pe"& _ 
                "ndingDate] = ?)) AND ((? = 1 AND [OGStatus] IS NULL) OR ([OGStatus] = ?)) AND (("& _ 
                "? = 1 AND [OGDate] IS NULL) OR ([OGDate] = ?)) AND ((? = 1 AND [OrderGivenDesc] "& _ 
                "IS NULL) OR ([OrderGivenDesc] = ?)) AND ((? = 1 AND [DemandType] IS NULL) OR ([D"& _ 
                "emandType] = ?)) AND ((? = 1 AND [DemandPeriority] IS NULL) OR ([DemandPeriority"& _ 
                "] = ?)) AND ((? = 1 AND [ApprovedBy] IS NULL) OR ([ApprovedBy] = ?)) AND ((? = 1"& _ 
                " AND [IRNo] IS NULL) OR ([IRNo] = ?)) AND ((? = 1 AND [LastEditDate] IS NULL) OR"& _ 
                " ([LastEditDate] = ?)) AND ((? = 1 AND [CreationDate] IS NULL) OR ([CreationDate"& _ 
                "] = ?)) AND ((? = 1 AND [IssuanceStatus] IS NULL) OR ([IssuanceStatus] = ?)) AND"& _ 
                " ((? = 1 AND [IssueDate] IS NULL) OR ([IssueDate] = ?)) AND ((? = 1 AND [RecIssu"& _ 
                "eDate] IS NULL) OR ([RecIssueDate] = ?)) AND ((? = 1 AND [IssueNarration] IS NUL"& _ 
                "L) OR ([IssueNarration] = ?)) AND ((? = 1 AND [BillNo] IS NULL) OR ([BillNo] = ?"& _ 
                ")) AND ((? = 1 AND [ReplQty] IS NULL) OR ([ReplQty] = ?)) AND ((? = 1 AND [RepSt"& _ 
                "atus] IS NULL) OR ([RepStatus] = ?)) AND ((? = 1 AND [DeptID] IS NULL) OR ([Dept"& _ 
                "ID] = ?)) AND ((? = 1 AND [ActStatus] IS NULL) OR ([ActStatus] = ?)) AND ((? = 1"& _ 
                " AND [ActRecDate] IS NULL) OR ([ActRecDate] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Narration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingDueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReceiveQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandPeriority", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LastEditDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LastEditDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueNarration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReplQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActRecDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Pur_Demand] ([PDDate], [Code], [PDQty], [UOM], [Narration], [POS"& _ 
                "tatus], [PODate], [InProcessStatus], [InProcessDate], [CompStatus], [CompDate], "& _ 
                "[LocalCustID], [VerificationStatus], [VerificationDate], [DocID], [AfterPurchase"& _ 
                "VStatus], [AfterPurchaseVDate], [PurchaseStatus], [PurchaseDate], [PurchaseAmt],"& _ 
                " [GMNo], [BookingStatus], [BookingDueDate], [PurchaseDescription], [AmtEntryDate"& _ 
                "], [PartialRecStatus], [ReceiveQty], [AvgUnitAmt], [VendorName], [DemandStatus],"& _ 
                " [OtherCharges], [SleepStatus], [SleepDate], [PendingStatus], [PendingDate], [OG"& _ 
                "Status], [OGDate], [OrderGivenDesc], [DemandType], [DemandPeriority], [ApprovedB"& _ 
                "y], [IRNo], [LastEditDate], [CreationDate], [IssuanceStatus], [IssueDate], [RecI"& _ 
                "ssueDate], [IssueNarration], [BillNo], [ReplQty], [RepStatus], [DeptID], [ActSta"& _ 
                "tus], [ActRecDate]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LastEditDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Pur_Demand] SET [PDDate] = ?, [Code] = ?, [PDQty] = ?, [UOM] = ?, [Na"& _ 
                "rration] = ?, [POStatus] = ?, [PODate] = ?, [InProcessStatus] = ?, [InProcessDat"& _ 
                "e] = ?, [CompStatus] = ?, [CompDate] = ?, [LocalCustID] = ?, [VerificationStatus"& _ 
                "] = ?, [VerificationDate] = ?, [DocID] = ?, [AfterPurchaseVStatus] = ?, [AfterPu"& _ 
                "rchaseVDate] = ?, [PurchaseStatus] = ?, [PurchaseDate] = ?, [PurchaseAmt] = ?, ["& _ 
                "GMNo] = ?, [BookingStatus] = ?, [BookingDueDate] = ?, [PurchaseDescription] = ?,"& _ 
                " [AmtEntryDate] = ?, [PartialRecStatus] = ?, [ReceiveQty] = ?, [AvgUnitAmt] = ?,"& _ 
                " [VendorName] = ?, [DemandStatus] = ?, [OtherCharges] = ?, [SleepStatus] = ?, [S"& _ 
                "leepDate] = ?, [PendingStatus] = ?, [PendingDate] = ?, [OGStatus] = ?, [OGDate] "& _ 
                "= ?, [OrderGivenDesc] = ?, [DemandType] = ?, [DemandPeriority] = ?, [ApprovedBy]"& _ 
                " = ?, [IRNo] = ?, [LastEditDate] = ?, [CreationDate] = ?, [IssuanceStatus] = ?, "& _ 
                "[IssueDate] = ?, [RecIssueDate] = ?, [IssueNarration] = ?, [BillNo] = ?, [ReplQt"& _ 
                "y] = ?, [RepStatus] = ?, [DeptID] = ?, [ActStatus] = ?, [ActRecDate] = ? WHERE ("& _ 
                "([PDID] = ?) AND ([PDDate] = ?) AND ([Code] = ?) AND ([PDQty] = ?) AND ([UOM] = "& _ 
                "?) AND ((? = 1 AND [Narration] IS NULL) OR ([Narration] = ?)) AND ((? = 1 AND [P"& _ 
                "OStatus] IS NULL) OR ([POStatus] = ?)) AND ((? = 1 AND [PODate] IS NULL) OR ([PO"& _ 
                "Date] = ?)) AND ((? = 1 AND [InProcessStatus] IS NULL) OR ([InProcessStatus] = ?"& _ 
                ")) AND ((? = 1 AND [InProcessDate] IS NULL) OR ([InProcessDate] = ?)) AND ((? = "& _ 
                "1 AND [CompStatus] IS NULL) OR ([CompStatus] = ?)) AND ((? = 1 AND [CompDate] IS"& _ 
                " NULL) OR ([CompDate] = ?)) AND ([LocalCustID] = ?) AND ((? = 1 AND [Verificatio"& _ 
                "nStatus] IS NULL) OR ([VerificationStatus] = ?)) AND ((? = 1 AND [VerificationDa"& _ 
                "te] IS NULL) OR ([VerificationDate] = ?)) AND ([DocID] = ?) AND ((? = 1 AND [Aft"& _ 
                "erPurchaseVStatus] IS NULL) OR ([AfterPurchaseVStatus] = ?)) AND ((? = 1 AND [Af"& _ 
                "terPurchaseVDate] IS NULL) OR ([AfterPurchaseVDate] = ?)) AND ((? = 1 AND [Purch"& _ 
                "aseStatus] IS NULL) OR ([PurchaseStatus] = ?)) AND ((? = 1 AND [PurchaseDate] IS"& _ 
                " NULL) OR ([PurchaseDate] = ?)) AND ((? = 1 AND [PurchaseAmt] IS NULL) OR ([Purc"& _ 
                "haseAmt] = ?)) AND ((? = 1 AND [GMNo] IS NULL) OR ([GMNo] = ?)) AND ((? = 1 AND "& _ 
                "[BookingStatus] IS NULL) OR ([BookingStatus] = ?)) AND ((? = 1 AND [BookingDueDa"& _ 
                "te] IS NULL) OR ([BookingDueDate] = ?)) AND ((? = 1 AND [PurchaseDescription] IS"& _ 
                " NULL) OR ([PurchaseDescription] = ?)) AND ((? = 1 AND [AmtEntryDate] IS NULL) O"& _ 
                "R ([AmtEntryDate] = ?)) AND ((? = 1 AND [PartialRecStatus] IS NULL) OR ([Partial"& _ 
                "RecStatus] = ?)) AND ((? = 1 AND [ReceiveQty] IS NULL) OR ([ReceiveQty] = ?)) AN"& _ 
                "D ((? = 1 AND [AvgUnitAmt] IS NULL) OR ([AvgUnitAmt] = ?)) AND ((? = 1 AND [Vend"& _ 
                "orName] IS NULL) OR ([VendorName] = ?)) AND ([DemandStatus] = ?) AND ((? = 1 AND"& _ 
                " [OtherCharges] IS NULL) OR ([OtherCharges] = ?)) AND ((? = 1 AND [SleepStatus] "& _ 
                "IS NULL) OR ([SleepStatus] = ?)) AND ((? = 1 AND [SleepDate] IS NULL) OR ([Sleep"& _ 
                "Date] = ?)) AND ((? = 1 AND [PendingStatus] IS NULL) OR ([PendingStatus] = ?)) A"& _ 
                "ND ((? = 1 AND [PendingDate] IS NULL) OR ([PendingDate] = ?)) AND ((? = 1 AND [O"& _ 
                "GStatus] IS NULL) OR ([OGStatus] = ?)) AND ((? = 1 AND [OGDate] IS NULL) OR ([OG"& _ 
                "Date] = ?)) AND ((? = 1 AND [OrderGivenDesc] IS NULL) OR ([OrderGivenDesc] = ?))"& _ 
                " AND ((? = 1 AND [DemandType] IS NULL) OR ([DemandType] = ?)) AND ((? = 1 AND [D"& _ 
                "emandPeriority] IS NULL) OR ([DemandPeriority] = ?)) AND ((? = 1 AND [ApprovedBy"& _ 
                "] IS NULL) OR ([ApprovedBy] = ?)) AND ((? = 1 AND [IRNo] IS NULL) OR ([IRNo] = ?"& _ 
                ")) AND ((? = 1 AND [LastEditDate] IS NULL) OR ([LastEditDate] = ?)) AND ((? = 1 "& _ 
                "AND [CreationDate] IS NULL) OR ([CreationDate] = ?)) AND ((? = 1 AND [IssuanceSt"& _ 
                "atus] IS NULL) OR ([IssuanceStatus] = ?)) AND ((? = 1 AND [IssueDate] IS NULL) O"& _ 
                "R ([IssueDate] = ?)) AND ((? = 1 AND [RecIssueDate] IS NULL) OR ([RecIssueDate] "& _ 
                "= ?)) AND ((? = 1 AND [IssueNarration] IS NULL) OR ([IssueNarration] = ?)) AND ("& _ 
                "(? = 1 AND [BillNo] IS NULL) OR ([BillNo] = ?)) AND ((? = 1 AND [ReplQty] IS NUL"& _ 
                "L) OR ([ReplQty] = ?)) AND ((? = 1 AND [RepStatus] IS NULL) OR ([RepStatus] = ?)"& _ 
                ") AND ((? = 1 AND [DeptID] IS NULL) OR ([DeptID] = ?)) AND ((? = 1 AND [ActStatu"& _ 
                "s] IS NULL) OR ([ActStatus] = ?)) AND ((? = 1 AND [ActRecDate] IS NULL) OR ([Act"& _ 
                "RecDate] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LastEditDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Code", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PDQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UOM", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UOM", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Narration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Narration", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_POStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PODate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_InProcessDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_InProcessDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VerificationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VerificationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VerificationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DocID", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DocID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BookingDueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BookingDueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BookingDueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PurchaseDescription", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AmtEntryDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReceiveQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_VendorName", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandStatus", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OtherCharges", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SleepDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SleepDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SleepDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PendingDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PendingDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PendingDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OGDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OGDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OGDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OrderGivenDesc", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OrderGivenDesc", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandType", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DemandPeriority", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DemandPeriority", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DemandPeriority", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ApprovedBy", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ApprovedBy", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IRNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IRNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LastEditDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LastEditDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LastEditDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreationDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreationDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssuanceStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssuanceStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RecIssueDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RecIssueDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RecIssueDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IssueNarration", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IssueNarration", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IssueNarration", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BillNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BillNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BillNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReplQty", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReplQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReplQty", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_RepStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_RepStatus", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RepStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ActRecDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ActRecDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ActRecDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(68) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PDID, PDDate, Code, PDQty, UOM, Narration, POStatus, PODate, InProc"& _ 
                "essStatus, InProcessDate, CompStatus, CompDate, LocalCustID, VerificationStatus,"& _ 
                " VerificationDate, DocID, AfterPurchaseVStatus, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         After"& _ 
                "PurchaseVDate, PurchaseStatus, PurchaseDate, PurchaseAmt, GMNo, BookingStatus, B"& _ 
                "ookingDueDate, PurchaseDescription, AmtEntryDate, PartialRecStatus, ReceiveQty, "& _ 
                "AvgUnitAmt, VendorName, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DemandStatus, OtherCharges, S"& _ 
                "leepStatus, SleepDate, PendingStatus, PendingDate, OGStatus, OGDate, OrderGivenD"& _ 
                "esc, DemandType, DemandPeriority, ApprovedBy, IRNo, LastEditDate, CreationDate, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         IssuanceStatus, IssueDate, RecIssueDate, IssueNarrati"& _ 
                "on, BillNo, ReplQty, RepStatus, DeptID, ActStatus, ActRecDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t"& _ 
                "bl_Pur_Demand"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL "& _ 
                "OR SleepStatus = 0)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (Co"& _ 
                "mpStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepSta"& _ 
                "tus = 0) OR (PDDate BETWEEN ? AND ?) AND (POStatus IS NULL) AND (PurchaseStatus "& _ 
                "= 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) "& _ 
                "AND (PartialRecStatus = 1)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (CompStatus IS NULL) AND (InProcessStatus = 1) AND "& _ 
                "(DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (PDDat"& _ 
                "e BETWEEN ? AND ?) AND (CompStatus IS NULL) AND (DemandStatus = 'Active') AND (S"& _ 
                "leepStatus IS NULL OR SleepStatus = 0) AND (BookingStatus = 1)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (CompStatus IS NULL) AND (InProcessStatus = 1) AND (DemandStatus "& _ 
                "= 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (Code = ?) AND (Comp"& _ 
                "Status IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepS"& _ 
                "tatus = 0) AND (BookingStatus = 1)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (CompStatus IS NULL) AND (InProcessS"& _ 
                "tatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus"& _ 
                " = 0) OR (PDDate BETWEEN ? AND ?) AND (Code = ?) AND (CompStatus IS NULL) AND (D"& _ 
                "emandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (Bookin"& _ 
                "gStatus = 1)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (AfterPurchaseVStatus IS NULL) AND (PurchaseStatus "& _ 
                "= 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (AfterPurchaseVStatus IS NULL) AND (PurchaseStatus = 1) AND (Dema"& _ 
                "ndStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (AfterPurchaseVStatus IS NULL) AND ("& _ 
                "PurchaseStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sl"& _ 
                "eepStatus = 0)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND ("& _ 
                "DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (PDDate"& _ 
                " BETWEEN ? AND ?) AND (PurchaseStatus IS NULL) AND (DemandStatus = 'Active') AND"& _ 
                " (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND (DemandStatus ="& _ 
                " 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (Code = ?) AND (Purch"& _ 
                "aseStatus IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sle"& _ 
                "epStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (CompStatus = 1) AND (PurchaseStatus"& _ 
                " IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus "& _ 
                "= 0) OR (PDDate BETWEEN ? AND ?) AND (Code = ?) AND (PurchaseStatus IS NULL) AND"& _ 
                " (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (Par"& _ 
                "tialRecStatus = 1)"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND ("& _ 
                "POStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepSta"& _ 
                "tus = 0) OR (PDDate BETWEEN ? AND ?) AND (PurchaseStatus IS NULL) AND (POStatus "& _ 
                "= 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) "& _ 
                "AND (PartialRecStatus = 1)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate2", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate3", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (CompStatus = 1) "& _ 
                "AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (C"& _ 
                "ode = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (DemandStatus = 'Ac"& _ 
                "tive') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND (DemandStatus ="& _ 
                " 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (Code = ?) AND (Purch"& _ 
                "aseStatus IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sle"& _ 
                "epStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (PurchaseStatus IS NULL) AND (CompSt"& _ 
                "atus = 1) AND (POStatus = 1) AND (SleepStatus IS NULL OR SleepStatus = 0) OR (PD"& _ 
                "Date BETWEEN ? AND ?) AND (Code = ?) AND (PurchaseStatus IS NULL) AND (POStatus "& _ 
                "= 1) AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate2", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate3", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(16).Connection = Me.Connection
            Me._commandCollection(16).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (PurchaseStatus = 1) AND (POStatus IS NULL) AND (De"& _ 
                "mandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(16).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(16).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(17) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(17).Connection = Me.Connection
            Me._commandCollection(17).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (PurchaseStatus = 1) AND (POStatus IS NULL) AND (DemandStatus = '"& _ 
                "Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(17).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(17).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(18).Connection = Me.Connection
            Me._commandCollection(18).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (PurchaseStatus = 1) AND (POStatus I"& _ 
                "S NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = "& _ 
                "0)"
            Me._commandCollection(18).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(18).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(19).Connection = Me.Connection
            Me._commandCollection(19).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (BookingStatus IS NULL OR BookingStatus = 1) AND (D"& _ 
                "emandStatus = 'Active') AND (PurchaseStatus IS NULL) AND (InProcessStatus = 1 OR"& _ 
                " InProcessStatus = 0) AND (SleepStatus IS NULL OR SleepStatus = 0) AND (CompStat"& _ 
                "us IS NULL OR CompStatus = 0)"
            Me._commandCollection(19).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(19).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(20) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(20).Connection = Me.Connection
            Me._commandCollection(20).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (BookingStatus IS NULL OR BookingStatus = 1) AND (DemandStatus = "& _ 
                "'Active') AND (PurchaseStatus IS NULL) AND (InProcessStatus = 1 OR InProcessStat"& _ 
                "us = 0) AND (SleepStatus IS NULL OR SleepStatus = 0) AND (CompStatus IS NULL OR "& _ 
                "CompStatus = 0)"
            Me._commandCollection(20).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(20).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(21).Connection = Me.Connection
            Me._commandCollection(21).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (BookingStatus IS NULL OR BookingSta"& _ 
                "tus = 1) AND (DemandStatus = 'Active') AND (PurchaseStatus IS NULL) AND (InProce"& _ 
                "ssStatus = 1 OR InProcessStatus = 0) AND (SleepStatus IS NULL OR SleepStatus = 0"& _ 
                ") AND (CompStatus IS NULL OR CompStatus = 0)"
            Me._commandCollection(21).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(21).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(22).Connection = Me.Connection
            Me._commandCollection(22).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDID = ?) AND (GMNo = ?) AND (DemandStatus = 'Active')"
            Me._commandCollection(22).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(22).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(23).Connection = Me.Connection
            Me._commandCollection(23).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?)"
            Me._commandCollection(23).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(23).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(24).Connection = Me.Connection
            Me._commandCollection(24).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (POStatus IS NULL) AND (PurchaseStat"& _ 
                "us = 1) AND (CompStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS N"& _ 
                "ULL OR SleepStatus = 0) OR (PDDate BETWEEN ? AND ?) AND (Code = ?) AND (POStatus"& _ 
                " IS NULL) AND (PurchaseStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatu"& _ 
                "s IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(24).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(24).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(25).Connection = Me.Connection
            Me._commandCollection(25).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(CompStatus = 1) AND (PDDate BETWEEN ? AND ?) AND (DemandStatus = 'Active') AND "& _ 
                "(SleepStatus IS NULL OR SleepStatus = 0) OR (PDDate BETWEEN ? AND ?) AND (Demand"& _ 
                "Status = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecS"& _ 
                "tatus = 1)"
            Me._commandCollection(25).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(25).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(26) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(26).Connection = Me.Connection
            Me._commandCollection(26).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(CompStatus = 1) AND (Code = ?) AND (DemandStatus = 'Active') AND (SleepStatus I"& _ 
                "S NULL OR SleepStatus = 0) OR (Code = ?) AND (DemandStatus = 'Active') AND (Slee"& _ 
                "pStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(26).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(26).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(27).Connection = Me.Connection
            Me._commandCollection(27).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(CompStatus = 1) AND (PDDate BETWEEN ? AND ?) AND (Code = ?) AND (DemandStatus ="& _ 
                " 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (PDDate BETWEEN ? AND"& _ 
                " ?) AND (Code = ?) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sle"& _ 
                "epStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(27).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(27).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(28) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(28).Connection = Me.Connection
            Me._commandCollection(28).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (BookingStatus IS NULL OR BookingStatus = 1) AND (DemandSt"& _ 
                "atus = 'Active') AND (PurchaseStatus IS NULL) AND (InProcessStatus = 1 OR InProc"& _ 
                "essStatus = 0) AND (SleepStatus IS NULL OR SleepStatus = 0) AND (CompStatus IS N"& _ 
                "ULL OR CompStatus = 0)"
            Me._commandCollection(28).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(28).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(29) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(29).Connection = Me.Connection
            Me._commandCollection(29).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (CompStatu"& _ 
                "s = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0"& _ 
                ") OR (LocalCustID = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (Dema"& _ 
                "ndStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRe"& _ 
                "cStatus = 1)"
            Me._commandCollection(29).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(29).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(30) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(30).Connection = Me.Connection
            Me._commandCollection(30).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND (DemandS"& _ 
                "tatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (LocalCustID ="& _ 
                " ?) AND (PurchaseStatus IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus "& _ 
                "IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(30).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(30).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(31) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(31).Connection = Me.Connection
            Me._commandCollection(31).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (InProcessStatus IS NULL) AND (VerificationStatus = 1) AND"& _ 
                " (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(31).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(31).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(32) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(32).Connection = Me.Connection
            Me._commandCollection(32).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (CompStatu"& _ 
                "s = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0"& _ 
                ") OR (LocalCustID = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (Dema"& _ 
                "ndStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRe"& _ 
                "cStatus = 1)"
            Me._commandCollection(32).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(32).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(33) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(33).Connection = Me.Connection
            Me._commandCollection(33).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (PurchaseStatus = 1) AND (POStatus IS NULL) AND (DemandSta"& _ 
                "tus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(33).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(33).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(34) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(34).Connection = Me.Connection
            Me._commandCollection(34).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (AfterPurchaseVStatus IS NULL) AND (PurchaseStatus = 1) AN"& _ 
                "D (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(34).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(34).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(35) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(35).Connection = Me.Connection
            Me._commandCollection(35).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (InProcessStatus IS NULL) AND (VerificationStatus ="& _ 
                " 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(35).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(35).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(35).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(36) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(36).Connection = Me.Connection
            Me._commandCollection(36).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(CompStatus = 1) AND (LocalCustID = ?) AND (DemandStatus = 'Active') AND (SleepS"& _ 
                "tatus IS NULL OR SleepStatus = 0) OR (LocalCustID = ?) AND (DemandStatus = 'Acti"& _ 
                "ve') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(36).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(36).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(37) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(37).Connection = Me.Connection
            Me._commandCollection(37).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (InProcessStatus IS NULL) AND (VerificationStatus ="& _ 
                " 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NOT NULL)"
            Me._commandCollection(37).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(37).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(37).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(38) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(38).Connection = Me.Connection
            Me._commandCollection(38).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (InProcessStatus IS NULL) AND (VerificationStatus = 1) AND (Deman"& _ 
                "dStatus = 'Active') AND (SleepStatus IS NOT NULL)"
            Me._commandCollection(38).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(38).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(39) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(39).Connection = Me.Connection
            Me._commandCollection(39).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (InProcessStatus IS NULL) AND (Verif"& _ 
                "icationStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NOT NULL)"
            Me._commandCollection(39).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(39).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(39).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(39).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(40) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(40).Connection = Me.Connection
            Me._commandCollection(40).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(LocalCustID = ?) AND (InProcessStatus IS NULL) AND (VerificationStatus = 1) AND"& _ 
                " (DemandStatus = 'Active') AND (SleepStatus IS NOT NULL)"
            Me._commandCollection(40).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(40).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(41) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(41).Connection = Me.Connection
            Me._commandCollection(41).CommandText = "SELECT ActRecDate, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryDate, Approv"& _ 
                "edBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDate, CompSta"& _ 
                "tus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMN"& _ 
                "o, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueNarrati"& _ 
                "on, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, Othe"& _ 
                "rCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, "& _ 
                "PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, R"& _ 
                "ecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, Vendor"& _ 
                "Name, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurch"& _ 
                "aseVStatus = 1) AND (PDDate BETWEEN ? AND ?) AND (isnull(ActStatus, 0) = 0)"
            Me._commandCollection(41).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(41).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(41).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(42) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(42).Connection = Me.Connection
            Me._commandCollection(42).CommandText = "SELECT ActRecDate, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryDate, Approv"& _ 
                "edBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDate, CompSta"& _ 
                "tus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMN"& _ 
                "o, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueNarrati"& _ 
                "on, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, Othe"& _ 
                "rCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, "& _ 
                "PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, R"& _ 
                "ecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, Vendor"& _ 
                "Name, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurch"& _ 
                "aseVStatus = 1) AND (Code = ?) AND (isnull(ActStatus, 0) = 0)"
            Me._commandCollection(42).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(42).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(43) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(43).Connection = Me.Connection
            Me._commandCollection(43).CommandText = "SELECT ActRecDate, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryDate, Approv"& _ 
                "edBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDate, CompSta"& _ 
                "tus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMN"& _ 
                "o, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueNarrati"& _ 
                "on, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, Othe"& _ 
                "rCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, "& _ 
                "PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, R"& _ 
                "ecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, Vendor"& _ 
                "Name, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurch"& _ 
                "aseVStatus = 1) AND (PDDate BETWEEN ? AND ?) AND (Code = ?) AND (isnull(ActStatu"& _ 
                "s, 0) = 0)"
            Me._commandCollection(43).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(43).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(43).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(43).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(44) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(44).Connection = Me.Connection
            Me._commandCollection(44).CommandText = "SELECT ActRecDate, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryDate, Approv"& _ 
                "edBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDate, CompSta"& _ 
                "tus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMN"& _ 
                "o, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueNarrati"& _ 
                "on, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, Othe"& _ 
                "rCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, "& _ 
                "PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, R"& _ 
                "ecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, Vendor"& _ 
                "Name, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurch"& _ 
                "aseVStatus = 1) AND (LocalCustID = ?) AND (isnull(ActStatus, 0) = 0)"
            Me._commandCollection(44).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(44).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LocalCustID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LocalCustID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(45) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(45).Connection = Me.Connection
            Me._commandCollection(45).CommandText = "SELECT ActRecDate, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryDate, Approv"& _ 
                "edBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDate, CompSta"& _ 
                "tus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID, DocID, GMN"& _ 
                "o, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, IssueNarrati"& _ 
                "on, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGivenDesc, Othe"& _ 
                "rCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, PendingDate, "& _ 
                "PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, PurchaseStatus, R"& _ 
                "ecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, UOM, Vendor"& _ 
                "Name, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE (AfterPurch"& _ 
                "aseVStatus = 1) AND (GMNo = ?) AND (isnull(ActStatus, 0) = 0)"
            Me._commandCollection(45).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(45).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(46) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(46).Connection = Me.Connection
            Me._commandCollection(46).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(Code = ?) AND (InProcessStatus IS NULL) AND (VerificationStatus = 1) AND (Deman"& _ 
                "dStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(46).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(46).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(47) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(47).Connection = Me.Connection
            Me._commandCollection(47).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (Code = ?) AND (InProcessStatus IS NULL) AND (Verif"& _ 
                "icationStatus = 1) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sle"& _ 
                "epStatus = 0)"
            Me._commandCollection(47).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(47).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(47).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(47).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Code", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(48) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(48).Connection = Me.Connection
            Me._commandCollection(48).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (VerificationStatus = 1) AND (DemandStatus = 'Activ"& _ 
                "e')"
            Me._commandCollection(48).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(48).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(48).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(49) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(49).Connection = Me.Connection
            Me._commandCollection(49).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (VerificationStatus = 0) AND (DemandStatus = 'Activ"& _ 
                "e')"
            Me._commandCollection(49).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(49).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(49).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(50) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(50).Connection = Me.Connection
            Me._commandCollection(50).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PDDate BETWEEN ? AND ?) AND (VerificationStatus IS NULL) AND (DemandStatus = 'A"& _ 
                "ctive')"
            Me._commandCollection(50).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(50).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(50).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDDate1", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(51) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(51).Connection = Me.Connection
            Me._commandCollection(51).CommandText = "SELECT     MIN(PDDate) AS FirstDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"
            Me._commandCollection(51).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(52) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(52).Connection = Me.Connection
            Me._commandCollection(52).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(BookingStatus IS NULL OR BookingStatus = 1) AND (DemandStatus = 'Active') AND ("& _ 
                "PurchaseStatus IS NULL) AND (InProcessStatus = 1 OR InProcessStatus = 0) AND (GM"& _ 
                "No = ?) AND (SleepStatus IS NULL OR SleepStatus = 0) AND (CompStatus IS NULL OR "& _ 
                "CompStatus = 0)"
            Me._commandCollection(52).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(52).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(53) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(53).Connection = Me.Connection
            Me._commandCollection(53).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(GMNo = ?) AND (CompStatus IS NULL) AND (InProcessStatus = 1) AND (DemandStatus "& _ 
                "= 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (GMNo = ?) AND (Comp"& _ 
                "Status IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepS"& _ 
                "tatus = 0) AND (BookingStatus = 1)"
            Me._commandCollection(53).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(53).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(54) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(54).Connection = Me.Connection
            Me._commandCollection(54).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(InProcessStatus IS NULL) AND (VerificationStatus = 1) AND (DemandStatus = 'Acti"& _ 
                "ve') AND (GMNo = ?) AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(54).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(54).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(55) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(55).Connection = Me.Connection
            Me._commandCollection(55).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(InProcessStatus IS NULL) AND (VerificationStatus = 1) AND (DemandStatus = 'Acti"& _ 
                "ve') AND (GMNo = ?) AND (SleepStatus IS NOT NULL)"
            Me._commandCollection(55).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(55).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(56) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(56).Connection = Me.Connection
            Me._commandCollection(56).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(GMNo = ?) AND (PurchaseStatus IS NULL) AND (CompStatus = 1) AND (DemandStatus ="& _ 
                " 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (GMNo = ?) AND (Purch"& _ 
                "aseStatus IS NULL) AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR Sle"& _ 
                "epStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(56).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(56).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(57) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(57).Connection = Me.Connection
            Me._commandCollection(57).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(GMNo = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (CompStatus = 1) "& _ 
                "AND (DemandStatus = 'Active') AND (SleepStatus IS NULL OR SleepStatus = 0) OR (G"& _ 
                "MNo = ?) AND (POStatus IS NULL) AND (PurchaseStatus = 1) AND (DemandStatus = 'Ac"& _ 
                "tive') AND (SleepStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(57).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(57).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(58) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(58).Connection = Me.Connection
            Me._commandCollection(58).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PurchaseStatus = 1) AND (POStatus IS NULL) AND (DemandStatus = 'Active') AND (G"& _ 
                "MNo = ?) AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(58).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(58).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(59) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(59).Connection = Me.Connection
            Me._commandCollection(59).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(CompStatus = 1) AND (GMNo = ?) AND (DemandStatus = 'Active') AND (SleepStatus I"& _ 
                "S NULL OR SleepStatus = 0) OR (GMNo = ?) AND (DemandStatus = 'Active') AND (Slee"& _ 
                "pStatus IS NULL OR SleepStatus = 0) AND (PartialRecStatus = 1)"
            Me._commandCollection(59).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(59).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(60) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(60).Connection = Me.Connection
            Me._commandCollection(60).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(AfterPurchaseVStatus IS NULL) AND (PurchaseStatus = 1) AND (DemandStatus = 'Act"& _ 
                "ive') AND (GMNo = ?) AND (SleepStatus IS NULL OR SleepStatus = 0)"
            Me._commandCollection(60).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(60).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(61) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(61).Connection = Me.Connection
            Me._commandCollection(61).CommandText = "SELECT     OGStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (GMNo = ?) AND (PDID "& _ 
                "= ?)"
            Me._commandCollection(61).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(61).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(61).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(62) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(62).Connection = Me.Connection
            Me._commandCollection(62).CommandText = "SELECT     PendingStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (GMNo = ?) AND ("& _ 
                "PDID = ?)"
            Me._commandCollection(62).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(62).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("GMNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "GMNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(62).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(63).Connection = Me.Connection
            Me._commandCollection(63).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              POStatus = ?, PODate = ?, InProcessSta"& _ 
                "tus = ?, CompStatus = ?, CompDate = ?, AfterPurchaseVStatus = ?, AfterPurchaseVD"& _ 
                "ate = ?, PurchaseStatus = ?,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       PurchaseDate = ?, PurchaseA"& _ 
                "mt = ?, PurchaseDescription = ?, AmtEntryDate = ?, PartialRecStatus = ?, Receive"& _ 
                "Qty = ?, AvgUnitAmt = ?, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      VendorName = ?, OtherCharges = "& _ 
                "?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(63).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("POStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "POStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PODate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PODate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AfterPurchaseVDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AfterPurchaseVDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseDescription", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PurchaseDescription", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PartialRecStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PartialRecStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(3,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(63).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(64) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(64).Connection = Me.Connection
            Me._commandCollection(64).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              CompStatus = ?, CompDate = ?, InProces"& _ 
                "sStatus = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(64).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(64).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(64).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(64).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("InProcessStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "InProcessStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(64).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(65) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(65).Connection = Me.Connection
            Me._commandCollection(65).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              PurchaseAmt = ?, AmtEntryDate = ?, Avg"& _ 
                "UnitAmt = ?, ReceiveQty = ?, OtherCharges = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(65).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PurchaseAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "PurchaseAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AmtEntryDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AmtEntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AvgUnitAmt", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "AvgUnitAmt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OtherCharges", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "OtherCharges", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(65).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(66) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(66).Connection = Me.Connection
            Me._commandCollection(66).CommandText = "UPDATE    tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET              ReceiveQty = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID = ?)"
            Me._commandCollection(66).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(66).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReceiveQty", Global.System.Data.Odbc.OdbcType.Numeric, 0, Global.System.Data.ParameterDirection.Input, CType(18,Byte), CType(2,Byte), "ReceiveQty", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(66).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(67) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(67).Connection = Me.Connection
            Me._commandCollection(67).CommandText = "SELECT ActRecDate, ActStatus, AfterPurchaseVDate, AfterPurchaseVStatus, AmtEntryD"& _ 
                "ate, ApprovedBy, AvgUnitAmt, BillNo, BookingDueDate, BookingStatus, Code, CompDa"& _ 
                "te, CompStatus, CreationDate, DemandPeriority, DemandStatus, DemandType, DeptID,"& _ 
                " DocID, GMNo, IRNo, InProcessDate, InProcessStatus, IssuanceStatus, IssueDate, I"& _ 
                "ssueNarration, LastEditDate, LocalCustID, Narration, OGDate, OGStatus, OrderGive"& _ 
                "nDesc, OtherCharges, PDDate, PDID, PDQty, PODate, POStatus, PartialRecStatus, Pe"& _ 
                "ndingDate, PendingStatus, PurchaseAmt, PurchaseDate, PurchaseDescription, Purcha"& _ 
                "seStatus, RecIssueDate, ReceiveQty, RepStatus, ReplQty, SleepDate, SleepStatus, "& _ 
                "UOM, VendorName, VerificationDate, VerificationStatus FROM tbl_Pur_Demand WHERE "& _ 
                "(PurchaseStatus = 1) AND (POStatus IS NULL) AND (DemandStatus = 'Active') AND (S"& _ 
                "leepStatus IS NULL OR SleepStatus = 0) AND (VendorName LIKE ? + '%')"
            Me._commandCollection(67).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(67).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("VendorName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VendorName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(68) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(68).Connection = Me.Connection
            Me._commandCollection(68).CommandText = "SELECT     COUNT(PDID) AS MyCount"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Pur_Demand"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (PDID ="& _ 
                " ?)"
            Me._commandCollection(68).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(68).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PDID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy10(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy11(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy11(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy12(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy12(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy13(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy13(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy14(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy14(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy15(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy15(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy16(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy16(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy17(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy17(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy18(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy18(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy19(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(11)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy19(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal PDDate2 As Date, ByVal PDDate3 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(PDDate2,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(PDDate3,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy20(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal PDDate2 As Date, ByVal PDDate3 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(12)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(PDDate2,Date)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(PDDate3,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(13)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy20(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String, ByVal Code1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Code1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code1")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Code1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy21(ByVal Code As String, ByVal Code1 As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(14)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Code1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code1")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Code1,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy21(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String, ByVal PDDate2 As Date, ByVal PDDate3 As Date, ByVal Code1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(PDDate2,Date)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(PDDate3,Date)
            If (Code1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code1")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Code1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy22(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String, ByVal PDDate2 As Date, ByVal PDDate3 As Date, ByVal Code1 As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(15)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(PDDate2,Date)
            Me.Adapter.SelectCommand.Parameters(4).Value = CType(PDDate3,Date)
            If (Code1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code1")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Code1,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy22(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy23(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(16)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy23(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy24(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(17)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy24(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy25(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(18)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy25(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy26(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(19)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy26(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy27(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(20)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy27(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(21)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy28(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(21)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy28(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDID As Integer, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(22)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDID,Integer)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy29(ByVal PDID As Integer, ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(22)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDID,Integer)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy29(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(23)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy34(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(23)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy3(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(24)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy3(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(24)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy30(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(25)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy35(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(25)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy31(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(26)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy36(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(26)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy32(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(27)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy37(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(27)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy33(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(28)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy39(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(28)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy34(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(29)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy40(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(29)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy35(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(30)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy41(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(30)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy36(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(31)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy42(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(31)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy37(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(32)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy43(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(32)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy38(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(33)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy44(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(33)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy39(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(34)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy45(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(34)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy4(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(35)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy4(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(35)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy40(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(36)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy46(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(36)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(37)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy47(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(37)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy42(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(38)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy56(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(38)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy43(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(39)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy57(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(39)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy44(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(40)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy58(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(40)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy45(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(41)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy62(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(41)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy46(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(42)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy63(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(42)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy47(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(43)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy64(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(43)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy48(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal LocalCustID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(44)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy65(ByVal LocalCustID As Integer) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(44)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LocalCustID,Integer)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy49(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(45)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy66(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(45)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy5(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(46)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy5(ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(46)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy6(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(47)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy6(ByVal PDDate As Date, ByVal PDDate1 As Date, ByVal Code As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(47)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Code,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy7(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(48)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy8(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(48)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy8(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(49)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy9(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(49)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy9(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal PDDate As Date, ByVal PDDate1 As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(50)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy10(ByVal PDDate As Date, ByVal PDDate1 As Date) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(50)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PDDate,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(PDDate1,Date)
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOBookingStatus_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(52)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy48(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(52)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNODemandComp_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(53)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy49(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(53)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNODemandProcess_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(54)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy51(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(54)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNODemandProcess_FillBy45(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(55)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy59(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(55)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNODemandPurchase_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(56)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy50(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(56)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOPOS_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(57)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy52(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(57)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOPurchaseAmt_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(58)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy53(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(58)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOUndoChnges_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(59)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy54(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(59)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function GMNOVerificationBilling_FillBy41(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal GMNo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(60)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy55(ByVal GMNo As Global.System.Nullable(Of Integer)) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(60)
            If (GMNo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function VendorName_FillBy45(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable, ByVal VendorName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(67)
            If (VendorName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VendorName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy601(ByVal VendorName As String) As DSNewProcurement.tbl_Bill_DemandDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(67)
            If (VendorName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VendorName,String)
            End If
            Dim dataTable As DSNewProcurement.tbl_Bill_DemandDataTable = New DSNewProcurement.tbl_Bill_DemandDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSNewProcurement.tbl_Bill_DemandDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSNewProcurement) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Bill_Demand")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PDDate As Date,  _
                    ByVal Original_Code As String,  _
                    ByVal Original_PDQty As Decimal,  _
                    ByVal Original_UOM As String,  _
                    ByVal Original_Narration As String,  _
                    ByVal Original_POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CompDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_LocalCustID As Integer,  _
                    ByVal Original_VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DocID As String,  _
                    ByVal Original_AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseDescription As String,  _
                    ByVal Original_AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_DemandStatus As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OGDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OrderGivenDesc As String,  _
                    ByVal Original_DemandType As String,  _
                    ByVal Original_DemandPeriority As String,  _
                    ByVal Original_ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LastEditDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CreationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssueNarration As String,  _
                    ByVal Original_BillNo As String,  _
                    ByVal Original_ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RepStatus As String,  _
                    ByVal Original_DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PDID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PDDate,Date)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Code,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PDQty,Decimal)
            If (Original_UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UOM")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_UOM,String)
            End If
            If (Original_Narration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Narration,String)
            End If
            If (Original_POStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_POStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_PODate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PODate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_InProcessDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CompStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CompStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CompDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CompDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_LocalCustID,Integer)
            If (Original_VerificationStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_DocID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DocID")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DocID,String)
            End If
            If (Original_AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_PurchaseDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseAmt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_GMNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_GMNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_BookingStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingDueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_BookingDueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_PurchaseDescription,String)
            End If
            If (Original_AmtEntryDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_AmtEntryDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialRecStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_AvgUnitAmt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_VendorName,String)
            End If
            If (Original_DemandStatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DemandStatus")
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_DemandStatus,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_SleepStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_SleepDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_PendingStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_PendingDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_OGStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_OGStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_OGDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_OGDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_OrderGivenDesc Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_OrderGivenDesc,String)
            End If
            If (Original_DemandType Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_DemandType,String)
            End If
            If (Original_DemandPeriority Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_DemandPeriority,String)
            End If
            If (Original_ApprovedBy.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_ApprovedBy.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_IRNo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_IRNo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_LastEditDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_LastEditDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_CreationDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_CreationDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_IssuanceStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_IssueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_RecIssueDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_RecIssueDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueNarration Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_IssueNarration,String)
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_BillNo,String)
            End If
            If (Original_ReplQty.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_ReplQty.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_RepStatus Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_RepStatus,String)
            End If
            If (Original_DeptID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_DeptID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_ActStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_ActStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_ActRecDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_ActRecDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal UOM As String,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal OGDate As Global.System.Nullable(Of Date),  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As String,  _
                    ByVal ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal LastEditDate As Global.System.Nullable(Of Date),  _
                    ByVal CreationDate As Global.System.Nullable(Of Date),  _
                    ByVal IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal RepStatus As String,  _
                    ByVal DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PDDate,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Code,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(PDQty,Decimal)
            If (UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UOM")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UOM,String)
            End If
            If (Narration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Narration,String)
            End If
            If (POStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(POStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PODate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (InProcessDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(InProcessDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CompStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CompDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(LocalCustID,Integer)
            If (VerificationStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DocID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DocID")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DocID,String)
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PurchaseDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GMNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BookingStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(BookingStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BookingDueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(BookingDueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(AmtEntryDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(VendorName,String)
            End If
            If (DemandStatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DemandStatus")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DemandStatus,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SleepStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(SleepStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SleepDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(SleepDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PendingStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PendingStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PendingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PendingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (OGStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(OGStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (OGDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(OGDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (OrderGivenDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(OrderGivenDesc,String)
            End If
            If (DemandType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(DemandType,String)
            End If
            If (DemandPeriority Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(DemandPeriority,String)
            End If
            If (ApprovedBy.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ApprovedBy.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (IRNo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(IRNo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LastEditDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(LastEditDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CreationDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CreationDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (IssuanceStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IssueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(IssueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (RecIssueDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(RecIssueDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IssueNarration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(IssueNarration,String)
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(BillNo,String)
            End If
            If (ReplQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(ReplQty.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (RepStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(RepStatus,String)
            End If
            If (DeptID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DeptID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ActStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(ActStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (ActRecDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(ActRecDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PDDate As Date,  _
                    ByVal Code As String,  _
                    ByVal PDQty As Decimal,  _
                    ByVal UOM As String,  _
                    ByVal Narration As String,  _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal LocalCustID As Integer,  _
                    ByVal VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal DocID As String,  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal DemandStatus As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal OGDate As Global.System.Nullable(Of Date),  _
                    ByVal OrderGivenDesc As String,  _
                    ByVal DemandType As String,  _
                    ByVal DemandPeriority As String,  _
                    ByVal ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal LastEditDate As Global.System.Nullable(Of Date),  _
                    ByVal CreationDate As Global.System.Nullable(Of Date),  _
                    ByVal IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal IssueNarration As String,  _
                    ByVal BillNo As String,  _
                    ByVal ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal RepStatus As String,  _
                    ByVal DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ActRecDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PDID As Integer,  _
                    ByVal Original_PDDate As Date,  _
                    ByVal Original_Code As String,  _
                    ByVal Original_PDQty As Decimal,  _
                    ByVal Original_UOM As String,  _
                    ByVal Original_Narration As String,  _
                    ByVal Original_POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PODate As Global.System.Nullable(Of Date),  _
                    ByVal Original_InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_InProcessDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CompDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_LocalCustID As Integer,  _
                    ByVal Original_VerificationStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VerificationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DocID As String,  _
                    ByVal Original_AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_GMNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BookingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BookingDueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PurchaseDescription As String,  _
                    ByVal Original_AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VendorName As String,  _
                    ByVal Original_DemandStatus As String,  _
                    ByVal Original_OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SleepStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SleepDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_PendingStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PendingDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OGStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OGDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_OrderGivenDesc As String,  _
                    ByVal Original_DemandType As String,  _
                    ByVal Original_DemandPeriority As String,  _
                    ByVal Original_ApprovedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_IRNo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LastEditDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_CreationDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssuanceStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_RecIssueDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_IssueNarration As String,  _
                    ByVal Original_BillNo As String,  _
                    ByVal Original_ReplQty As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RepStatus As String,  _
                    ByVal Original_DeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ActStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ActRecDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PDDate,Date)
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PDQty,Decimal)
            If (UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("UOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UOM,String)
            End If
            If (Narration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Narration,String)
            End If
            If (POStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(POStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (InProcessDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(InProcessDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CompStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CompDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(LocalCustID,Integer)
            If (VerificationStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (DocID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DocID")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DocID,String)
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PurchaseDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GMNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GMNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BookingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(BookingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BookingDueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(BookingDueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(AmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(VendorName,String)
            End If
            If (DemandStatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DemandStatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DemandStatus,String)
            End If
            If (OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (SleepStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(SleepStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (SleepDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(SleepDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (PendingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(PendingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PendingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(PendingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (OGStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(OGStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (OGDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(OGDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (OrderGivenDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(OrderGivenDesc,String)
            End If
            If (DemandType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(DemandType,String)
            End If
            If (DemandPeriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(DemandPeriority,String)
            End If
            If (ApprovedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ApprovedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (IRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(IRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (LastEditDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(LastEditDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CreationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CreationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (IssuanceStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(IssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (RecIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(RecIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IssueNarration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(IssueNarration,String)
            End If
            If (BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(BillNo,String)
            End If
            If (ReplQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(ReplQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (RepStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(RepStatus,String)
            End If
            If (DeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(DeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (ActStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(ActStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (ActRecDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(ActRecDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_PDID,Integer)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_PDDate,Date)
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_Code,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_PDQty,Decimal)
            If (Original_UOM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_UOM")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_UOM,String)
            End If
            If (Original_Narration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_Narration,String)
            End If
            If (Original_POStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_POStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_PODate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_PODate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_InProcessStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_InProcessDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_InProcessDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CompStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CompStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_CompDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_CompDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_LocalCustID,Integer)
            If (Original_VerificationStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_VerificationStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_VerificationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_VerificationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_DocID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DocID")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_DocID,String)
            End If
            If (Original_AfterPurchaseVStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_AfterPurchaseVStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_AfterPurchaseVDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_AfterPurchaseVDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_PurchaseStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_PurchaseDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_PurchaseAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_GMNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_GMNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_BookingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_BookingDueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_BookingDueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_PurchaseDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_PurchaseDescription,String)
            End If
            If (Original_AmtEntryDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_AmtEntryDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_PartialRecStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_PartialRecStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_ReceiveQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_ReceiveQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_AvgUnitAmt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_AvgUnitAmt.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_VendorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_VendorName,String)
            End If
            If (Original_DemandStatus Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DemandStatus")
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_DemandStatus,String)
            End If
            If (Original_OtherCharges.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_OtherCharges.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_SleepStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_SleepDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_SleepDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_PendingStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_PendingDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_PendingDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_OGStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_OGStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_OGDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_OGDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_OrderGivenDesc Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_OrderGivenDesc,String)
            End If
            If (Original_DemandType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_DemandType,String)
            End If
            If (Original_DemandPeriority Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_DemandPeriority,String)
            End If
            If (Original_ApprovedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_ApprovedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_IRNo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_IRNo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_LastEditDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_LastEditDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_CreationDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_CreationDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_IssuanceStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_IssuanceStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_IssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_RecIssueDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_RecIssueDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_IssueNarration Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_IssueNarration,String)
            End If
            If (Original_BillNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_BillNo,String)
            End If
            If (Original_ReplQty.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_ReplQty.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_RepStatus Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_RepStatus,String)
            End If
            If (Original_DeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_DeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Original_ActStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_ActStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (Original_ActRecDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_ActRecDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function FirstDate() As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(51)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function OGStatus(ByVal GMNo As Global.System.Nullable(Of Integer), ByVal PDID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(61)
            If (GMNo.HasValue = true) Then
                command.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PendingStatus(ByVal GMNo As Global.System.Nullable(Of Integer), ByVal PDID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(62)
            If (GMNo.HasValue = true) Then
                command.Parameters(0).Value = CType(GMNo.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function ResetDemandValues( _
                    ByVal POStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PODate As Global.System.Nullable(Of Date),  _
                    ByVal InProcessStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal CompDate As Global.System.Nullable(Of Date),  _
                    ByVal AfterPurchaseVStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal AfterPurchaseVDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PurchaseDate As Global.System.Nullable(Of Date),  _
                    ByVal PurchaseAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal PurchaseDescription As String,  _
                    ByVal AmtEntryDate As Global.System.Nullable(Of Date),  _
                    ByVal PartialRecStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReceiveQty As Global.System.Nullable(Of Decimal),  _
                    ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal VendorName As String,  _
                    ByVal OtherCharges As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(63)
            If (POStatus.HasValue = true) Then
                command.Parameters(0).Value = CType(POStatus.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (PODate.HasValue = true) Then
                command.Parameters(1).Value = CType(PODate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(InProcessStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CompStatus.HasValue = true) Then
                command.Parameters(3).Value = CType(CompStatus.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                command.Parameters(4).Value = CType(CompDate.Value,Date)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVStatus.HasValue = true) Then
                command.Parameters(5).Value = CType(AfterPurchaseVStatus.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AfterPurchaseVDate.HasValue = true) Then
                command.Parameters(6).Value = CType(AfterPurchaseVDate.Value,Date)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PurchaseStatus.HasValue = true) Then
                command.Parameters(7).Value = CType(PurchaseStatus.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDate.HasValue = true) Then
                command.Parameters(8).Value = CType(PurchaseDate.Value,Date)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PurchaseAmt.HasValue = true) Then
                command.Parameters(9).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PurchaseDescription Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(PurchaseDescription,String)
            End If
            If (AmtEntryDate.HasValue = true) Then
                command.Parameters(11).Value = CType(AmtEntryDate.Value,Date)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PartialRecStatus.HasValue = true) Then
                command.Parameters(12).Value = CType(PartialRecStatus.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(13).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                command.Parameters(14).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (VendorName Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(VendorName,String)
            End If
            If (OtherCharges.HasValue = true) Then
                command.Parameters(16).Value = CType(OtherCharges.Value,Decimal)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            command.Parameters(17).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateCompStatus(ByVal CompStatus As Global.System.Nullable(Of Boolean), ByVal CompDate As Global.System.Nullable(Of Date), ByVal InProcessStatus As Global.System.Nullable(Of Boolean), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(64)
            If (CompStatus.HasValue = true) Then
                command.Parameters(0).Value = CType(CompStatus.Value,Boolean)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CompDate.HasValue = true) Then
                command.Parameters(1).Value = CType(CompDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (InProcessStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(InProcessStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            command.Parameters(3).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePurchaseAmt(ByVal PurchaseAmt As Global.System.Nullable(Of Decimal), ByVal AmtEntryDate As Global.System.Nullable(Of Date), ByVal AvgUnitAmt As Global.System.Nullable(Of Decimal), ByVal ReceiveQty As Global.System.Nullable(Of Decimal), ByVal OtherCharges As Global.System.Nullable(Of Decimal), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(65)
            If (PurchaseAmt.HasValue = true) Then
                command.Parameters(0).Value = CType(PurchaseAmt.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (AmtEntryDate.HasValue = true) Then
                command.Parameters(1).Value = CType(AmtEntryDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AvgUnitAmt.HasValue = true) Then
                command.Parameters(2).Value = CType(AvgUnitAmt.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(3).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (OtherCharges.HasValue = true) Then
                command.Parameters(4).Value = CType(OtherCharges.Value,Decimal)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            command.Parameters(5).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateReceivingQty(ByVal ReceiveQty As Global.System.Nullable(Of Decimal), ByVal Original_PDID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(66)
            If (ReceiveQty.HasValue = true) Then
                command.Parameters(0).Value = CType(ReceiveQty.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(Original_PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function VerifyPDID(ByVal PDID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(68)
            command.Parameters(0).Value = CType(PDID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tbl_Pur_Demand_NewTableAdapter As tbl_Pur_Demand_NewTableAdapter
        
        Private _tbl_Pur_PartialReceiving_NewTableAdapter As tbl_Pur_PartialReceiving_NewTableAdapter
        
        Private _tbl_Inv_DeptTableAdapter As tbl_Inv_DeptTableAdapter
        
        Private _tbl_Dept_InfoTableAdapter As tbl_Dept_InfoTableAdapter
        
        Private _tbl_Sec_MiddleTableAdapter As tbl_Sec_MiddleTableAdapter
        
        Private _tbl_Bill_DemandTableAdapter As tbl_Bill_DemandTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Pur_Demand_NewTableAdapter() As tbl_Pur_Demand_NewTableAdapter
            Get
                Return Me._tbl_Pur_Demand_NewTableAdapter
            End Get
            Set
                Me._tbl_Pur_Demand_NewTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Pur_PartialReceiving_NewTableAdapter() As tbl_Pur_PartialReceiving_NewTableAdapter
            Get
                Return Me._tbl_Pur_PartialReceiving_NewTableAdapter
            End Get
            Set
                Me._tbl_Pur_PartialReceiving_NewTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Inv_DeptTableAdapter() As tbl_Inv_DeptTableAdapter
            Get
                Return Me._tbl_Inv_DeptTableAdapter
            End Get
            Set
                Me._tbl_Inv_DeptTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Dept_InfoTableAdapter() As tbl_Dept_InfoTableAdapter
            Get
                Return Me._tbl_Dept_InfoTableAdapter
            End Get
            Set
                Me._tbl_Dept_InfoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Sec_MiddleTableAdapter() As tbl_Sec_MiddleTableAdapter
            Get
                Return Me._tbl_Sec_MiddleTableAdapter
            End Get
            Set
                Me._tbl_Sec_MiddleTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Bill_DemandTableAdapter() As tbl_Bill_DemandTableAdapter
            Get
                Return Me._tbl_Bill_DemandTableAdapter
            End Get
            Set
                Me._tbl_Bill_DemandTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Pur_Demand_NewTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Pur_Demand_NewTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Inv_DeptTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Inv_DeptTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Dept_InfoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Dept_InfoTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Sec_MiddleTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Sec_MiddleTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Bill_DemandTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Bill_DemandTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSNewProcurement, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_Demand_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Pur_Demand_NewTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_PartialReceiving_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Pur_PartialReceiving_NewTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Inv_DeptTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Dept_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Dept_InfoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Sec_Middle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Sec_MiddleTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Bill_Demand.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Bill_DemandTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSNewProcurement, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_Demand_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Pur_Demand_NewTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_PartialReceiving_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Pur_PartialReceiving_NewTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Inv_DeptTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Dept_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Dept_InfoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Sec_Middle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Sec_MiddleTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Bill_Demand.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Bill_DemandTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSNewProcurement, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Bill_Demand.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Bill_DemandTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Sec_Middle.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Sec_MiddleTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Dept_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Dept_InfoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Inv_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Inv_DeptTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_PartialReceiving_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Pur_PartialReceiving_NewTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Pur_Demand_New.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Pur_Demand_NewTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSNewProcurement) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Pur_Demand_NewTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Inv_DeptTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Dept_InfoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Sec_MiddleTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Bill_DemandTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Pur_Demand_NewTableAdapter, Me._tbl_Pur_Demand_NewTableAdapter.Connection)
                    Me._tbl_Pur_Demand_NewTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pur_Demand_NewTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Pur_Demand_NewTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Pur_Demand_NewTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Pur_Demand_NewTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Pur_PartialReceiving_NewTableAdapter, Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection)
                    Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pur_PartialReceiving_NewTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Pur_PartialReceiving_NewTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Pur_PartialReceiving_NewTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Pur_PartialReceiving_NewTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Inv_DeptTableAdapter, Me._tbl_Inv_DeptTableAdapter.Connection)
                    Me._tbl_Inv_DeptTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Inv_DeptTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Inv_DeptTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Inv_DeptTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Inv_DeptTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Dept_InfoTableAdapter, Me._tbl_Dept_InfoTableAdapter.Connection)
                    Me._tbl_Dept_InfoTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Dept_InfoTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Dept_InfoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Dept_InfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Dept_InfoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Sec_MiddleTableAdapter, Me._tbl_Sec_MiddleTableAdapter.Connection)
                    Me._tbl_Sec_MiddleTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Sec_MiddleTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Sec_MiddleTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Sec_MiddleTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Sec_MiddleTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Bill_DemandTableAdapter, Me._tbl_Bill_DemandTableAdapter.Connection)
                    Me._tbl_Bill_DemandTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Bill_DemandTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Bill_DemandTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Bill_DemandTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Bill_DemandTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tbl_Pur_Demand_NewTableAdapter) Is Nothing) Then
                    Me._tbl_Pur_Demand_NewTableAdapter.Connection = CType(revertConnections(Me._tbl_Pur_Demand_NewTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pur_Demand_NewTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Pur_PartialReceiving_NewTableAdapter) Is Nothing) Then
                    Me._tbl_Pur_PartialReceiving_NewTableAdapter.Connection = CType(revertConnections(Me._tbl_Pur_PartialReceiving_NewTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Pur_PartialReceiving_NewTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Inv_DeptTableAdapter) Is Nothing) Then
                    Me._tbl_Inv_DeptTableAdapter.Connection = CType(revertConnections(Me._tbl_Inv_DeptTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Inv_DeptTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Dept_InfoTableAdapter) Is Nothing) Then
                    Me._tbl_Dept_InfoTableAdapter.Connection = CType(revertConnections(Me._tbl_Dept_InfoTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Dept_InfoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Sec_MiddleTableAdapter) Is Nothing) Then
                    Me._tbl_Sec_MiddleTableAdapter.Connection = CType(revertConnections(Me._tbl_Sec_MiddleTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Sec_MiddleTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Bill_DemandTableAdapter) Is Nothing) Then
                    Me._tbl_Bill_DemandTableAdapter.Connection = CType(revertConnections(Me._tbl_Bill_DemandTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Bill_DemandTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
