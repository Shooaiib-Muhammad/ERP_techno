'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSRptGatePasses"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSRptGatePasses
    Inherits Global.System.Data.DataSet
    
    Private tabletbl_Inv_Tran_Out As tbl_Inv_Tran_OutDataTable
    
    Private tabletbl_Inv_Tran_Out1 As tbl_Inv_Tran_Out1DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_Inv_Tran_Out")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_OutDataTable(ds.Tables("tbl_Inv_Tran_Out")))
            End If
            If (Not (ds.Tables("tbl_Inv_Tran_Out1")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_Out1DataTable(ds.Tables("tbl_Inv_Tran_Out1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Inv_Tran_Out() As tbl_Inv_Tran_OutDataTable
        Get
            Return Me.tabletbl_Inv_Tran_Out
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Inv_Tran_Out1() As tbl_Inv_Tran_Out1DataTable
        Get
            Return Me.tabletbl_Inv_Tran_Out1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSRptGatePasses = CType(MyBase.Clone,DSRptGatePasses)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tbl_Inv_Tran_Out")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_OutDataTable(ds.Tables("tbl_Inv_Tran_Out")))
            End If
            If (Not (ds.Tables("tbl_Inv_Tran_Out1")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Inv_Tran_Out1DataTable(ds.Tables("tbl_Inv_Tran_Out1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletbl_Inv_Tran_Out = CType(MyBase.Tables("tbl_Inv_Tran_Out"),tbl_Inv_Tran_OutDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Inv_Tran_Out) Is Nothing) Then
                Me.tabletbl_Inv_Tran_Out.InitVars
            End If
        End If
        Me.tabletbl_Inv_Tran_Out1 = CType(MyBase.Tables("tbl_Inv_Tran_Out1"),tbl_Inv_Tran_Out1DataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Inv_Tran_Out1) Is Nothing) Then
                Me.tabletbl_Inv_Tran_Out1.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSRptGatePasses"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSRptGatePasses.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletbl_Inv_Tran_Out = New tbl_Inv_Tran_OutDataTable()
        MyBase.Tables.Add(Me.tabletbl_Inv_Tran_Out)
        Me.tabletbl_Inv_Tran_Out1 = New tbl_Inv_Tran_Out1DataTable()
        MyBase.Tables.Add(Me.tabletbl_Inv_Tran_Out1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetbl_Inv_Tran_Out() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetbl_Inv_Tran_Out1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSRptGatePasses = New DSRptGatePasses()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tbl_Inv_Tran_OutRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Inv_Tran_OutRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tbl_Inv_Tran_Out1RowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Inv_Tran_Out1RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Inv_Tran_OutDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Inv_Tran_OutRow)
        
        Private columnDayNo As Global.System.Data.DataColumn
        
        Private columnTranOutID As Global.System.Data.DataColumn
        
        Private columnSID As Global.System.Data.DataColumn
        
        Private columnSDNo As Global.System.Data.DataColumn
        
        Private columnTranType As Global.System.Data.DataColumn
        
        Private columnTranDocNo As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnCurrency As Global.System.Data.DataColumn
        
        Private columnPPU As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnPOH As Global.System.Data.DataColumn
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPODNo As Global.System.Data.DataColumn
        
        Private columnReqID As Global.System.Data.DataColumn
        
        Private columnDemandID As Global.System.Data.DataColumn
        
        Private columnLocalCustID As Global.System.Data.DataColumn
        
        Private columnCompanyID As Global.System.Data.DataColumn
        
        Private columnExtCustID As Global.System.Data.DataColumn
        
        Private columnSupplierID As Global.System.Data.DataColumn
        
        Private columnNaration As Global.System.Data.DataColumn
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnTranInID As Global.System.Data.DataColumn
        
        Private columnLastEditDate As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        Private columnDateName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Inv_Tran_Out"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DayNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDayNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranOutIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranOutID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranDocNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranDocNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReqIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReqID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DemandIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocalCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupplierIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranInIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranInID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastEditDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastEditDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Inv_Tran_OutRow
            Get
                Return CType(Me.Rows(index),tbl_Inv_Tran_OutRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_OutRowChanging As tbl_Inv_Tran_OutRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_OutRowChanged As tbl_Inv_Tran_OutRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_OutRowDeleting As tbl_Inv_Tran_OutRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_OutRowDeleted As tbl_Inv_Tran_OutRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addtbl_Inv_Tran_OutRow(ByVal row As tbl_Inv_Tran_OutRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addtbl_Inv_Tran_OutRow( _
                    ByVal DayNo As Integer,  _
                    ByVal SID As Integer,  _
                    ByVal SDNo As Integer,  _
                    ByVal TranType As String,  _
                    ByVal TranDocNo As String,  _
                    ByVal Code As String,  _
                    ByVal Currency As String,  _
                    ByVal PPU As Decimal,  _
                    ByVal Qty As Decimal,  _
                    ByVal POH As Integer,  _
                    ByVal PO As Integer,  _
                    ByVal PODNo As Integer,  _
                    ByVal ReqID As Integer,  _
                    ByVal DemandID As Integer,  _
                    ByVal LocalCustID As Integer,  _
                    ByVal CompanyID As Integer,  _
                    ByVal ExtCustID As Integer,  _
                    ByVal SupplierID As Integer,  _
                    ByVal Naration As String,  _
                    ByVal UserID As Integer,  _
                    ByVal UOM As String,  _
                    ByVal TranInID As Integer,  _
                    ByVal LastEditDate As Date,  _
                    ByVal CreationDate As Date,  _
                    ByVal DateName As Date) As tbl_Inv_Tran_OutRow
            Dim rowtbl_Inv_Tran_OutRow As tbl_Inv_Tran_OutRow = CType(Me.NewRow,tbl_Inv_Tran_OutRow)
            Dim columnValuesArray() As Object = New Object() {DayNo, Nothing, SID, SDNo, TranType, TranDocNo, Code, Currency, PPU, Qty, POH, PO, PODNo, ReqID, DemandID, LocalCustID, CompanyID, ExtCustID, SupplierID, Naration, UserID, UOM, TranInID, LastEditDate, CreationDate, DateName}
            rowtbl_Inv_Tran_OutRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Inv_Tran_OutRow)
            Return rowtbl_Inv_Tran_OutRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTranOutID(ByVal TranOutID As Integer) As tbl_Inv_Tran_OutRow
            Return CType(Me.Rows.Find(New Object() {TranOutID}),tbl_Inv_Tran_OutRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Inv_Tran_OutDataTable = CType(MyBase.Clone,tbl_Inv_Tran_OutDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Inv_Tran_OutDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDayNo = MyBase.Columns("DayNo")
            Me.columnTranOutID = MyBase.Columns("TranOutID")
            Me.columnSID = MyBase.Columns("SID")
            Me.columnSDNo = MyBase.Columns("SDNo")
            Me.columnTranType = MyBase.Columns("TranType")
            Me.columnTranDocNo = MyBase.Columns("TranDocNo")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnCurrency = MyBase.Columns("Currency")
            Me.columnPPU = MyBase.Columns("PPU")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnPOH = MyBase.Columns("POH")
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPODNo = MyBase.Columns("PODNo")
            Me.columnReqID = MyBase.Columns("ReqID")
            Me.columnDemandID = MyBase.Columns("DemandID")
            Me.columnLocalCustID = MyBase.Columns("LocalCustID")
            Me.columnCompanyID = MyBase.Columns("CompanyID")
            Me.columnExtCustID = MyBase.Columns("ExtCustID")
            Me.columnSupplierID = MyBase.Columns("SupplierID")
            Me.columnNaration = MyBase.Columns("Naration")
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnTranInID = MyBase.Columns("TranInID")
            Me.columnLastEditDate = MyBase.Columns("LastEditDate")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
            Me.columnDateName = MyBase.Columns("DateName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDayNo = New Global.System.Data.DataColumn("DayNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDayNo)
            Me.columnTranOutID = New Global.System.Data.DataColumn("TranOutID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranOutID)
            Me.columnSID = New Global.System.Data.DataColumn("SID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSID)
            Me.columnSDNo = New Global.System.Data.DataColumn("SDNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDNo)
            Me.columnTranType = New Global.System.Data.DataColumn("TranType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranType)
            Me.columnTranDocNo = New Global.System.Data.DataColumn("TranDocNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranDocNo)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnCurrency = New Global.System.Data.DataColumn("Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency)
            Me.columnPPU = New Global.System.Data.DataColumn("PPU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPU)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnPOH = New Global.System.Data.DataColumn("POH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOH)
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPODNo = New Global.System.Data.DataColumn("PODNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODNo)
            Me.columnReqID = New Global.System.Data.DataColumn("ReqID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReqID)
            Me.columnDemandID = New Global.System.Data.DataColumn("DemandID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandID)
            Me.columnLocalCustID = New Global.System.Data.DataColumn("LocalCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalCustID)
            Me.columnCompanyID = New Global.System.Data.DataColumn("CompanyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyID)
            Me.columnExtCustID = New Global.System.Data.DataColumn("ExtCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtCustID)
            Me.columnSupplierID = New Global.System.Data.DataColumn("SupplierID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierID)
            Me.columnNaration = New Global.System.Data.DataColumn("Naration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNaration)
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnTranInID = New Global.System.Data.DataColumn("TranInID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranInID)
            Me.columnLastEditDate = New Global.System.Data.DataColumn("LastEditDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastEditDate)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnDateName = New Global.System.Data.DataColumn("DateName", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTranOutID}, true))
            Me.columnTranOutID.AutoIncrement = true
            Me.columnTranOutID.AutoIncrementSeed = -1
            Me.columnTranOutID.AutoIncrementStep = -1
            Me.columnTranOutID.AllowDBNull = false
            Me.columnTranOutID.ReadOnly = true
            Me.columnTranOutID.Unique = true
            Me.columnTranType.MaxLength = 50
            Me.columnTranDocNo.MaxLength = 50
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 15
            Me.columnCurrency.MaxLength = 10
            Me.columnNaration.MaxLength = 50
            Me.columnUOM.MaxLength = 50
            Me.columnDateName.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newtbl_Inv_Tran_OutRow() As tbl_Inv_Tran_OutRow
            Return CType(Me.NewRow,tbl_Inv_Tran_OutRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Inv_Tran_OutRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Inv_Tran_OutRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Inv_Tran_OutRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_OutRowChanged(Me, New tbl_Inv_Tran_OutRowChangeEvent(CType(e.Row,tbl_Inv_Tran_OutRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Inv_Tran_OutRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_OutRowChanging(Me, New tbl_Inv_Tran_OutRowChangeEvent(CType(e.Row,tbl_Inv_Tran_OutRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Inv_Tran_OutRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_OutRowDeleted(Me, New tbl_Inv_Tran_OutRowChangeEvent(CType(e.Row,tbl_Inv_Tran_OutRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Inv_Tran_OutRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_OutRowDeleting(Me, New tbl_Inv_Tran_OutRowChangeEvent(CType(e.Row,tbl_Inv_Tran_OutRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removetbl_Inv_Tran_OutRow(ByVal row As tbl_Inv_Tran_OutRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSRptGatePasses = New DSRptGatePasses()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Inv_Tran_OutDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Inv_Tran_Out1DataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Inv_Tran_Out1Row)
        
        Private columnDayNo As Global.System.Data.DataColumn
        
        Private columnTranOutID As Global.System.Data.DataColumn
        
        Private columnSID As Global.System.Data.DataColumn
        
        Private columnSDNo As Global.System.Data.DataColumn
        
        Private columnTranType As Global.System.Data.DataColumn
        
        Private columnTranDocNo As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnCurrency As Global.System.Data.DataColumn
        
        Private columnPPU As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnPOH As Global.System.Data.DataColumn
        
        Private columnPO As Global.System.Data.DataColumn
        
        Private columnPODNo As Global.System.Data.DataColumn
        
        Private columnReqID As Global.System.Data.DataColumn
        
        Private columnDemandID As Global.System.Data.DataColumn
        
        Private columnLocalCustID As Global.System.Data.DataColumn
        
        Private columnCompanyID As Global.System.Data.DataColumn
        
        Private columnExtCustID As Global.System.Data.DataColumn
        
        Private columnSupplierID As Global.System.Data.DataColumn
        
        Private columnNaration As Global.System.Data.DataColumn
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnUOM As Global.System.Data.DataColumn
        
        Private columnTranInID As Global.System.Data.DataColumn
        
        Private columnLastEditDate As Global.System.Data.DataColumn
        
        Private columnCreationDate As Global.System.Data.DataColumn
        
        Private columnDateName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Inv_Tran_Out1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DayNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDayNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranOutIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranOutID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranDocNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranDocNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurrencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PODNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPODNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReqIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReqID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DemandIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDemandID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocalCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocalCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtCustIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtCustID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupplierIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplierID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NarationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNaration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UOMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUOM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TranInIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTranInID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastEditDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastEditDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Inv_Tran_Out1Row
            Get
                Return CType(Me.Rows(index),tbl_Inv_Tran_Out1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_Out1RowChanging As tbl_Inv_Tran_Out1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_Out1RowChanged As tbl_Inv_Tran_Out1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_Out1RowDeleting As tbl_Inv_Tran_Out1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event tbl_Inv_Tran_Out1RowDeleted As tbl_Inv_Tran_Out1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addtbl_Inv_Tran_Out1Row(ByVal row As tbl_Inv_Tran_Out1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addtbl_Inv_Tran_Out1Row( _
                    ByVal DayNo As Integer,  _
                    ByVal SID As Integer,  _
                    ByVal SDNo As Integer,  _
                    ByVal TranType As String,  _
                    ByVal TranDocNo As String,  _
                    ByVal Code As String,  _
                    ByVal Currency As String,  _
                    ByVal PPU As Decimal,  _
                    ByVal Qty As Decimal,  _
                    ByVal POH As Integer,  _
                    ByVal PO As Integer,  _
                    ByVal PODNo As Integer,  _
                    ByVal ReqID As Integer,  _
                    ByVal DemandID As Integer,  _
                    ByVal LocalCustID As Integer,  _
                    ByVal CompanyID As Integer,  _
                    ByVal ExtCustID As Integer,  _
                    ByVal SupplierID As Integer,  _
                    ByVal Naration As String,  _
                    ByVal UserID As Integer,  _
                    ByVal UOM As String,  _
                    ByVal TranInID As Integer,  _
                    ByVal LastEditDate As Date,  _
                    ByVal CreationDate As Date,  _
                    ByVal DateName As Date) As tbl_Inv_Tran_Out1Row
            Dim rowtbl_Inv_Tran_Out1Row As tbl_Inv_Tran_Out1Row = CType(Me.NewRow,tbl_Inv_Tran_Out1Row)
            Dim columnValuesArray() As Object = New Object() {DayNo, Nothing, SID, SDNo, TranType, TranDocNo, Code, Currency, PPU, Qty, POH, PO, PODNo, ReqID, DemandID, LocalCustID, CompanyID, ExtCustID, SupplierID, Naration, UserID, UOM, TranInID, LastEditDate, CreationDate, DateName}
            rowtbl_Inv_Tran_Out1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Inv_Tran_Out1Row)
            Return rowtbl_Inv_Tran_Out1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByTranOutID(ByVal TranOutID As Integer) As tbl_Inv_Tran_Out1Row
            Return CType(Me.Rows.Find(New Object() {TranOutID}),tbl_Inv_Tran_Out1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Inv_Tran_Out1DataTable = CType(MyBase.Clone,tbl_Inv_Tran_Out1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Inv_Tran_Out1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDayNo = MyBase.Columns("DayNo")
            Me.columnTranOutID = MyBase.Columns("TranOutID")
            Me.columnSID = MyBase.Columns("SID")
            Me.columnSDNo = MyBase.Columns("SDNo")
            Me.columnTranType = MyBase.Columns("TranType")
            Me.columnTranDocNo = MyBase.Columns("TranDocNo")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnCurrency = MyBase.Columns("Currency")
            Me.columnPPU = MyBase.Columns("PPU")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnPOH = MyBase.Columns("POH")
            Me.columnPO = MyBase.Columns("PO")
            Me.columnPODNo = MyBase.Columns("PODNo")
            Me.columnReqID = MyBase.Columns("ReqID")
            Me.columnDemandID = MyBase.Columns("DemandID")
            Me.columnLocalCustID = MyBase.Columns("LocalCustID")
            Me.columnCompanyID = MyBase.Columns("CompanyID")
            Me.columnExtCustID = MyBase.Columns("ExtCustID")
            Me.columnSupplierID = MyBase.Columns("SupplierID")
            Me.columnNaration = MyBase.Columns("Naration")
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnUOM = MyBase.Columns("UOM")
            Me.columnTranInID = MyBase.Columns("TranInID")
            Me.columnLastEditDate = MyBase.Columns("LastEditDate")
            Me.columnCreationDate = MyBase.Columns("CreationDate")
            Me.columnDateName = MyBase.Columns("DateName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDayNo = New Global.System.Data.DataColumn("DayNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDayNo)
            Me.columnTranOutID = New Global.System.Data.DataColumn("TranOutID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranOutID)
            Me.columnSID = New Global.System.Data.DataColumn("SID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSID)
            Me.columnSDNo = New Global.System.Data.DataColumn("SDNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDNo)
            Me.columnTranType = New Global.System.Data.DataColumn("TranType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranType)
            Me.columnTranDocNo = New Global.System.Data.DataColumn("TranDocNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranDocNo)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnCurrency = New Global.System.Data.DataColumn("Currency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrency)
            Me.columnPPU = New Global.System.Data.DataColumn("PPU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPU)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnPOH = New Global.System.Data.DataColumn("POH", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOH)
            Me.columnPO = New Global.System.Data.DataColumn("PO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPO)
            Me.columnPODNo = New Global.System.Data.DataColumn("PODNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPODNo)
            Me.columnReqID = New Global.System.Data.DataColumn("ReqID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReqID)
            Me.columnDemandID = New Global.System.Data.DataColumn("DemandID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDemandID)
            Me.columnLocalCustID = New Global.System.Data.DataColumn("LocalCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocalCustID)
            Me.columnCompanyID = New Global.System.Data.DataColumn("CompanyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyID)
            Me.columnExtCustID = New Global.System.Data.DataColumn("ExtCustID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtCustID)
            Me.columnSupplierID = New Global.System.Data.DataColumn("SupplierID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplierID)
            Me.columnNaration = New Global.System.Data.DataColumn("Naration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNaration)
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnUOM = New Global.System.Data.DataColumn("UOM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUOM)
            Me.columnTranInID = New Global.System.Data.DataColumn("TranInID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTranInID)
            Me.columnLastEditDate = New Global.System.Data.DataColumn("LastEditDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastEditDate)
            Me.columnCreationDate = New Global.System.Data.DataColumn("CreationDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationDate)
            Me.columnDateName = New Global.System.Data.DataColumn("DateName", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTranOutID}, true))
            Me.columnTranOutID.AutoIncrement = true
            Me.columnTranOutID.AutoIncrementSeed = -1
            Me.columnTranOutID.AutoIncrementStep = -1
            Me.columnTranOutID.AllowDBNull = false
            Me.columnTranOutID.ReadOnly = true
            Me.columnTranOutID.Unique = true
            Me.columnTranType.MaxLength = 50
            Me.columnTranDocNo.MaxLength = 50
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 15
            Me.columnCurrency.MaxLength = 10
            Me.columnNaration.MaxLength = 50
            Me.columnUOM.MaxLength = 50
            Me.columnDateName.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newtbl_Inv_Tran_Out1Row() As tbl_Inv_Tran_Out1Row
            Return CType(Me.NewRow,tbl_Inv_Tran_Out1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Inv_Tran_Out1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Inv_Tran_Out1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Inv_Tran_Out1RowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_Out1RowChanged(Me, New tbl_Inv_Tran_Out1RowChangeEvent(CType(e.Row,tbl_Inv_Tran_Out1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Inv_Tran_Out1RowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_Out1RowChanging(Me, New tbl_Inv_Tran_Out1RowChangeEvent(CType(e.Row,tbl_Inv_Tran_Out1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Inv_Tran_Out1RowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_Out1RowDeleted(Me, New tbl_Inv_Tran_Out1RowChangeEvent(CType(e.Row,tbl_Inv_Tran_Out1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Inv_Tran_Out1RowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Inv_Tran_Out1RowDeleting(Me, New tbl_Inv_Tran_Out1RowChangeEvent(CType(e.Row,tbl_Inv_Tran_Out1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removetbl_Inv_Tran_Out1Row(ByVal row As tbl_Inv_Tran_Out1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSRptGatePasses = New DSRptGatePasses()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Inv_Tran_Out1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Inv_Tran_OutRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Inv_Tran_Out As tbl_Inv_Tran_OutDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Inv_Tran_Out = CType(Me.Table,tbl_Inv_Tran_OutDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DayNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.DayNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DayNo' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.DayNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranOutID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out.TranOutIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.TranOutIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.SIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.SIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SDNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.SDNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDNo' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.SDNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.TranTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranType' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.TranTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranDocNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.TranDocNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranDocNo' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.TranDocNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out.CodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Currency' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPU() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.PPUColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPU' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.PPUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.POHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POH' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.POHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.POColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.PODNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODNo' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.PODNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReqID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.ReqIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReqID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.ReqIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DemandID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.DemandIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.DemandIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocalCustID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.LocalCustIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocalCustID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.LocalCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompanyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.CompanyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.CompanyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtCustID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.ExtCustIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtCustID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.ExtCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupplierID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.SupplierIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplierID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.SupplierIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Naration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.NarationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Naration' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.NarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranInID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.TranInIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranInID' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.TranInIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastEditDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.LastEditDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastEditDate' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.LastEditDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreationDate' in table 'tbl_Inv_Tran_Out' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateName() As Date
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out.DateNameColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out.DateNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDayNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.DayNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDayNoNull()
            Me(Me.tabletbl_Inv_Tran_Out.DayNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.SIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.SIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.SDNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDNoNull()
            Me(Me.tabletbl_Inv_Tran_Out.SDNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranTypeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.TranTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranTypeNull()
            Me(Me.tabletbl_Inv_Tran_Out.TranTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranDocNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.TranDocNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranDocNoNull()
            Me(Me.tabletbl_Inv_Tran_Out.TranDocNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrencyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrencyNull()
            Me(Me.tabletbl_Inv_Tran_Out.CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPUNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.PPUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPUNull()
            Me(Me.tabletbl_Inv_Tran_Out.PPUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tabletbl_Inv_Tran_Out.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOHNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.POHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOHNull()
            Me(Me.tabletbl_Inv_Tran_Out.POHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONull()
            Me(Me.tabletbl_Inv_Tran_Out.POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.PODNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODNoNull()
            Me(Me.tabletbl_Inv_Tran_Out.PODNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReqIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.ReqIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReqIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.ReqIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDemandIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.DemandIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDemandIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.DemandIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocalCustIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.LocalCustIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocalCustIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.LocalCustIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompanyIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.CompanyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompanyIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.CompanyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExtCustIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.ExtCustIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExtCustIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.ExtCustIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplierIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.SupplierIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplierIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.SupplierIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNarationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.NarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNarationNull()
            Me(Me.tabletbl_Inv_Tran_Out.NarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tabletbl_Inv_Tran_Out.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranInIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.TranInIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranInIDNull()
            Me(Me.tabletbl_Inv_Tran_Out.TranInIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastEditDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.LastEditDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastEditDateNull()
            Me(Me.tabletbl_Inv_Tran_Out.LastEditDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabletbl_Inv_Tran_Out.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Inv_Tran_Out1Row
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Inv_Tran_Out1 As tbl_Inv_Tran_Out1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Inv_Tran_Out1 = CType(Me.Table,tbl_Inv_Tran_Out1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DayNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.DayNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DayNo' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.DayNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranOutID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out1.TranOutIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.TranOutIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.SIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.SIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SDNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.SDNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDNo' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.SDNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.TranTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranType' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.TranTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranDocNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.TranDocNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranDocNo' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.TranDocNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out1.CodeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Currency() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.CurrencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Currency' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.CurrencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPU() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.PPUColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPU' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.PPUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.QtyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POH() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.POHColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POH' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.POHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.POColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PO' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PODNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.PODNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PODNo' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.PODNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReqID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.ReqIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReqID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.ReqIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DemandID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.DemandIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DemandID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.DemandIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocalCustID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.LocalCustIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocalCustID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.LocalCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompanyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.CompanyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.CompanyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExtCustID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.ExtCustIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtCustID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.ExtCustIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SupplierID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.SupplierIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SupplierID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.SupplierIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Naration() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.NarationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Naration' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.NarationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UOM() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.UOMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UOM' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.UOMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TranInID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.TranInIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TranInID' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.TranInIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastEditDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.LastEditDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastEditDate' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.LastEditDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreationDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Inv_Tran_Out1.CreationDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreationDate' in table 'tbl_Inv_Tran_Out1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.CreationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateName() As Date
            Get
                Return CType(Me(Me.tabletbl_Inv_Tran_Out1.DateNameColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_Inv_Tran_Out1.DateNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDayNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.DayNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDayNoNull()
            Me(Me.tabletbl_Inv_Tran_Out1.DayNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.SIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.SIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.SDNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDNoNull()
            Me(Me.tabletbl_Inv_Tran_Out1.SDNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranTypeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.TranTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranTypeNull()
            Me(Me.tabletbl_Inv_Tran_Out1.TranTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranDocNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.TranDocNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranDocNoNull()
            Me(Me.tabletbl_Inv_Tran_Out1.TranDocNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrencyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.CurrencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrencyNull()
            Me(Me.tabletbl_Inv_Tran_Out1.CurrencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPUNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.PPUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPUNull()
            Me(Me.tabletbl_Inv_Tran_Out1.PPUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtyNull()
            Me(Me.tabletbl_Inv_Tran_Out1.QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOHNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.POHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOHNull()
            Me(Me.tabletbl_Inv_Tran_Out1.POHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPONull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPONull()
            Me(Me.tabletbl_Inv_Tran_Out1.POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPODNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.PODNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPODNoNull()
            Me(Me.tabletbl_Inv_Tran_Out1.PODNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReqIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.ReqIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReqIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.ReqIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDemandIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.DemandIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDemandIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.DemandIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocalCustIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.LocalCustIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocalCustIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.LocalCustIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompanyIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.CompanyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompanyIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.CompanyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExtCustIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.ExtCustIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExtCustIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.ExtCustIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplierIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.SupplierIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplierIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.SupplierIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNarationNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.NarationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNarationNull()
            Me(Me.tabletbl_Inv_Tran_Out1.NarationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUOMNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.UOMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUOMNull()
            Me(Me.tabletbl_Inv_Tran_Out1.UOMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTranInIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.TranInIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTranInIDNull()
            Me(Me.tabletbl_Inv_Tran_Out1.TranInIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastEditDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.LastEditDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastEditDateNull()
            Me(Me.tabletbl_Inv_Tran_Out1.LastEditDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreationDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Inv_Tran_Out1.CreationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreationDateNull()
            Me(Me.tabletbl_Inv_Tran_Out1.CreationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tbl_Inv_Tran_OutRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Inv_Tran_OutRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Inv_Tran_OutRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Inv_Tran_OutRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tbl_Inv_Tran_Out1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Inv_Tran_Out1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Inv_Tran_Out1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Inv_Tran_Out1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSRptGatePassesTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Inv_Tran_OutTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Inv_Tran_Out"
            tableMapping.ColumnMappings.Add("DayNo", "DayNo")
            tableMapping.ColumnMappings.Add("TranOutID", "TranOutID")
            tableMapping.ColumnMappings.Add("SID", "SID")
            tableMapping.ColumnMappings.Add("SDNo", "SDNo")
            tableMapping.ColumnMappings.Add("TranType", "TranType")
            tableMapping.ColumnMappings.Add("TranDocNo", "TranDocNo")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Currency", "Currency")
            tableMapping.ColumnMappings.Add("PPU", "PPU")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("POH", "POH")
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("PODNo", "PODNo")
            tableMapping.ColumnMappings.Add("ReqID", "ReqID")
            tableMapping.ColumnMappings.Add("DemandID", "DemandID")
            tableMapping.ColumnMappings.Add("LocalCustID", "LocalCustID")
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID")
            tableMapping.ColumnMappings.Add("ExtCustID", "ExtCustID")
            tableMapping.ColumnMappings.Add("SupplierID", "SupplierID")
            tableMapping.ColumnMappings.Add("Naration", "Naration")
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("TranInID", "TranInID")
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate")
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate")
            tableMapping.ColumnMappings.Add("DateName", "DateName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.T"& _ 
                "ranOutID, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.SDNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      t"& _ 
                "bl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.Code, tbl"& _ 
                "_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.PPU, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tbl_Inv_Tr"& _ 
                "an_Out.Qty, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, t"& _ 
                "bl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.DemandID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tbl_In"& _ 
                "v_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.ExtCustID, "& _ 
                "tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.TranInID, tbl_In"& _ 
                "v_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.CreationDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MTP') AND (tbl_Inv_Tran_Out.PO IS NULL) A"& _ 
                "ND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_Ou"& _ 
                "t.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "(tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl_"& _ 
                "Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateNa"& _ 
                "me = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.C"& _ 
                "ode, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.CreationDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.E"& _ 
                "xtCustID, tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.LocalCustID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out."& _ 
                "PODNo, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out"& _ 
                ".SID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.TranDocNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.TranInID, tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.T"& _ 
                "ranType, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MOGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.POH IS NULL) AND (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SI"& _ 
                "D IS NULL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       AND (tbl_Inv_Tran_Out.SDNo IS NULL) AND (tbl_"& _ 
                "Inv_Tran_Date.DateName = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'PRGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MRGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MLGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.C"& _ 
                "ode, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.CreationDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.E"& _ 
                "xtCustID, tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.LocalCustID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out."& _ 
                "PODNo, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out"& _ 
                ".SID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.TranDocNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.TranInID, tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.T"& _ 
                "ranType, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MSGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.POH IS NULL) AND (tbl_Inv_Tran_Out.TranInID IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    (tbl_Inv_Tran_Date.DateName = ?)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Ou"& _ 
                "t.TranOutID, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.TranT"& _ 
                "ype, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.Cod"& _ 
                "e, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_In"& _ 
                "v_Tran_Out.POH, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out"& _ 
                ".PODNo, tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.Loca"& _ 
                "lCustID, tbl_Inv_Tran_Out.CompanyID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out"& _ 
                ".ExtCustID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran"& _ 
                "_Out.UserID, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.CreationDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       tbl_Inv_Tran_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_Inv_Tran_Out.DayNo "& _ 
                "= tbl_Inv_Tran_Date.DayNo AND (tbl_Inv_Tran_Out.TranType = 'MBRGP') AND (tbl_Inv"& _ 
                "_Tran_Out.PO IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_Inv_Tran_Out.PODNo IS "& _ 
                "NULL) AND (tbl_Inv_Tran_Out.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AN"& _ 
                "D (tbl_Inv_Tran_Out.TranInID IS NOT NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_In"& _ 
                "v_Tran_Out.SID IS NULL) AND (tbl_Inv_Tran_Out.SDNo IS NULL) AND (tbl_Inv_Tran_Da"& _ 
                "te.DateName = ?)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy3(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy3(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy4(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy4(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy5(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy5(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_OutDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_OutDataTable = New DSRptGatePasses.tbl_Inv_Tran_OutDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Inv_Tran_Out1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Inv_Tran_Out1"
            tableMapping.ColumnMappings.Add("DayNo", "DayNo")
            tableMapping.ColumnMappings.Add("TranOutID", "TranOutID")
            tableMapping.ColumnMappings.Add("SID", "SID")
            tableMapping.ColumnMappings.Add("SDNo", "SDNo")
            tableMapping.ColumnMappings.Add("TranType", "TranType")
            tableMapping.ColumnMappings.Add("TranDocNo", "TranDocNo")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Currency", "Currency")
            tableMapping.ColumnMappings.Add("PPU", "PPU")
            tableMapping.ColumnMappings.Add("Qty", "Qty")
            tableMapping.ColumnMappings.Add("POH", "POH")
            tableMapping.ColumnMappings.Add("PO", "PO")
            tableMapping.ColumnMappings.Add("PODNo", "PODNo")
            tableMapping.ColumnMappings.Add("ReqID", "ReqID")
            tableMapping.ColumnMappings.Add("DemandID", "DemandID")
            tableMapping.ColumnMappings.Add("LocalCustID", "LocalCustID")
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID")
            tableMapping.ColumnMappings.Add("ExtCustID", "ExtCustID")
            tableMapping.ColumnMappings.Add("SupplierID", "SupplierID")
            tableMapping.ColumnMappings.Add("Naration", "Naration")
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("UOM", "UOM")
            tableMapping.ColumnMappings.Add("TranInID", "TranInID")
            tableMapping.ColumnMappings.Add("LastEditDate", "LastEditDate")
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate")
            tableMapping.ColumnMappings.Add("DateName", "DateName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.FS_ERP_MM.My.MySettings.Default.Con
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.T"& _ 
                "ranOutID, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.SDNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      t"& _ 
                "bl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.Code, tbl"& _ 
                "_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.PPU, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tbl_Inv_Tr"& _ 
                "an_Out.Qty, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, t"& _ 
                "bl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.DemandID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      tbl_In"& _ 
                "v_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.ExtCustID, "& _ 
                "tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.TranInID, tbl_In"& _ 
                "v_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.CreationDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MTP') AND (tbl_Inv_Tran_Out.PO IS NULL) A"& _ 
                "ND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_Ou"& _ 
                "t.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "(tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl_"& _ 
                "Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateNa"& _ 
                "me = ?)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.C"& _ 
                "ode, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.CreationDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.E"& _ 
                "xtCustID, tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.LocalCustID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out."& _ 
                "PODNo, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out"& _ 
                ".SID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.TranDocNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.TranInID, tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.T"& _ 
                "ranType, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MOGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.POH IS NULL) AND (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SI"& _ 
                "D IS NULL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       AND (tbl_Inv_Tran_Out.SDNo IS NULL) AND (tbl_"& _ 
                "Inv_Tran_Date.DateName = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'PRGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MRGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT     tbl_Inv_Tran_Out.Code, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.Cr"& _ 
                "eationDate, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DayNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.ExtCustID, tbl_Inv_Tran_Out.L"& _ 
                "astEditDate, tbl_Inv_Tran_Out.LocalCustID, tbl_Inv_Tran_Out.Naration, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "              tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out.PODNo, tbl_Inv_Tran_Out.POH,"& _ 
                " tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_Inv_Tran_Out.ReqID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.Suppl"& _ 
                "ierID, tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.TranType, tbl_Inv_Tran_Out.UO"& _ 
                "M, tbl_Inv_Tran_Out.UserID, tbl_Inv_Tran_Date.DateName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MLGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                " (tbl_Inv_Tran_Out.TranInID IS NULL) AND (tbl_Inv_Tran_Out.SID IS NULL) AND (tbl"& _ 
                "_Inv_Tran_Out.SDNo IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Date.DateN"& _ 
                "ame = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Out.C"& _ 
                "ode, tbl_Inv_Tran_Out.CompanyID, tbl_Inv_Tran_Out.CreationDate, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "        tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.E"& _ 
                "xtCustID, tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.LocalCustID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out."& _ 
                "PODNo, tbl_Inv_Tran_Out.POH, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out"& _ 
                ".SID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.TranDocNo, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "       tbl_Inv_Tran_Out.TranInID, tbl_Inv_Tran_Out.TranOutID, tbl_Inv_Tran_Out.T"& _ 
                "ranType, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         tbl_Inv_Tra"& _ 
                "n_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     tbl_Inv_Tran_Out.DayNo = tbl_Inv_Tran_Date.D"& _ 
                "ayNo AND (tbl_Inv_Tran_Out.TranType = 'MSGP') AND (tbl_Inv_Tran_Out.PO IS NULL) "& _ 
                "AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (tbl_Inv_Tran_Out.PODNo IS NULL) AND (tbl_Inv_Tran_O"& _ 
                "ut.POH IS NULL) AND (tbl_Inv_Tran_Out.TranInID IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "    (tbl_Inv_Tran_Date.DateName = ?)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        tbl_Inv_Tran_Out.DayNo, tbl_Inv_Tran_Date.DateName, tbl_Inv_Tran_Ou"& _ 
                "t.TranOutID, tbl_Inv_Tran_Out.SID, tbl_Inv_Tran_Out.SDNo, tbl_Inv_Tran_Out.TranT"& _ 
                "ype, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out.TranDocNo, tbl_Inv_Tran_Out.Cod"& _ 
                "e, tbl_Inv_Tran_Out.Currency, tbl_Inv_Tran_Out.PPU, tbl_Inv_Tran_Out.Qty, tbl_In"& _ 
                "v_Tran_Out.POH, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out.PO, tbl_Inv_Tran_Out"& _ 
                ".PODNo, tbl_Inv_Tran_Out.ReqID, tbl_Inv_Tran_Out.DemandID, tbl_Inv_Tran_Out.Loca"& _ 
                "lCustID, tbl_Inv_Tran_Out.CompanyID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         tbl_Inv_Tran_Out"& _ 
                ".ExtCustID, tbl_Inv_Tran_Out.SupplierID, tbl_Inv_Tran_Out.Naration, tbl_Inv_Tran"& _ 
                "_Out.UserID, tbl_Inv_Tran_Out.UOM, tbl_Inv_Tran_Out.TranInID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         tbl_Inv_Tran_Out.LastEditDate, tbl_Inv_Tran_Out.CreationDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       tbl_Inv_Tran_Out, tbl_Inv_Tran_Date"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        tbl_Inv_Tran_Out.DayNo "& _ 
                "= tbl_Inv_Tran_Date.DayNo AND (tbl_Inv_Tran_Out.TranType = 'MBRGP') AND (tbl_Inv"& _ 
                "_Tran_Out.PO IS NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_Inv_Tran_Out.PODNo IS "& _ 
                "NULL) AND (tbl_Inv_Tran_Out.ReqID IS NULL) AND (tbl_Inv_Tran_Out.POH IS NULL) AN"& _ 
                "D (tbl_Inv_Tran_Out.TranInID IS NOT NULL) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (tbl_In"& _ 
                "v_Tran_Out.SID IS NULL) AND (tbl_Inv_Tran_Out.SDNo IS NULL) AND (tbl_Inv_Tran_Da"& _ 
                "te.DateName = ?)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DateName", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DateName", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy2(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy3(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy3(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy4(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy4(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy5(ByVal dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable, ByVal DateName As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy5(ByVal DateName As Date) As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateName,Date)
            Dim dataTable As DSRptGatePasses.tbl_Inv_Tran_Out1DataTable = New DSRptGatePasses.tbl_Inv_Tran_Out1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSRptGatePasses, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSRptGatePasses, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSRptGatePasses, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSRptGatePasses) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
